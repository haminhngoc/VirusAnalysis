0x0040a000:	jmp 0x0040a074
0x0040a074:	pusha
0x0040a075:	call 0x0040a07b
0x0040a07b:	addl %esp, $0x4<UINT8>
0x0040a07e:	call 0x0040a084
0x0040a084:	popl %ebp
0x0040a085:	subl %ebp, $0x40224d<UINT32>
0x0040a08b:	call 0x0040a317
0x0040a317:	jmp 0x0040a31c
0x0040a31c:	popl %ecx
0x0040a31d:	incl %ecx
0x0040a31e:	jmp 0x0040a310
0x0040a310:	jmp 0x0040a315
0x0040a315:	pushl %ecx
0x0040a316:	ret

0x0040a091:	jmp 0x0040a0a6
0x0040a0a6:	movw %si, $0x4647<UINT16>
0x0040a0aa:	call 0x0040a0b0
0x0040a0b0:	popl %ecx
0x0040a0b1:	leal %edx, 0x4022d2(%ebp)
0x0040a0b7:	call 0x0040a0bd
0x0040a0bd:	popl %eax
0x0040a0be:	movw %di, $0x734d<UINT16>
0x0040a0c2:	call 0x0040a2fe
0x0040a2fe:	popl %ecx
0x0040a2ff:	pushl %edx
0x0040a300:	pushl %ebp
0x0040a301:	leal %eax, 0x402366(%ebp)
0x0040a307:	pushl %eax
0x0040a308:	subl %eax, %eax
0x0040a30a:	pushl %fs:(%eax)
0x0040a30d:	movl %fs:(%eax), %esp
0x0040a0c7:	leal %edx, -7(%edx)
0x0040a0ca:	call 0x0040a0d0
0x0040a0d0:	popl %ebx
0x0040a0d1:	pushl $0x9ae2ffcc<UINT32>
0x0040a0d6:	null
